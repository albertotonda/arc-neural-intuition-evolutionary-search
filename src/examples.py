verify_007bbfb7 = """
fill(canvas(ZERO, multiply(shape(I), shape(I))), other(palette(I), ZERO), mapply(lbind(shift, ofcolor(I, other(palette(I), ZERO))), apply(rbind(multiply, shape(I)), ofcolor(I, other(palette(I), ZERO)))))
"""

verify_00d62c1b = """
fill(I, FOUR, mfilter(colorfilter(objects(I, T, F, F), mostcolor(I)), compose(flip, rbind(bordering, I))))
"""

verify_017c7c7b = """
fill(canvas(ZERO, astuple(add(height(I), halve(height(I))), width(I))), TWO, mapply(lbind(shift, ofcolor(I, other(palette(I), ZERO))), apply(toivec, interval(ZERO, increment(add(height(I), halve(height(I)))), vperiod(asobject(I))))))
"""

verify_025d127b = """
paint(fill(I, mostcolor(I), merge(objects(I, T, T, T))), mapply(fork(shift, fork(combine, compose(rbind(argmax, rightmost), fork(colorfilter, compose(rbind(rbind(rbind(objects, F), F), T), fork(paint, compose(lbind(canvas, mostcolor(I)), shape), normalize)), color)), chain(rbind(shift, RIGHT), merge, fork(remove, compose(rbind(argmax, rightmost), fork(colorfilter, compose(rbind(rbind(rbind(objects, F), F), T), fork(paint, compose(lbind(canvas, mostcolor(I)), shape), normalize)), color)), fork(colorfilter, compose(rbind(rbind(rbind(objects, F), F), T), fork(paint, compose(lbind(canvas, mostcolor(I)), shape), normalize)), color)))), ulcorner), objects(I, T, T, T)))
"""

verify_045e512c = """
paint(I, mapply(fork(recolor, compose(rbind(argmin, rbind(equality, mostcolor(I))), chain(palette, rbind(toobject, I), compose(lbind(shift, toindices(argmax(objects(I, T, T, T), size))), compose(crement, lbind(multiply, astuple(height(argmax(objects(I, T, T, T), size)), width(argmax(objects(I, T, T, T), size)))))))), chain(lbind(mapply, lbind(shift, toindices(argmax(objects(I, T, T, T), size)))), rbind(apply, interval(ONE, increment(maximum(astuple(divide(height(I), height(argmax(objects(I, T, T, T), size))), divide(width(I), width(argmax(objects(I, T, T, T), size)))))), ONE)), compose(lbind(rbind, multiply), compose(crement, lbind(multiply, astuple(height(argmax(objects(I, T, T, T), size)), width(argmax(objects(I, T, T, T), size)))))))), neighbors(ORIGIN)))
"""

verify_0520fde7 = """
fill(canvas(ZERO, shape(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), lefthalf, tophalf), I))), TWO, intersection(ofcolor(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), lefthalf, tophalf), I), other(palette(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), lefthalf, tophalf), I)), ZERO)), ofcolor(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), righthalf, bottomhalf), I), other(palette(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), righthalf, bottomhalf), I)), ZERO))))
"""

verify_05269061 = """
paint(I, mapply(fork(combine, chain(lbind(mapply, fork(recolor, first, last)), rbind(sfilter, compose(flip, matcher(first, ZERO))), compose(lbind(pair, apply(mostcolor, branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE)))), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE))), combine(apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), lbind(astuple, decrement(maximum(shape(I))))), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), compose(rbind(astuple, decrement(maximum(shape(I)))), lbind(subtract, decrement(maximum(shape(I)))))), interval(ONE, maximum(shape(I)), ONE)))))))), compose(call(chain(rbind(lbind(chain, lbind(apply, last)), chain(rbind(compose, first), lbind(rbind, greater), decrement)), lbind(lbind, sfilter), lbind(pair, interval(ZERO, size(branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE)))), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE))), combine(apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), lbind(astuple, decrement(maximum(shape(I))))), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), compose(rbind(astuple, decrement(maximum(shape(I)))), lbind(subtract, decrement(maximum(shape(I)))))), interval(ONE, maximum(shape(I)), ONE))))))), ONE))), branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE)))), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE))), combine(apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), lbind(astuple, decrement(maximum(shape(I))))), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), compose(rbind(astuple, decrement(maximum(shape(I)))), lbind(subtract, decrement(maximum(shape(I)))))), interval(ONE, maximum(shape(I)), ONE))))))), rbind(multiply, size(sfilter(apply(mostcolor, branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE)))), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE))), combine(apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), lbind(astuple, decrement(maximum(shape(I))))), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), compose(rbind(astuple, decrement(maximum(shape(I)))), lbind(subtract, decrement(maximum(shape(I)))))), interval(ONE, maximum(shape(I)), ONE))))))), compose(flip, matcher(identity, ZERO)))))))), chain(lbind(mapply, fork(recolor, first, last)), rbind(sfilter, compose(flip, matcher(first, ZERO))), compose(rbind(pair, branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE)))), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE))), combine(apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), lbind(astuple, decrement(maximum(shape(I))))), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), compose(rbind(astuple, decrement(maximum(shape(I)))), lbind(subtract, decrement(maximum(shape(I)))))), interval(ONE, maximum(shape(I)), ONE))))))), compose(call(chain(rbind(lbind(chain, lbind(apply, last)), chain(rbind(compose, first), lbind(rbind, greater), decrement)), lbind(lbind, sfilter), lbind(pair, interval(ZERO, size(branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE)))), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE))), combine(apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), lbind(astuple, decrement(maximum(shape(I))))), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), compose(rbind(astuple, decrement(maximum(shape(I)))), lbind(subtract, decrement(maximum(shape(I)))))), interval(ONE, maximum(shape(I)), ONE))))))), ONE))), apply(mostcolor, branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE)))), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE))), combine(apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), lbind(astuple, decrement(maximum(shape(I))))), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), compose(rbind(astuple, decrement(maximum(shape(I)))), lbind(subtract, decrement(maximum(shape(I)))))), interval(ONE, maximum(shape(I)), ONE)))))))), rbind(multiply, size(sfilter(apply(mostcolor, branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE)))), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE))), combine(apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), lbind(astuple, decrement(maximum(shape(I))))), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), compose(rbind(astuple, decrement(maximum(shape(I)))), lbind(subtract, decrement(maximum(shape(I)))))), interval(ONE, maximum(shape(I)), ONE))))))), compose(flip, matcher(identity, ZERO))))))))), interval(ZERO, increment(divide(double(maximum(shape(I))), size(sfilter(apply(mostcolor, branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE))), apply(chain(rbind(toobject, I), rbind(shoot, DOWN), tojvec), interval(ZERO, maximum(shape(I)), ONE)), branch(call(matcher(rbind(valmax, numcolors), ONE), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE)))), combine(apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), toivec), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, UP_RIGHT), lbind(astuple, decrement(maximum(shape(I))))), interval(ONE, maximum(shape(I)), ONE))), combine(apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), lbind(astuple, decrement(maximum(shape(I))))), interval(ZERO, maximum(shape(I)), ONE)), apply(chain(rbind(toobject, I), rbind(shoot, NEG_UNITY), compose(rbind(astuple, decrement(maximum(shape(I)))), lbind(subtract, decrement(maximum(shape(I)))))), interval(ONE, maximum(shape(I)), ONE))))))), compose(flip, matcher(identity, ZERO)))))), ONE)))
"""

verify_05f2a901 = """
move(I, other(objects(I, T, T, T), extract(objects(I, T, T, T), fork(equality, size, fork(multiply, height, width)))), gravitate(other(objects(I, T, T, T), extract(objects(I, T, T, T), fork(equality, size, fork(multiply, height, width)))), extract(objects(I, T, T, T), fork(equality, size, fork(multiply, height, width)))))
"""

verify_06df4c85 = """
paint(paint(I, mapply(fork(recolor, color, chain(merge, rbind(sfilter, fork(either, vline, hline)), compose(fork(lbind(prapply, connect), identity, identity), toindices))), apply(compose(lbind(mfilter, sfilter(objects(I, T, F, F), compose(flip, fork(either, matcher(color, color(merge(frontiers(I)))), matcher(color, mostcolor(difference(asobject(I), merge(frontiers(I))))))))), lbind(matcher, color)), palette(merge(sfilter(objects(I, T, F, F), compose(flip, fork(either, matcher(color, color(merge(frontiers(I)))), matcher(color, mostcolor(difference(asobject(I), merge(frontiers(I))))))))))))), merge(frontiers(I)))
"""

verify_08ed6ac7 = """
dmirror(apply(fork(combine, compose(lbind(repeat, mostcommon(first(I))), compose(size, rbind(sfilter, matcher(identity, mostcommon(first(I)))))), fork(repeat, compose(chain(last, lbind(extract, combine(repeat(astuple(height(I), mostcommon(first(I))), ONE), pair(order(dedupe(apply(compose(size, rbind(sfilter, matcher(identity, mostcommon(first(I))))), dmirror(I))), identity), interval(ONE, increment(increment(size(order(dedupe(apply(compose(size, rbind(sfilter, matcher(identity, mostcommon(first(I))))), dmirror(I))), identity)))), ONE)))), lbind(matcher, first)), compose(size, rbind(sfilter, matcher(identity, mostcommon(first(I)))))), fork(subtract, height, compose(size, rbind(sfilter, matcher(identity, mostcommon(first(I)))))))), dmirror(I)))
"""

verify_09629e4f = """
paint(canvas(color(merge(frontiers(I))), shape(I)), mapply(fork(recolor, first, chain(lbind(shift, toindices(normalize(argmin(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, T, T), numcolors)))), rbind(multiply, astuple(increment(increment(size(sfilter(frontiers(I), hline)))), increment(increment(size(sfilter(frontiers(I), vline)))))), last)), normalize(argmin(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, T, T), numcolors))))
"""

verify_0962bcdd = """
paint(paint(I, mapply(fork(recolor, mostcolor, compose(lbind(mapply, dneighbors), toindices)), objects(I, F, T, T))), mapply(fork(recolor, leastcolor, fork(combine, fork(connect, compose(decrement, ulcorner), compose(increment, lrcorner)), compose(hmirror, fork(connect, compose(decrement, ulcorner), compose(increment, lrcorner))))), objects(I, F, T, T)))
"""

verify_0a938d79 = """
call(branch(portrait(I), dmirror, identity), paint(call(branch(portrait(I), dmirror, identity), I), combine(recolor(color(argmin(objects(call(branch(portrait(I), dmirror, identity), I), T, F, T), leftmost)), mapply(compose(vfrontier, tojvec), interval(leftmost(argmin(objects(call(branch(portrait(I), dmirror, identity), I), T, F, T), leftmost)), multiply(THREE, TEN), double(subtract(leftmost(argmax(objects(call(branch(portrait(I), dmirror, identity), I), T, F, T), leftmost)), leftmost(argmin(objects(call(branch(portrait(I), dmirror, identity), I), T, F, T), leftmost))))))), recolor(color(argmax(objects(call(branch(portrait(I), dmirror, identity), I), T, F, T), leftmost)), mapply(compose(vfrontier, tojvec), interval(leftmost(argmax(objects(call(branch(portrait(I), dmirror, identity), I), T, F, T), leftmost)), multiply(THREE, TEN), double(subtract(leftmost(argmax(objects(call(branch(portrait(I), dmirror, identity), I), T, F, T), leftmost)), leftmost(argmin(objects(call(branch(portrait(I), dmirror, identity), I), T, F, T), leftmost))))))))))
"""

verify_0b148d64 = """
subgrid(argmin(partition(I), fork(multiply, height, width)), I)
"""

verify_0ca9ddb6 = """
fill(fill(I, SEVEN, mapply(dneighbors, ofcolor(I, ONE))), FOUR, mapply(ineighbors, ofcolor(I, TWO)))
"""

verify_0d3d703e = """
switch(switch(switch(switch(I, THREE, FOUR), EIGHT, NINE), TWO, SIX), ONE, FIVE)
"""

verify_0dfd9992 = """
paint(I, mapply(lbind(shift, sfilter(asobject(I), compose(flip, matcher(first, argmin(sfilter(palette(I), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), valmin(palette(I), compose(size, lbind(colorfilter, objects(I, T, F, F)))))), lbind(colorcount, I)))))), apply(lbind(multiply, astuple(hperiod(asobject(sfilter(dmirror(I), compose(flip, lbind(contained, argmin(sfilter(palette(I), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), valmin(palette(I), compose(size, lbind(colorfilter, objects(I, T, F, F)))))), lbind(colorcount, I))))))), hperiod(asobject(sfilter(I, compose(flip, lbind(contained, argmin(sfilter(palette(I), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), valmin(palette(I), compose(size, lbind(colorfilter, objects(I, T, F, F)))))), lbind(colorcount, I))))))))), mapply(neighbors, neighbors(ORIGIN)))))
"""

verify_0e206a2e = """
call(chain(chain(chain(rot270, fork(paint, identity, compose(rbind(mapply, apply(normalize, sfilter(objects(I, F, F, T), matcher(numcolors, FOUR)))), chain(lbind(lbind(fork, mapply), compose(lbind(lbind, shift), fork(shift, identity, chain(invert, ulcorner, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor)))))), rbind(compose, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor))), lbind(lbind, occurrences)))), rot90), chain(rot180, fork(paint, identity, compose(rbind(mapply, apply(normalize, sfilter(objects(I, F, F, T), matcher(numcolors, FOUR)))), chain(lbind(lbind(fork, mapply), compose(lbind(lbind, shift), fork(shift, identity, chain(invert, ulcorner, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor)))))), rbind(compose, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor))), lbind(lbind, occurrences)))), rot180), chain(rot90, fork(paint, identity, compose(rbind(mapply, apply(normalize, sfilter(objects(I, F, F, T), matcher(numcolors, FOUR)))), chain(lbind(lbind(fork, mapply), compose(lbind(lbind, shift), fork(shift, identity, chain(invert, ulcorner, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor)))))), rbind(compose, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor))), lbind(lbind, occurrences)))), rot270)), chain(chain(vmirror, fork(paint, identity, compose(rbind(mapply, apply(normalize, sfilter(objects(I, F, F, T), matcher(numcolors, FOUR)))), chain(lbind(lbind(fork, mapply), compose(lbind(lbind, shift), fork(shift, identity, chain(invert, ulcorner, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor)))))), rbind(compose, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor))), lbind(lbind, occurrences)))), vmirror), chain(hmirror, fork(paint, identity, compose(rbind(mapply, apply(normalize, sfilter(objects(I, F, F, T), matcher(numcolors, FOUR)))), chain(lbind(lbind(fork, mapply), compose(lbind(lbind, shift), fork(shift, identity, chain(invert, ulcorner, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor)))))), rbind(compose, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor))), lbind(lbind, occurrences)))), hmirror), chain(cmirror, fork(paint, identity, compose(rbind(mapply, apply(normalize, sfilter(objects(I, F, F, T), matcher(numcolors, FOUR)))), chain(lbind(lbind(fork, mapply), compose(lbind(lbind, shift), fork(shift, identity, chain(invert, ulcorner, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor)))))), rbind(compose, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor))), lbind(lbind, occurrences)))), cmirror)), compose(chain(dmirror, fork(paint, identity, compose(rbind(mapply, apply(normalize, sfilter(objects(I, F, F, T), matcher(numcolors, FOUR)))), chain(lbind(lbind(fork, mapply), compose(lbind(lbind, shift), fork(shift, identity, chain(invert, ulcorner, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor)))))), rbind(compose, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor))), lbind(lbind, occurrences)))), dmirror), chain(identity, fork(paint, identity, compose(rbind(mapply, apply(normalize, sfilter(objects(I, F, F, T), matcher(numcolors, FOUR)))), chain(lbind(lbind(fork, mapply), compose(lbind(lbind, shift), fork(shift, identity, chain(invert, ulcorner, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor)))))), rbind(compose, fork(sfilter, identity, chain(lbind(compose, flip), lbind(matcher, first), mostcolor))), lbind(lbind, occurrences)))), identity))), cover(I, merge(sfilter(objects(I, F, F, T), matcher(numcolors, FOUR)))))
"""

verify_10fcaaa3 = """
underfill(vconcat(hconcat(I, I), hconcat(I, I)), EIGHT, mapply(ineighbors, difference(asindices(vconcat(hconcat(I, I), hconcat(I, I))), ofcolor(vconcat(hconcat(I, I), hconcat(I, I)), mostcolor(I)))))
"""

verify_11852cab = """
paint(I, mapply(chain(fork(combine, fork(combine, rbind(sfilter, compose(flip, matcher(first, mostcolor(I)))), compose(rbind(sfilter, compose(flip, matcher(first, mostcolor(I)))), dmirror)), fork(combine, compose(rbind(sfilter, compose(flip, matcher(first, mostcolor(I)))), cmirror), fork(combine, compose(rbind(sfilter, compose(flip, matcher(first, mostcolor(I)))), hmirror), compose(rbind(sfilter, compose(flip, matcher(first, mostcolor(I)))), vmirror)))), rbind(toobject, I), compose(backdrop, fork(insert, rbind(add, multiply(FOUR, UNITY)), initset))), sfilter(product(interval(ONE, subtract(height(I), THREE), ONE), interval(ONE, subtract(width(I), THREE), ONE)), chain(fork(both, fork(both, compose(fork(both, compose(compose(chain(positive, size, lbind(remove, mostcolor(I))), palette), lbind(toobject, box(asindices(canvas(ZERO, multiply(FIVE, UNITY)))))), fork(both, compose(compose(chain(positive, size, lbind(remove, mostcolor(I))), palette), lbind(toobject, inbox(asindices(canvas(ZERO, multiply(FIVE, UNITY)))))), compose(compose(chain(positive, size, lbind(remove, mostcolor(I))), palette), lbind(toobject, initset(center(asindices(canvas(ZERO, multiply(FIVE, UNITY))))))))), trim), matcher(compose(palette, fork(toobject, compose(box, asindices), identity)), initset(mostcolor(I)))), fork(both, matcher(chain(palette, lbind(toobject, sfilter(asindices(canvas(ZERO, multiply(FIVE, UNITY))), chain(flip, even, fork(add, first, last)))), trim), initset(mostcolor(I))), matcher(chain(compose(minimum, shape), merge, fgpartition), FIVE))), rbind(lbind(crop, I), multiply(SEVEN, UNITY)), decrement))))
"""

verify_1190e5a7 = """
canvas(mostcolor(toobject(corners(asindices(I)), I)), increment(apply(size, astuple(difference(frontiers(fill(I, argmin(palette(I), rbind(equality, mostcolor(toobject(corners(asindices(I)), I)))), difference(asindices(I), ofcolor(I, mostcolor(toobject(corners(asindices(I)), I)))))), sfilter(frontiers(fill(I, argmin(palette(I), rbind(equality, mostcolor(toobject(corners(asindices(I)), I)))), difference(asindices(I), ofcolor(I, mostcolor(toobject(corners(asindices(I)), I)))))), vline)), sfilter(frontiers(fill(I, argmin(palette(I), rbind(equality, mostcolor(toobject(corners(asindices(I)), I)))), difference(asindices(I), ofcolor(I, mostcolor(toobject(corners(asindices(I)), I)))))), vline)))))
"""

verify_137eaa0f = """
paint(canvas(ZERO, shape(normalize(mapply(fork(shift, identity, chain(invert, ulcorner, rbind(sfilter, matcher(first, argmin(sfilter(palette(merge(fgpartition(I))), matcher(chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity)), valmax(palette(merge(fgpartition(I))), chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity))))), lbind(colorcount, I)))))), apply(fork(combine, identity, compose(lbind(argmin, apply(initset, recolor(argmin(sfilter(palette(merge(fgpartition(I))), matcher(chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity)), valmax(palette(merge(fgpartition(I))), chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity))))), lbind(colorcount, I)), ofcolor(I, argmin(sfilter(palette(merge(fgpartition(I))), matcher(chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity)), valmax(palette(merge(fgpartition(I))), chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity))))), lbind(colorcount, I)))))), lbind(rbind, manhattan))), remove(recolor(argmin(sfilter(palette(merge(fgpartition(I))), matcher(chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity)), valmax(palette(merge(fgpartition(I))), chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity))))), lbind(colorcount, I)), ofcolor(I, argmin(sfilter(palette(merge(fgpartition(I))), matcher(chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity)), valmax(palette(merge(fgpartition(I))), chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity))))), lbind(colorcount, I)))), fgpartition(I))))))), normalize(mapply(fork(shift, identity, chain(invert, ulcorner, rbind(sfilter, matcher(first, argmin(sfilter(palette(merge(fgpartition(I))), matcher(chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity)), valmax(palette(merge(fgpartition(I))), chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity))))), lbind(colorcount, I)))))), apply(fork(combine, identity, compose(lbind(argmin, apply(initset, recolor(argmin(sfilter(palette(merge(fgpartition(I))), matcher(chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity)), valmax(palette(merge(fgpartition(I))), chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity))))), lbind(colorcount, I)), ofcolor(I, argmin(sfilter(palette(merge(fgpartition(I))), matcher(chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity)), valmax(palette(merge(fgpartition(I))), chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity))))), lbind(colorcount, I)))))), lbind(rbind, manhattan))), remove(recolor(argmin(sfilter(palette(merge(fgpartition(I))), matcher(chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity)), valmax(palette(merge(fgpartition(I))), chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity))))), lbind(colorcount, I)), ofcolor(I, argmin(sfilter(palette(merge(fgpartition(I))), matcher(chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity)), valmax(palette(merge(fgpartition(I))), chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity))))), lbind(colorcount, I)))), fgpartition(I))))))
"""

verify_150deff5 = """
trim(paint(first(call(power(fork(astuple, chain(fork(paint, identity, compose(lbind(recolor, mostcolor(I)), fork(combine, compose(lbind(recolor, TWO), rbind(ofcolor, TWO)), compose(lbind(recolor, EIGHT), rbind(ofcolor, EIGHT))))), compose(power(compose(rot90, call(compose(lbind(lbind(fork, paint), identity), fork(compose, compose(lbind(lbind, mapply), compose(lbind(lbind, shift), last)), compose(lbind(rbind, occurrences), first))), astuple(combine(recolor(mostcolor(I), remove(astuple(TWO, ONE), dneighbors(UNITY))), recolor(leastcolor(I), initset(UNITY))), recolor(TWO, connect(UNITY, astuple(THREE, ONE)))))), FOUR), power(compose(rot90, call(compose(lbind(lbind(fork, paint), identity), fork(compose, compose(lbind(lbind, mapply), compose(lbind(lbind, shift), last)), compose(lbind(rbind, occurrences), first))), astuple(combine(recolor(leastcolor(I), backdrop(insert(UNITY, initset(TWO_BY_TWO)))), recolor(mostcolor(I), difference(outbox(backdrop(insert(UNITY, initset(TWO_BY_TWO)))), insert(THREE_BY_THREE, insert(astuple(TWO, THREE), initset(astuple(THREE, TWO))))))), recolor(EIGHT, backdrop(insert(UNITY, initset(TWO_BY_TWO))))))), FOUR)), first), fork(combine, last, chain(fork(combine, compose(lbind(recolor, TWO), rbind(ofcolor, TWO)), compose(lbind(recolor, EIGHT), rbind(ofcolor, EIGHT))), compose(power(compose(rot90, call(compose(lbind(lbind(fork, paint), identity), fork(compose, compose(lbind(lbind, mapply), compose(lbind(lbind, shift), last)), compose(lbind(rbind, occurrences), first))), astuple(combine(recolor(mostcolor(I), remove(astuple(TWO, ONE), dneighbors(UNITY))), recolor(leastcolor(I), initset(UNITY))), recolor(TWO, connect(UNITY, astuple(THREE, ONE)))))), FOUR), power(compose(rot90, call(compose(lbind(lbind(fork, paint), identity), fork(compose, compose(lbind(lbind, mapply), compose(lbind(lbind, shift), last)), compose(lbind(rbind, occurrences), first))), astuple(combine(recolor(leastcolor(I), backdrop(insert(UNITY, initset(TWO_BY_TWO)))), recolor(mostcolor(I), difference(outbox(backdrop(insert(UNITY, initset(TWO_BY_TWO)))), insert(THREE_BY_THREE, insert(astuple(TWO, THREE), initset(astuple(THREE, TWO))))))), recolor(EIGHT, backdrop(insert(UNITY, initset(TWO_BY_TWO))))))), FOUR)), first))), FIVE), astuple(paint(canvas(mostcolor(I), add(TWO, shape(I))), shift(asobject(I), UNITY)), difference(initset(ORIGIN), initset(ORIGIN))))), last(call(power(fork(astuple, chain(fork(paint, identity, compose(lbind(recolor, mostcolor(I)), fork(combine, compose(lbind(recolor, TWO), rbind(ofcolor, TWO)), compose(lbind(recolor, EIGHT), rbind(ofcolor, EIGHT))))), compose(power(compose(rot90, call(compose(lbind(lbind(fork, paint), identity), fork(compose, compose(lbind(lbind, mapply), compose(lbind(lbind, shift), last)), compose(lbind(rbind, occurrences), first))), astuple(combine(recolor(mostcolor(I), remove(astuple(TWO, ONE), dneighbors(UNITY))), recolor(leastcolor(I), initset(UNITY))), recolor(TWO, connect(UNITY, astuple(THREE, ONE)))))), FOUR), power(compose(rot90, call(compose(lbind(lbind(fork, paint), identity), fork(compose, compose(lbind(lbind, mapply), compose(lbind(lbind, shift), last)), compose(lbind(rbind, occurrences), first))), astuple(combine(recolor(leastcolor(I), backdrop(insert(UNITY, initset(TWO_BY_TWO)))), recolor(mostcolor(I), difference(outbox(backdrop(insert(UNITY, initset(TWO_BY_TWO)))), insert(THREE_BY_THREE, insert(astuple(TWO, THREE), initset(astuple(THREE, TWO))))))), recolor(EIGHT, backdrop(insert(UNITY, initset(TWO_BY_TWO))))))), FOUR)), first), fork(combine, last, chain(fork(combine, compose(lbind(recolor, TWO), rbind(ofcolor, TWO)), compose(lbind(recolor, EIGHT), rbind(ofcolor, EIGHT))), compose(power(compose(rot90, call(compose(lbind(lbind(fork, paint), identity), fork(compose, compose(lbind(lbind, mapply), compose(lbind(lbind, shift), last)), compose(lbind(rbind, occurrences), first))), astuple(combine(recolor(mostcolor(I), remove(astuple(TWO, ONE), dneighbors(UNITY))), recolor(leastcolor(I), initset(UNITY))), recolor(TWO, connect(UNITY, astuple(THREE, ONE)))))), FOUR), power(compose(rot90, call(compose(lbind(lbind(fork, paint), identity), fork(compose, compose(lbind(lbind, mapply), compose(lbind(lbind, shift), last)), compose(lbind(rbind, occurrences), first))), astuple(combine(recolor(leastcolor(I), backdrop(insert(UNITY, initset(TWO_BY_TWO)))), recolor(mostcolor(I), difference(outbox(backdrop(insert(UNITY, initset(TWO_BY_TWO)))), insert(THREE_BY_THREE, insert(astuple(TWO, THREE), initset(astuple(THREE, TWO))))))), recolor(EIGHT, backdrop(insert(UNITY, initset(TWO_BY_TWO))))))), FOUR)), first))), FIVE), astuple(paint(canvas(mostcolor(I), add(TWO, shape(I))), shift(asobject(I), UNITY)), difference(initset(ORIGIN), initset(ORIGIN)))))))
"""

verify_178fcbfb = """
fill(fill(fill(I, TWO, mapply(vfrontier, ofcolor(I, TWO))), THREE, mapply(hfrontier, ofcolor(I, THREE))), ONE, mapply(hfrontier, ofcolor(I, ONE)))
"""

verify_1a07d186 = """
paint(fill(I, mostcolor(I), difference(difference(asindices(I), ofcolor(I, mostcolor(I))), mapply(toindices, frontiers(I)))), mapply(fork(mapply, compose(lbind(lbind(fork, shift), identity), lbind(rbind, gravitate)), compose(lbind(colorfilter, apply(initset, toobject(difference(difference(asindices(I), ofcolor(I, mostcolor(I))), mapply(toindices, frontiers(I))), I))), color)), frontiers(I)))
"""

verify_1b2d62fb = """
fill(canvas(ZERO, shape(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), lefthalf, tophalf), I))), EIGHT, intersection(ofcolor(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), lefthalf, tophalf), I), ZERO), ofcolor(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), righthalf, bottomhalf), I), ZERO)))
"""

verify_1b60fb0c = """
fill(I, TWO, difference(shift(shift(normalize(mapply(toindices, fgpartition(rot90(I)))), ulcorner(mapply(toindices, fgpartition(I)))), argmax(sfilter(shift(backdrop(call(power(outbox, increment(subtract(maximum(shape(mapply(toindices, fgpartition(I)))), minimum(shape(mapply(toindices, fgpartition(I))))))), shift(normalize(mapply(toindices, fgpartition(rot90(I)))), ulcorner(mapply(toindices, fgpartition(I)))))), invert(center(shift(normalize(mapply(toindices, fgpartition(rot90(I)))), ulcorner(mapply(toindices, fgpartition(I))))))), fork(equality, compose(normalize, compose(lbind(combine, mapply(toindices, fgpartition(I))), lbind(shift, shift(normalize(mapply(toindices, fgpartition(rot90(I)))), ulcorner(mapply(toindices, fgpartition(I))))))), chain(rbind(ofcolor, ONE), rot90, fork(paint, chain(lbind(canvas, ZERO), shape, compose(lbind(combine, mapply(toindices, fgpartition(I))), lbind(shift, shift(normalize(mapply(toindices, fgpartition(rot90(I)))), ulcorner(mapply(toindices, fgpartition(I))))))), chain(lbind(recolor, ONE), normalize, compose(lbind(combine, mapply(toindices, fgpartition(I))), lbind(shift, shift(normalize(mapply(toindices, fgpartition(rot90(I)))), ulcorner(mapply(toindices, fgpartition(I))))))))))), chain(size, lbind(intersection, mapply(toindices, fgpartition(I))), lbind(shift, shift(normalize(mapply(toindices, fgpartition(rot90(I)))), ulcorner(mapply(toindices, fgpartition(I)))))))), mapply(toindices, fgpartition(I))))
"""

verify_1bfc4729 = """
fill(fill(fill(fill(fill(fill(fill(fill(I, leastcolor(tophalf(I)), hfrontier(center(ofcolor(I, leastcolor(tophalf(I)))))), leastcolor(bottomhalf(I)), hfrontier(center(ofcolor(I, leastcolor(bottomhalf(I)))))), leastcolor(tophalf(I)), connect(ORIGIN, tojvec(decrement(width(I))))), leastcolor(bottomhalf(I)), connect(toivec(decrement(height(I))), astuple(decrement(height(I)), decrement(width(I))))), leastcolor(tophalf(I)), connect(ORIGIN, toivec(decrement(halve(height(I)))))), leastcolor(tophalf(I)), connect(tojvec(decrement(width(I))), astuple(decrement(halve(height(I))), decrement(width(I))))), leastcolor(bottomhalf(I)), connect(toivec(halve(height(I))), toivec(decrement(height(I))))), leastcolor(bottomhalf(I)), connect(astuple(halve(height(I)), decrement(width(I))), astuple(decrement(height(I)), decrement(width(I)))))
"""

verify_1c786137 = """
trim(subgrid(extract(sfilter(sfilter(objects(I, T, F, F), compose(rbind(contained, sfilter(palette(I), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), ONE))), color)), compose(rbind(greater, SEVEN), size)), fork(equality, toindices, box)), I))
"""

verify_1caeab9d = """
paint(cover(I, merge(objects(I, T, T, T))), mapply(fork(shift, identity, chain(toivec, lbind(subtract, lowermost(ofcolor(I, ONE))), lowermost)), objects(I, T, T, T)))
"""

verify_1cf80156 = """
subgrid(extract(objects(I, T, T, F), matcher(color, other(palette(I), color(merge(frontiers(I)))))), I)
"""

verify_1e0a9b12 = """
rot90(apply(fork(combine, rbind(sfilter, matcher(identity, mostcolor(I))), rbind(sfilter, compose(flip, matcher(identity, mostcolor(I))))), rot270(I)))
"""

verify_1e32b0e9 = """
fill(I, color(merge(sfilter(frontiers(I), matcher(color, leastcommon(apply(color, totuple(frontiers(I)))))))), difference(mapply(lbind(shift, toindices(sfilter(normalize(argmin(objects(hconcat(I, canvas(color(merge(sfilter(frontiers(I), matcher(color, leastcommon(apply(color, totuple(frontiers(I)))))))), shape(I))), F, T, T), rbind(colorcount, color(sfilter(first(objects(hconcat(I, canvas(color(merge(sfilter(frontiers(I), matcher(color, leastcommon(apply(color, totuple(frontiers(I)))))))), shape(I))), F, T, T)), compose(rbind(contained, box(first(objects(hconcat(I, canvas(color(merge(sfilter(frontiers(I), matcher(color, leastcommon(apply(color, totuple(frontiers(I)))))))), shape(I))), F, T, T)))), last)))))), matcher(first, other(remove(color(merge(sfilter(frontiers(I), matcher(color, leastcommon(apply(color, totuple(frontiers(I)))))))), palette(I)), color(sfilter(first(objects(hconcat(I, canvas(color(merge(sfilter(frontiers(I), matcher(color, leastcommon(apply(color, totuple(frontiers(I)))))))), shape(I))), F, T, T)), compose(rbind(contained, box(first(objects(hconcat(I, canvas(color(merge(sfilter(frontiers(I), matcher(color, leastcommon(apply(color, totuple(frontiers(I)))))))), shape(I))), F, T, T)))), last)))))))), apply(ulcorner, objects(hconcat(I, canvas(color(merge(sfilter(frontiers(I), matcher(color, leastcommon(apply(color, totuple(frontiers(I)))))))), shape(I))), F, T, T))), ofcolor(I, other(remove(color(merge(sfilter(frontiers(I), matcher(color, leastcommon(apply(color, totuple(frontiers(I)))))))), palette(I)), color(sfilter(first(objects(hconcat(I, canvas(color(merge(sfilter(frontiers(I), matcher(color, leastcommon(apply(color, totuple(frontiers(I)))))))), shape(I))), F, T, T)), compose(rbind(contained, box(first(objects(hconcat(I, canvas(color(merge(sfilter(frontiers(I), matcher(color, leastcommon(apply(color, totuple(frontiers(I)))))))), shape(I))), F, T, T)))), last)))))))
"""

verify_1f0c79e5 = """
paint(I, mapply(fork(recolor, compose(rbind(other, TWO), palette), fork(mapply, chain(rbind(compose, lbind(rbind, shoot)), lbind(rbind, mapply), toindices), compose(lbind(apply, rbind(add, NEG_ONE)), chain(lbind(apply, double), toindices, compose(rbind(sfilter, matcher(first, TWO)), normalize))))), objects(I, F, F, T)))
"""

verify_1f642eb9 = """
paint(I, mapply(fork(shift, identity, compose(crement, rbind(gravitate, argmax(sfilter(objects(I, T, F, F), fork(equality, size, fork(multiply, height, width))), size)))), apply(initset, toobject(difference(asindices(I), combine(ofcolor(I, color(toobject(corners(outbox(argmax(sfilter(objects(I, T, F, F), fork(equality, size, fork(multiply, height, width))), size))), I))), toindices(argmax(sfilter(objects(I, T, F, F), fork(equality, size, fork(multiply, height, width))), size)))), I))))
"""

verify_1f85a75f = """
subgrid(extract(objects(I, T, F, T), matcher(color, argmax(sfilter(apply(color, totuple(objects(I, T, F, T))), matcher(chain(size, lbind(sfilter, apply(color, totuple(objects(I, T, F, T)))), lbind(matcher, identity)), ONE)), lbind(colorcount, I)))), I)
"""

verify_1f876c06 = """
paint(I, mapply(fork(recolor, color, fork(connect, compose(last, first), power(last, TWO))), fgpartition(I)))
"""

verify_1fad071e = """
hconcat(canvas(ONE, astuple(ONE, size(sfilter(sizefilter(colorfilter(objects(I, T, F, T), ONE), FOUR), fork(equality, height, width))))), canvas(mostcolor(I), astuple(ONE, subtract(FIVE, size(sfilter(sizefilter(colorfilter(objects(I, T, F, T), ONE), FOUR), fork(equality, height, width)))))))
"""

verify_2013d3e2 = """
tophalf(lefthalf(call(power(compose(rot90, power(compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), chain(lbind(apply, last), rbind(sfilter, compose(positive, first)), fork(pair, compose(rbind(lbind(interval, ZERO), ONE), size), identity))), lbind(equality, ONE), chain(size, dedupe, first))), identity))), positive, size)), identity)), multiply(TEN, THREE))), FOUR), I)))
"""

verify_2204b7a8 = """
call(branch(flip(equality(size(dedupe(first(I))), ONE)), hconcat, vconcat), branch(even(call(branch(flip(equality(size(dedupe(first(I))), ONE)), width, height), I)), replace(call(branch(flip(equality(size(dedupe(first(I))), ONE)), lefthalf, tophalf), I), first(remove(mostcolor(I), remove(index(call(branch(flip(equality(size(dedupe(first(I))), ONE)), righthalf, bottomhalf), I), decrement(shape(call(branch(flip(equality(size(dedupe(first(I))), ONE)), righthalf, bottomhalf), I)))), remove(index(call(branch(flip(equality(size(dedupe(first(I))), ONE)), lefthalf, tophalf), I), ORIGIN), palette(I))))), index(call(branch(flip(equality(size(dedupe(first(I))), ONE)), lefthalf, tophalf), I), ORIGIN)), call(branch(flip(equality(size(dedupe(first(I))), ONE)), hconcat, vconcat), replace(call(branch(flip(equality(size(dedupe(first(I))), ONE)), lefthalf, tophalf), I), first(remove(mostcolor(I), remove(index(call(branch(flip(equality(size(dedupe(first(I))), ONE)), righthalf, bottomhalf), I), decrement(shape(call(branch(flip(equality(size(dedupe(first(I))), ONE)), righthalf, bottomhalf), I)))), remove(index(call(branch(flip(equality(size(dedupe(first(I))), ONE)), lefthalf, tophalf), I), ORIGIN), palette(I))))), index(call(branch(flip(equality(size(dedupe(first(I))), ONE)), lefthalf, tophalf), I), ORIGIN)), call(branch(flip(equality(size(dedupe(first(I))), ONE)), dmirror, identity), canvas(mostcolor(I), astuple(ONE, call(branch(flip(equality(size(dedupe(first(I))), ONE)), height, width), I)))))), replace(call(branch(flip(equality(size(dedupe(first(I))), ONE)), righthalf, bottomhalf), I), first(remove(mostcolor(I), remove(index(call(branch(flip(equality(size(dedupe(first(I))), ONE)), righthalf, bottomhalf), I), decrement(shape(call(branch(flip(equality(size(dedupe(first(I))), ONE)), righthalf, bottomhalf), I)))), remove(index(call(branch(flip(equality(size(dedupe(first(I))), ONE)), lefthalf, tophalf), I), ORIGIN), palette(I))))), index(call(branch(flip(equality(size(dedupe(first(I))), ONE)), righthalf, bottomhalf), I), decrement(shape(call(branch(flip(equality(size(dedupe(first(I))), ONE)), righthalf, bottomhalf), I))))))
"""

verify_22168020 = """
paint(I, mapply(fork(recolor, identity, compose(merge, fork(lbind(prapply, connect), lbind(ofcolor, I), lbind(ofcolor, I)))), remove(mostcolor(I), palette(I))))
"""

verify_22233c11 = """
fill(I, EIGHT, mapply(fork(difference, compose(toindices, fork(shift, compose(rbind(upscale, TWO), vmirror), chain(invert, halve, shape))), compose(lbind(mapply, fork(combine, hfrontier, vfrontier)), toindices)), objects(I, T, T, T)))
"""

verify_2281f1f4 = """
fill(fill(I, TWO, difference(product(apply(first, ofcolor(I, leastcolor(I))), apply(last, ofcolor(I, leastcolor(I)))), ofcolor(I, leastcolor(I)))), mostcolor(I), initset(argmax(corners(asindices(I)), chain(size, lbind(sfilter, ofcolor(I, leastcolor(I))), fork(lbind(fork, either), compose(lbind(matcher, first), first), compose(lbind(matcher, last), last))))))
"""

verify_228f6490 = """
paint(cover(I, mapply(chain(lbind(argmax, difference(objects(I, T, T, F), colorfilter(objects(I, T, T, F), mostcolor(I)))), lbind(matcher, compose(normalize, toindices)), compose(normalize, toindices)), sfilter(sfilter(colorfilter(objects(I, T, T, F), mostcolor(I)), compose(flip, rbind(bordering, I))), matcher(chain(mostcolor, rbind(toobject, I), fork(difference, compose(lbind(mapply, neighbors), toindices), identity)), mostcommon(apply(chain(mostcolor, rbind(toobject, I), fork(difference, compose(lbind(mapply, neighbors), toindices), identity)), totuple(sfilter(colorfilter(objects(I, T, T, F), mostcolor(I)), compose(flip, rbind(bordering, I)))))))))), mapply(fork(recolor, compose(color, chain(lbind(argmax, difference(objects(I, T, T, F), colorfilter(objects(I, T, T, F), mostcolor(I)))), lbind(matcher, compose(normalize, toindices)), compose(normalize, toindices))), identity), sfilter(sfilter(colorfilter(objects(I, T, T, F), mostcolor(I)), compose(flip, rbind(bordering, I))), matcher(chain(mostcolor, rbind(toobject, I), fork(difference, compose(lbind(mapply, neighbors), toindices), identity)), mostcommon(apply(chain(mostcolor, rbind(toobject, I), fork(difference, compose(lbind(mapply, neighbors), toindices), identity)), totuple(sfilter(colorfilter(objects(I, T, T, F), mostcolor(I)), compose(flip, rbind(bordering, I))))))))))
"""

verify_22eb0ac0 = """
paint(paint(I, mapply(fork(recolor, compose(color, first), fork(connect, compose(center, first), compose(center, last))), sfilter(sfilter(product(apply(initset, sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I))))), apply(initset, sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I)))))), fork(equality, compose(color, first), compose(color, last))), fork(either, fork(equality, compose(leftmost, first), compose(leftmost, last)), fork(equality, compose(uppermost, first), compose(uppermost, last)))))), toobject(sfilter(asindices(I), branch(equality(toindices(sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I))))), sfilter(toindices(sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I))))), fork(either, matcher(last, ZERO), matcher(last, decrement(width(I)))))), fork(either, matcher(last, ZERO), matcher(last, decrement(width(I)))), fork(either, matcher(first, ZERO), matcher(first, decrement(height(I)))))), I))
"""

verify_234bbc79 = """
call(branch(contained(argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)), palette(crop(paint(cover(I, merge(objects(I, F, F, T))), first(call(power(fork(astuple, fork(combine, fork(insert, fork(astuple, compose(first, fork(argmin, fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))))), compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))), fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first)), compose(rbind(shift, RIGHT), fork(shift, fork(insert, fork(astuple, compose(first, fork(argmin, compose(rbind(sfilter, compose(flip, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I))))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))))), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), fork(subtract, compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first)), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last))))))), fork(remove, compose(first, last), last)), decrement(size(objects(I, F, F, T)))), astuple(first(order(objects(I, F, F, T), leftmost)), remove(first(order(objects(I, F, F, T), leftmost)), order(objects(I, F, F, T), leftmost)))))), ORIGIN, astuple(height(I), width(first(call(power(fork(astuple, fork(combine, fork(insert, fork(astuple, compose(first, fork(argmin, fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))))), compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))), fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first)), compose(rbind(shift, RIGHT), fork(shift, fork(insert, fork(astuple, compose(first, fork(argmin, compose(rbind(sfilter, compose(flip, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I))))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))))), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), fork(subtract, compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first)), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last))))))), fork(remove, compose(first, last), last)), decrement(size(objects(I, F, F, T)))), astuple(first(order(objects(I, F, F, T), leftmost)), remove(first(order(objects(I, F, F, T), leftmost)), order(objects(I, F, F, T), leftmost)))))))))), fork(paint, identity, chain(rbind(recolor, ofcolor(crop(paint(cover(I, merge(objects(I, F, F, T))), first(call(power(fork(astuple, fork(combine, fork(insert, fork(astuple, compose(first, fork(argmin, fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))))), compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))), fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first)), compose(rbind(shift, RIGHT), fork(shift, fork(insert, fork(astuple, compose(first, fork(argmin, compose(rbind(sfilter, compose(flip, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I))))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))))), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), fork(subtract, compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first)), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last))))))), fork(remove, compose(first, last), last)), decrement(size(objects(I, F, F, T)))), astuple(first(order(objects(I, F, F, T), leftmost)), remove(first(order(objects(I, F, F, T), leftmost)), order(objects(I, F, F, T), leftmost)))))), ORIGIN, astuple(height(I), width(first(call(power(fork(astuple, fork(combine, fork(insert, fork(astuple, compose(first, fork(argmin, fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))))), compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))), fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first)), compose(rbind(shift, RIGHT), fork(shift, fork(insert, fork(astuple, compose(first, fork(argmin, compose(rbind(sfilter, compose(flip, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I))))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))))), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), fork(subtract, compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first)), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last))))))), fork(remove, compose(first, last), last)), decrement(size(objects(I, F, F, T)))), astuple(first(order(objects(I, F, F, T), leftmost)), remove(first(order(objects(I, F, F, T), leftmost)), order(objects(I, F, F, T), leftmost)))))))), argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), mostcolor, compose(rbind(sfilter, compose(flip, matcher(first, mostcolor(I)))), lbind(toobject, mapply(dneighbors, ofcolor(crop(paint(cover(I, merge(objects(I, F, F, T))), first(call(power(fork(astuple, fork(combine, fork(insert, fork(astuple, compose(first, fork(argmin, fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))))), compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))), fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first)), compose(rbind(shift, RIGHT), fork(shift, fork(insert, fork(astuple, compose(first, fork(argmin, compose(rbind(sfilter, compose(flip, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I))))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))))), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), fork(subtract, compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first)), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last))))))), fork(remove, compose(first, last), last)), decrement(size(objects(I, F, F, T)))), astuple(first(order(objects(I, F, F, T), leftmost)), remove(first(order(objects(I, F, F, T), leftmost)), order(objects(I, F, F, T), leftmost)))))), ORIGIN, astuple(height(I), width(first(call(power(fork(astuple, fork(combine, fork(insert, fork(astuple, compose(first, fork(argmin, fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))))), compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))), fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first)), compose(rbind(shift, RIGHT), fork(shift, fork(insert, fork(astuple, compose(first, fork(argmin, compose(rbind(sfilter, compose(flip, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I))))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))))), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), fork(subtract, compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first)), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last))))))), fork(remove, compose(first, last), last)), decrement(size(objects(I, F, F, T)))), astuple(first(order(objects(I, F, F, T), leftmost)), remove(first(order(objects(I, F, F, T), leftmost)), order(objects(I, F, F, T), leftmost)))))))), argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))))))), identity), crop(paint(cover(I, merge(objects(I, F, F, T))), first(call(power(fork(astuple, fork(combine, fork(insert, fork(astuple, compose(first, fork(argmin, fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))))), compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))), fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first)), compose(rbind(shift, RIGHT), fork(shift, fork(insert, fork(astuple, compose(first, fork(argmin, compose(rbind(sfilter, compose(flip, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I))))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))))), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), fork(subtract, compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first)), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last))))))), fork(remove, compose(first, last), last)), decrement(size(objects(I, F, F, T)))), astuple(first(order(objects(I, F, F, T), leftmost)), remove(first(order(objects(I, F, F, T), leftmost)), order(objects(I, F, F, T), leftmost)))))), ORIGIN, astuple(height(I), width(first(call(power(fork(astuple, fork(combine, fork(insert, fork(astuple, compose(first, fork(argmin, fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))))), compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first))), fork(remove, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first), first)), compose(rbind(shift, RIGHT), fork(shift, fork(insert, fork(astuple, compose(first, fork(argmin, compose(rbind(sfilter, compose(flip, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I))))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))))), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)))), fork(remove, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last)), compose(first, last))), fork(subtract, compose(last, compose(rbind(extract, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), first)), compose(last, chain(rbind(argmin, compose(last, last)), rbind(sfilter, matcher(first, argmin(sfilter(palette(I), matcher(chain(size, lbind(sfilter, objects(I, F, F, T)), compose(lbind(compose, rbind(contained, astuple(ONE, TWO))), lbind(rbind, colorcount))), size(objects(I, F, F, T)))), lbind(colorcount, I)))), compose(first, last))))))), fork(remove, compose(first, last), last)), decrement(size(objects(I, F, F, T)))), astuple(first(order(objects(I, F, F, T), leftmost)), remove(first(order(objects(I, F, F, T), leftmost)), order(objects(I, F, F, T), leftmost)))))))))
"""

verify_23581191 = """
fill(fill(fill(I, first(totuple(remove(mostcolor(I), palette(I)))), intersection(ofcolor(I, mostcolor(I)), call(compose(lbind(mapply, fork(combine, hfrontier, vfrontier)), lbind(ofcolor, I)), first(totuple(remove(mostcolor(I), palette(I))))))), last(totuple(remove(mostcolor(I), palette(I)))), intersection(ofcolor(I, mostcolor(I)), call(compose(lbind(mapply, fork(combine, hfrontier, vfrontier)), lbind(ofcolor, I)), last(totuple(remove(mostcolor(I), palette(I))))))), TWO, intersection(ofcolor(I, mostcolor(I)), intersection(call(compose(lbind(mapply, fork(combine, hfrontier, vfrontier)), lbind(ofcolor, I)), first(totuple(remove(mostcolor(I), palette(I))))), call(compose(lbind(mapply, fork(combine, hfrontier, vfrontier)), lbind(ofcolor, I)), last(totuple(remove(mostcolor(I), palette(I))))))))
"""

verify_239be575 = """
canvas(branch(positive(size(sfilter(colorfilter(objects(I, T, F, F), first(remove(extract(palette(I), fork(both, fork(both, matcher(lbind(colorcount, I), EIGHT), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), TWO)), matcher(chain(size, lbind(apply, normalize), lbind(colorfilter, objects(I, T, F, F))), ONE))), remove(ZERO, palette(I))))), fork(both, rbind(adjacent, first(totuple(colorfilter(objects(I, T, F, F), extract(palette(I), fork(both, fork(both, matcher(lbind(colorcount, I), EIGHT), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), TWO)), matcher(chain(size, lbind(apply, normalize), lbind(colorfilter, objects(I, T, F, F))), ONE))))))), rbind(adjacent, last(totuple(colorfilter(objects(I, T, F, F), extract(palette(I), fork(both, fork(both, matcher(lbind(colorcount, I), EIGHT), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), TWO)), matcher(chain(size, lbind(apply, normalize), lbind(colorfilter, objects(I, T, F, F))), ONE))))))))))), first(remove(extract(palette(I), fork(both, fork(both, matcher(lbind(colorcount, I), EIGHT), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), TWO)), matcher(chain(size, lbind(apply, normalize), lbind(colorfilter, objects(I, T, F, F))), ONE))), remove(ZERO, palette(I)))), ZERO), UNITY)
"""

verify_23b5c85d = """
subgrid(argmin(sfilter(partition(I), fork(equality, size, fork(multiply, height, width))), fork(multiply, height, width)), I)
"""

verify_253bf280 = """
fill(fill(I, THREE, mfilter(sfilter(prapply(connect, ofcolor(I, leastcolor(I)), ofcolor(I, leastcolor(I))), compose(rbind(greater, ONE), size)), fork(either, vline, hline))), leastcolor(I), ofcolor(I, leastcolor(I)))
"""

verify_25d487eb = """
underpaint(I, mapply(fork(recolor, leastcolor, fork(shoot, compose(last, fork(extract, identity, compose(lbind(matcher, first), leastcolor))), fork(subtract, compose(last, fork(extract, identity, compose(lbind(matcher, first), leastcolor))), compose(first, fork(difference, compose(dneighbors, compose(last, fork(extract, identity, compose(lbind(matcher, first), leastcolor)))), compose(lbind(apply, last), fork(sfilter, identity, compose(lbind(matcher, first), mostcolor)))))))), objects(I, F, F, T)))
"""

verify_25d8a9c8 = """
apply(compose(rbind(repeat, width(I)), compose(rbind(rbind(branch, ZERO), FIVE), matcher(compose(size, dedupe), ONE))), I)
"""

verify_25ff71a9 = """
move(I, first(objects(I, T, T, T)), DOWN)
"""

verify_264363fd = """
paint(cover(I, argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)), mapply(fork(shift, chain(asobject, fork(paint, identity, compose(lbind(mapply, fork(combine, compose(lbind(recolor, color(difference(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)), sfilter(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)), chain(rbind(greater, ONE), size, chain(lbind(intersection, toindices(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)))), dneighbors, last)))))), fork(difference, compose(rbind(mapply, toindices(shift(difference(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)), sfilter(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)), chain(rbind(greater, ONE), size, chain(lbind(intersection, toindices(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)))), dneighbors, last)))), invert(center(sfilter(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)), chain(rbind(greater, ONE), size, chain(lbind(intersection, toindices(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)))), dneighbors, last)))))))), lbind(lbind, shoot)), chain(backdrop, power(outbox, TWO), initset))), lbind(shift, shift(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)), invert(center(sfilter(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)), chain(rbind(greater, ONE), size, chain(lbind(intersection, toindices(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)))), dneighbors, last))))))))), rbind(ofcolor, first(extract(sfilter(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)), chain(rbind(greater, ONE), size, chain(lbind(intersection, toindices(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)))), dneighbors, last))), matcher(last, center(sfilter(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)), chain(rbind(greater, ONE), size, chain(lbind(intersection, toindices(normalize(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size)))), dneighbors, last)))))))))), rbind(subgrid, I)), ulcorner), remove(argmin(objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T), size), objects(hconcat(I, canvas(mostcolor(argmax(objects(I, T, F, F), fork(multiply, height, width))), shape(I))), F, F, T))))
"""

verify_272f95fa = """
fill(fill(fill(fill(fill(I, SIX, extract(apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN))), compose(flip, rbind(bordering, I)))), TWO, argmin(sfilter(remove(extract(apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN))), compose(flip, rbind(bordering, I))), apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN)))), lbind(vmatching, extract(apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN))), compose(flip, rbind(bordering, I))))), uppermost)), ONE, argmax(sfilter(remove(extract(apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN))), compose(flip, rbind(bordering, I))), apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN)))), lbind(vmatching, extract(apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN))), compose(flip, rbind(bordering, I))))), uppermost)), FOUR, argmin(sfilter(remove(extract(apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN))), compose(flip, rbind(bordering, I))), apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN)))), lbind(hmatching, extract(apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN))), compose(flip, rbind(bordering, I))))), leftmost)), THREE, argmax(sfilter(remove(extract(apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN))), compose(flip, rbind(bordering, I))), apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN)))), lbind(hmatching, extract(apply(toindices, colorfilter(objects(I, T, F, F), index(I, ORIGIN))), compose(flip, rbind(bordering, I))))), leftmost))
"""

verify_27a28665 = """
canvas(branch(equality(valmax(objects(downscale(call(power(compose(rot90, power(compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), chain(lbind(apply, last), rbind(sfilter, compose(positive, first)), fork(pair, compose(rbind(lbind(interval, ZERO), ONE), size), identity))), lbind(equality, ONE), chain(size, dedupe, first))), identity))), positive, size)), identity)), multiply(TEN, THREE))), FOUR), I), divide(width(call(power(compose(rot90, power(compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), chain(lbind(apply, last), rbind(sfilter, compose(positive, first)), fork(pair, compose(rbind(lbind(interval, ZERO), ONE), size), identity))), lbind(equality, ONE), chain(size, dedupe, first))), identity))), positive, size)), identity)), multiply(TEN, THREE))), FOUR), I)), THREE)), T, F, F), size), FIVE), SIX, branch(equality(valmax(objects(downscale(call(power(compose(rot90, power(compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), chain(lbind(apply, last), rbind(sfilter, compose(positive, first)), fork(pair, compose(rbind(lbind(interval, ZERO), ONE), size), identity))), lbind(equality, ONE), chain(size, dedupe, first))), identity))), positive, size)), identity)), multiply(TEN, THREE))), FOUR), I), divide(width(call(power(compose(rot90, power(compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), chain(lbind(apply, last), rbind(sfilter, compose(positive, first)), fork(pair, compose(rbind(lbind(interval, ZERO), ONE), size), identity))), lbind(equality, ONE), chain(size, dedupe, first))), identity))), positive, size)), identity)), multiply(TEN, THREE))), FOUR), I)), THREE)), T, F, F), size), FOUR), THREE, branch(equality(valmax(objects(downscale(call(power(compose(rot90, power(compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), chain(lbind(apply, last), rbind(sfilter, compose(positive, first)), fork(pair, compose(rbind(lbind(interval, ZERO), ONE), size), identity))), lbind(equality, ONE), chain(size, dedupe, first))), identity))), positive, size)), identity)), multiply(TEN, THREE))), FOUR), I), divide(width(call(power(compose(rot90, power(compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), compose(first, fork(rapply, compose(initset, chain(rbind(rbind(branch, identity), chain(lbind(apply, last), rbind(sfilter, compose(positive, first)), fork(pair, compose(rbind(lbind(interval, ZERO), ONE), size), identity))), lbind(equality, ONE), chain(size, dedupe, first))), identity))), positive, size)), identity)), multiply(TEN, THREE))), FOUR), I)), THREE)), T, F, F), size), ONE), TWO, ONE))), UNITY)
"""

verify_28bf18c6 = """
hconcat(subgrid(first(objects(I, T, T, T)), I), subgrid(first(objects(I, T, T, T)), I))
"""

verify_28e73c20 = """
dmirror(crop(dmirror(last(first(call(power(compose(first, fork(rapply, chain(initset, rbind(rbind(branch, fork(astuple, fork(astuple, fork(astuple, fork(add, fork(multiply, chain(last, first, last), compose(decrement, chain(last, last, compose(first, first)))), fork(multiply, compose(flip, chain(last, first, last)), compose(decrement, chain(first, last, compose(first, first))))), fork(astuple, compose(decrement, chain(first, last, compose(first, first))), compose(decrement, chain(last, last, compose(first, first))))), fork(paint, compose(last, first), compose(lbind(recolor, THREE), fork(connect, chain(first, last, last), fork(add, chain(first, last, last), fork(multiply, chain(first, first, last), compose(decrement, chain(first, first, first)))))))), fork(astuple, fork(astuple, chain(last, lbind(extract, combine(astuple(astuple(RIGHT, DOWN), astuple(DOWN, LEFT)), astuple(astuple(LEFT, UP), astuple(UP, RIGHT)))), compose(lbind(matcher, first), chain(first, first, last))), compose(flip, chain(last, first, last))), fork(astuple, fork(add, chain(first, last, last), fork(multiply, chain(first, first, last), compose(decrement, chain(first, first, first)))), fork(add, chain(first, last, last), fork(multiply, chain(first, first, last), compose(decrement, chain(last, last, compose(first, first))))))))), identity), chain(flip, positive, power(first, THREE))), identity)), multiply(TEN, THREE)), astuple(astuple(astuple(identity(height(hconcat(canvas(THREE, astuple(height(I), ONE)), I))), astuple(identity(width(hconcat(canvas(THREE, astuple(height(I), ONE)), I))), identity(height(hconcat(canvas(THREE, astuple(height(I), ONE)), I))))), fill(hconcat(canvas(THREE, astuple(height(I), ONE)), I), THREE, connect(ORIGIN, tojvec(decrement(width(hconcat(canvas(THREE, astuple(height(I), ONE)), I))))))), astuple(astuple(identity(DOWN), identity(F)), astuple(tojvec(decrement(width(hconcat(canvas(THREE, astuple(height(I), ONE)), I)))), identity(ZERO)))))))), DOWN, add(shape(dmirror(last(first(call(power(compose(first, fork(rapply, chain(initset, rbind(rbind(branch, fork(astuple, fork(astuple, fork(astuple, fork(add, fork(multiply, chain(last, first, last), compose(decrement, chain(last, last, compose(first, first)))), fork(multiply, compose(flip, chain(last, first, last)), compose(decrement, chain(first, last, compose(first, first))))), fork(astuple, compose(decrement, chain(first, last, compose(first, first))), compose(decrement, chain(last, last, compose(first, first))))), fork(paint, compose(last, first), compose(lbind(recolor, THREE), fork(connect, chain(first, last, last), fork(add, chain(first, last, last), fork(multiply, chain(first, first, last), compose(decrement, chain(first, first, first)))))))), fork(astuple, fork(astuple, chain(last, lbind(extract, combine(astuple(astuple(RIGHT, DOWN), astuple(DOWN, LEFT)), astuple(astuple(LEFT, UP), astuple(UP, RIGHT)))), compose(lbind(matcher, first), chain(first, first, last))), compose(flip, chain(last, first, last))), fork(astuple, fork(add, chain(first, last, last), fork(multiply, chain(first, first, last), compose(decrement, chain(first, first, first)))), fork(add, chain(first, last, last), fork(multiply, chain(first, first, last), compose(decrement, chain(last, last, compose(first, first))))))))), identity), chain(flip, positive, power(first, THREE))), identity)), multiply(TEN, THREE)), astuple(astuple(astuple(identity(height(hconcat(canvas(THREE, astuple(height(I), ONE)), I))), astuple(identity(width(hconcat(canvas(THREE, astuple(height(I), ONE)), I))), identity(height(hconcat(canvas(THREE, astuple(height(I), ONE)), I))))), fill(hconcat(canvas(THREE, astuple(height(I), ONE)), I), THREE, connect(ORIGIN, tojvec(decrement(width(hconcat(canvas(THREE, astuple(height(I), ONE)), I))))))), astuple(astuple(identity(DOWN), identity(F)), astuple(tojvec(decrement(width(hconcat(canvas(THREE, astuple(height(I), ONE)), I)))), identity(ZERO))))))))), UP)))
"""

verify_29623171 = """
fill(replace(I, leastcolor(compress(I)), mostcolor(compress(I))), leastcolor(compress(I)), mfilter(apply(compose(rbind(toobject, I), lbind(shift, asindices(canvas(ZERO, astuple(divide(subtract(height(I), decrement(increment(size(sfilter(frontiers(I), hline))))), increment(size(sfilter(frontiers(I), hline)))), divide(subtract(width(I), decrement(increment(size(sfilter(frontiers(I), vline))))), increment(size(sfilter(frontiers(I), vline))))))))), apply(rbind(multiply, increment(astuple(divide(subtract(height(I), decrement(increment(size(sfilter(frontiers(I), hline))))), increment(size(sfilter(frontiers(I), hline)))), divide(subtract(width(I), decrement(increment(size(sfilter(frontiers(I), vline))))), increment(size(sfilter(frontiers(I), vline))))))), asindices(canvas(ZERO, astuple(increment(size(sfilter(frontiers(I), hline))), increment(size(sfilter(frontiers(I), vline)))))))), matcher(rbind(colorcount, leastcolor(compress(I))), valmax(apply(compose(rbind(toobject, I), lbind(shift, asindices(canvas(ZERO, astuple(divide(subtract(height(I), decrement(increment(size(sfilter(frontiers(I), hline))))), increment(size(sfilter(frontiers(I), hline)))), divide(subtract(width(I), decrement(increment(size(sfilter(frontiers(I), vline))))), increment(size(sfilter(frontiers(I), vline))))))))), apply(rbind(multiply, increment(astuple(divide(subtract(height(I), decrement(increment(size(sfilter(frontiers(I), hline))))), increment(size(sfilter(frontiers(I), hline)))), divide(subtract(width(I), decrement(increment(size(sfilter(frontiers(I), vline))))), increment(size(sfilter(frontiers(I), vline))))))), asindices(canvas(ZERO, astuple(increment(size(sfilter(frontiers(I), hline))), increment(size(sfilter(frontiers(I), vline)))))))), rbind(colorcount, leastcolor(compress(I)))))))
"""

verify_29c11459 = """
paint(paint(I, mfilter(apply(fork(combine, fork(combine, fork(recolor, compose(color, first), fork(remove, compose(halve, fork(add, compose(center, first), compose(center, last))), fork(connect, compose(center, first), compose(halve, fork(add, compose(center, first), compose(center, last)))))), fork(recolor, compose(color, last), fork(remove, compose(halve, fork(add, compose(center, first), compose(center, last))), fork(connect, compose(center, last), compose(halve, fork(add, compose(center, first), compose(center, last))))))), chain(lbind(recolor, FIVE), initset, compose(halve, fork(add, compose(center, first), compose(center, last))))), sfilter(sfilter(product(objects(I, T, F, T), objects(I, T, F, T)), fork(either, fork(hmatching, first, last), fork(vmatching, first, last))), matcher(chain(palette, rbind(toobject, I), compose(delta, merge)), initset(mostcolor(I))))), branch(equality(ONE, numcolors(crop(I, DOWN, subtract(shape(I), TWO_BY_ZERO)))), vline, hline))), merge(objects(I, T, F, T)))
"""

verify_29ec7d0e = """
paint(I, mapply(lbind(shift, sfilter(asobject(I), compose(flip, matcher(first, argmin(sfilter(palette(I), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), valmin(palette(I), compose(size, lbind(colorfilter, objects(I, T, F, F)))))), lbind(colorcount, I)))))), apply(lbind(multiply, astuple(hperiod(asobject(sfilter(dmirror(I), compose(flip, lbind(contained, argmin(sfilter(palette(I), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), valmin(palette(I), compose(size, lbind(colorfilter, objects(I, T, F, F)))))), lbind(colorcount, I))))))), hperiod(asobject(sfilter(I, compose(flip, lbind(contained, argmin(sfilter(palette(I), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), valmin(palette(I), compose(size, lbind(colorfilter, objects(I, T, F, F)))))), lbind(colorcount, I))))))))), mapply(neighbors, neighbors(ORIGIN)))))
"""

verify_2bcee788 = """
paint(fill(I, THREE, argmax(partition(I), fork(multiply, height, width))), shift(call(branch(hmatching(argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), size), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), size)), vmirror, hmirror), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), size)), multiply(call(branch(hmatching(argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), size), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), size)), tojvec, toivec), decrement(double(greater(call(branch(hmatching(argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), size), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), size)), leftmost, uppermost), argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), size)), call(branch(hmatching(argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), size), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), size)), leftmost, uppermost), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), size)))))), shape(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), size)))))
"""

verify_2bee17df = """
fill(I, THREE, shift(combine(ofcolor(apply(compose(first, fork(rapply, compose(initset, compose(rbind(rbind(branch, identity), compose(lbind(repeat, THREE), size)), matcher(dedupe, repeat(mostcolor(trim(I)), ONE)))), identity)), trim(I)), THREE), ofcolor(dmirror(apply(compose(first, fork(rapply, compose(initset, compose(rbind(rbind(branch, identity), compose(lbind(repeat, THREE), size)), matcher(dedupe, repeat(mostcolor(trim(I)), ONE)))), identity)), dmirror(trim(I)))), THREE)), UNITY))
"""

verify_2c608aff = """
fill(I, argmin(remove(color(argmax(sfilter(partition(I), fork(equality, toindices, backdrop)), size)), palette(I)), lbind(colorcount, I)), mapply(fork(connect, identity, fork(add, identity, compose(rbind(gravitate, argmax(sfilter(partition(I), fork(equality, toindices, backdrop)), size)), initset))), sfilter(ofcolor(I, argmin(remove(color(argmax(sfilter(partition(I), fork(equality, toindices, backdrop)), size)), palette(I)), lbind(colorcount, I))), fork(either, compose(rbind(contained, apply(first, toindices(argmax(sfilter(partition(I), fork(equality, toindices, backdrop)), size)))), first), compose(rbind(contained, apply(last, toindices(argmax(sfilter(partition(I), fork(equality, toindices, backdrop)), size)))), last)))))
"""

verify_2dc579da = """
subgrid(extract(apply(compose(rbind(toobject, I), backdrop), combine(astuple(insert(add(astuple(uppermost(mfilter(frontiers(I), hline)), leftmost(mfilter(frontiers(I), vline))), NEG_UNITY), initset(ORIGIN)), insert(add(astuple(uppermost(mfilter(frontiers(I), hline)), rightmost(mfilter(frontiers(I), vline))), UP_RIGHT), initset(tojvec(decrement(width(I)))))), astuple(insert(add(astuple(lowermost(mfilter(frontiers(I), hline)), leftmost(mfilter(frontiers(I), vline))), DOWN_LEFT), initset(toivec(decrement(height(I))))), insert(add(astuple(lowermost(mfilter(frontiers(I), hline)), rightmost(mfilter(frontiers(I), vline))), UNITY), initset(decrement(shape(I))))))), compose(flip, matcher(palette, initset(mostcommon(apply(color, sfilter(apply(compose(rbind(toobject, I), backdrop), combine(astuple(insert(add(astuple(uppermost(mfilter(frontiers(I), hline)), leftmost(mfilter(frontiers(I), vline))), NEG_UNITY), initset(ORIGIN)), insert(add(astuple(uppermost(mfilter(frontiers(I), hline)), rightmost(mfilter(frontiers(I), vline))), UP_RIGHT), initset(tojvec(decrement(width(I)))))), astuple(insert(add(astuple(lowermost(mfilter(frontiers(I), hline)), leftmost(mfilter(frontiers(I), vline))), DOWN_LEFT), initset(toivec(decrement(height(I))))), insert(add(astuple(lowermost(mfilter(frontiers(I), hline)), rightmost(mfilter(frontiers(I), vline))), UNITY), initset(decrement(shape(I))))))), matcher(numcolors, ONE)))))))), I)
"""

verify_2dd70a9a = """
call(branch(vline(ofcolor(I, TWO)), dmirror, identity), fill(fill(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE, combine(call(fork(connect, first, last), extract(product(sfilter(mapply(toindices, sfilter(colorfilter(objects(underfill(replace(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE, mostcolor(I)), THREE, difference(hfrontier(center(ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE))), ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE))), T, F, F), THREE), rbind(adjacent, ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE)))), fork(either, compose(compose(rbind(equality, other(remove(TWO, remove(THREE, palette(I))), mostcolor(I))), lbind(index, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I))), rbind(add, LEFT)), compose(compose(rbind(equality, other(remove(TWO, remove(THREE, palette(I))), mostcolor(I))), lbind(index, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I))), rbind(add, RIGHT)))), sfilter(mapply(toindices, sfilter(colorfilter(objects(underfill(replace(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO, mostcolor(I)), TWO, difference(hfrontier(center(ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO))), ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO))), T, F, F), TWO), rbind(adjacent, ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO)))), fork(either, compose(compose(rbind(equality, other(remove(TWO, remove(THREE, palette(I))), mostcolor(I))), lbind(index, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I))), rbind(add, UP)), compose(compose(rbind(equality, other(remove(TWO, remove(THREE, palette(I))), mostcolor(I))), lbind(index, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I))), rbind(add, DOWN))))), fork(both, compose(vline, fork(connect, first, last)), matcher(chain(numcolors, rbind(toobject, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I)), fork(connect, first, last)), ONE)))), combine(mfilter(apply(lbind(connect, center(ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE))), corners(call(fork(connect, first, last), extract(product(sfilter(mapply(toindices, sfilter(colorfilter(objects(underfill(replace(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE, mostcolor(I)), THREE, difference(hfrontier(center(ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE))), ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE))), T, F, F), THREE), rbind(adjacent, ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE)))), fork(either, compose(compose(rbind(equality, other(remove(TWO, remove(THREE, palette(I))), mostcolor(I))), lbind(index, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I))), rbind(add, LEFT)), compose(compose(rbind(equality, other(remove(TWO, remove(THREE, palette(I))), mostcolor(I))), lbind(index, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I))), rbind(add, RIGHT)))), sfilter(mapply(toindices, sfilter(colorfilter(objects(underfill(replace(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO, mostcolor(I)), TWO, difference(hfrontier(center(ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO))), ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO))), T, F, F), TWO), rbind(adjacent, ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO)))), fork(either, compose(compose(rbind(equality, other(remove(TWO, remove(THREE, palette(I))), mostcolor(I))), lbind(index, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I))), rbind(add, UP)), compose(compose(rbind(equality, other(remove(TWO, remove(THREE, palette(I))), mostcolor(I))), lbind(index, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I))), rbind(add, DOWN))))), fork(both, compose(vline, fork(connect, first, last)), matcher(chain(numcolors, rbind(toobject, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I)), fork(connect, first, last)), ONE)))))), fork(either, hline, vline)), mfilter(apply(lbind(connect, center(ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO))), corners(call(fork(connect, first, last), extract(product(sfilter(mapply(toindices, sfilter(colorfilter(objects(underfill(replace(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE, mostcolor(I)), THREE, difference(hfrontier(center(ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE))), ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE))), T, F, F), THREE), rbind(adjacent, ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), THREE)))), fork(either, compose(compose(rbind(equality, other(remove(TWO, remove(THREE, palette(I))), mostcolor(I))), lbind(index, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I))), rbind(add, LEFT)), compose(compose(rbind(equality, other(remove(TWO, remove(THREE, palette(I))), mostcolor(I))), lbind(index, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I))), rbind(add, RIGHT)))), sfilter(mapply(toindices, sfilter(colorfilter(objects(underfill(replace(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO, mostcolor(I)), TWO, difference(hfrontier(center(ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO))), ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO))), T, F, F), TWO), rbind(adjacent, ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO)))), fork(either, compose(compose(rbind(equality, other(remove(TWO, remove(THREE, palette(I))), mostcolor(I))), lbind(index, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I))), rbind(add, UP)), compose(compose(rbind(equality, other(remove(TWO, remove(THREE, palette(I))), mostcolor(I))), lbind(index, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I))), rbind(add, DOWN))))), fork(both, compose(vline, fork(connect, first, last)), matcher(chain(numcolors, rbind(toobject, call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I)), fork(connect, first, last)), ONE)))))), fork(either, hline, vline))))), TWO, ofcolor(call(branch(vline(ofcolor(I, TWO)), dmirror, identity), I), TWO)))
"""

verify_2dee498d = """
first(hsplit(I, THREE))
"""

verify_31aa019c = """
fill(fill(canvas(mostcolor(I), shape(I)), leastcolor(I), initset(first(ofcolor(I, leastcolor(I))))), TWO, neighbors(first(ofcolor(I, leastcolor(I)))))
"""

verify_321b1fc6 = """
cover(paint(I, mapply(lbind(shift, normalize(argmax(objects(I, F, F, T), numcolors))), apply(ulcorner, remove(argmax(objects(I, F, F, T), numcolors), objects(I, F, F, T))))), argmax(objects(I, F, F, T), numcolors))
"""

verify_32597951 = """
fill(I, THREE, delta(argmin(partition(I), fork(multiply, height, width))))
"""

verify_3345333e = """
fill(fill(I, mostcolor(toobject(box(asindices(I)), I)), extract(partition(I), fork(equality, size, fork(multiply, height, width)))), other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))), shift(last(argmax(sfilter(product(product(interval(invert(maximum(astuple(increment(halve(height(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width)))))))))), increment(halve(width(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))))))))))), increment(maximum(astuple(increment(halve(height(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width)))))))))), increment(halve(width(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))))))))))), ONE), interval(invert(maximum(astuple(increment(halve(height(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width)))))))))), increment(halve(width(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))))))))))), increment(maximum(astuple(increment(halve(height(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width)))))))))), increment(halve(width(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))))))))))), ONE)), insert(vmirror(ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))))), initset(hmirror(ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width)))))))))), matcher(chain(size, rbind(intersection, ofcolor(I, mostcolor(toobject(box(asindices(I)), I)))), fork(shift, last, first)), ZERO)), chain(size, rbind(intersection, ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))))), fork(shift, last, first)))), first(argmax(sfilter(product(product(interval(invert(maximum(astuple(increment(halve(height(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width)))))))))), increment(halve(width(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))))))))))), increment(maximum(astuple(increment(halve(height(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width)))))))))), increment(halve(width(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))))))))))), ONE), interval(invert(maximum(astuple(increment(halve(height(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width)))))))))), increment(halve(width(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))))))))))), increment(maximum(astuple(increment(halve(height(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width)))))))))), increment(halve(width(combine(toindices(extract(partition(I), fork(equality, size, fork(multiply, height, width)))), ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))))))))))), ONE)), insert(vmirror(ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))))), initset(hmirror(ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width)))))))))), matcher(chain(size, rbind(intersection, ofcolor(I, mostcolor(toobject(box(asindices(I)), I)))), fork(shift, last, first)), ZERO)), chain(size, rbind(intersection, ofcolor(I, other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), color(extract(partition(I), fork(equality, size, fork(multiply, height, width))))))), fork(shift, last, first))))))
"""

verify_3428a4f5 = """
fill(canvas(ZERO, shape(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), lefthalf, tophalf), I))), THREE, difference(combine(ofcolor(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), lefthalf, tophalf), I), other(palette(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), lefthalf, tophalf), I)), ZERO)), ofcolor(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), righthalf, bottomhalf), I), other(palette(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), righthalf, bottomhalf), I)), ZERO))), intersection(ofcolor(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), lefthalf, tophalf), I), other(palette(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), lefthalf, tophalf), I)), ZERO)), ofcolor(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), righthalf, bottomhalf), I), other(palette(call(branch(equality(numcolors(toobject(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), I)), ONE), righthalf, bottomhalf), I)), ZERO)))))
"""

verify_3618c87e = """
fill(replace(I, mostcommon(apply(color, totuple(sizefilter(objects(I, T, F, F), ONE)))), mostcolor(I)), mostcommon(apply(color, totuple(sizefilter(objects(I, T, F, F), ONE)))), apply(call(lbind(branch(either(call(rbind(equality, repeat(other(remove(mostcommon(apply(color, totuple(sizefilter(objects(I, T, F, F), ONE)))), palette(I)), mostcolor(I)), ONE)), dedupe(first(I))), call(rbind(equality, repeat(other(remove(mostcommon(apply(color, totuple(sizefilter(objects(I, T, F, F), ONE)))), palette(I)), mostcolor(I)), ONE)), dedupe(last(I)))), lbind, rbind), astuple), branch(either(call(rbind(equality, repeat(other(remove(mostcommon(apply(color, totuple(sizefilter(objects(I, T, F, F), ONE)))), palette(I)), mostcolor(I)), ONE)), dedupe(first(I))), call(rbind(equality, repeat(other(remove(mostcommon(apply(color, totuple(sizefilter(objects(I, T, F, F), ONE)))), palette(I)), mostcolor(I)), ONE)), dedupe(first(dmirror(I))))), ZERO, decrement(call(branch(either(call(rbind(equality, repeat(other(remove(mostcommon(apply(color, totuple(sizefilter(objects(I, T, F, F), ONE)))), palette(I)), mostcolor(I)), ONE)), dedupe(first(I))), call(rbind(equality, repeat(other(remove(mostcommon(apply(color, totuple(sizefilter(objects(I, T, F, F), ONE)))), palette(I)), mostcolor(I)), ONE)), dedupe(last(I)))), height, width), I)))), branch(either(call(rbind(equality, repeat(other(remove(mostcommon(apply(color, totuple(sizefilter(objects(I, T, F, F), ONE)))), palette(I)), mostcolor(I)), ONE)), dedupe(first(I))), call(rbind(equality, repeat(other(remove(mostcommon(apply(color, totuple(sizefilter(objects(I, T, F, F), ONE)))), palette(I)), mostcolor(I)), ONE)), dedupe(last(I)))), apply(last, ofcolor(I, mostcommon(apply(color, totuple(sizefilter(objects(I, T, F, F), ONE)))))), apply(first, ofcolor(I, mostcommon(apply(color, totuple(sizefilter(objects(I, T, F, F), ONE)))))))))
"""

verify_3631a71a = """
call(compose(chain(first, rbind(rapply, I), initset), fork(compose, fork(compose, chain(lbind(lbind(fork, paint), identity), lbind(compose, compose(rbind(shift, ZERO_BY_TWO), vmirror)), chain(rbind(compose, asobject), lbind(rbind, sfilter), compose(lbind(compose, flip), lbind(matcher, first)))), chain(lbind(lbind(fork, paint), identity), lbind(compose, compose(rbind(shift, TWO_BY_ZERO), hmirror)), chain(rbind(compose, asobject), lbind(rbind, sfilter), compose(lbind(compose, flip), lbind(matcher, first))))), fork(compose, chain(lbind(lbind(fork, paint), identity), lbind(compose, compose(rbind(shift, TWO_BY_TWO), cmirror)), chain(rbind(compose, asobject), lbind(rbind, sfilter), compose(lbind(compose, flip), lbind(matcher, first)))), chain(lbind(lbind(fork, paint), identity), lbind(compose, compose(rbind(shift, ORIGIN), dmirror)), chain(rbind(compose, asobject), lbind(rbind, sfilter), compose(lbind(compose, flip), lbind(matcher, first))))))), argmax(palette(I), compose(fork(equality, identity, dmirror), compose(chain(first, rbind(rapply, I), initset), fork(compose, fork(compose, chain(lbind(lbind(fork, paint), identity), lbind(compose, compose(rbind(shift, ZERO_BY_TWO), vmirror)), chain(rbind(compose, asobject), lbind(rbind, sfilter), compose(lbind(compose, flip), lbind(matcher, first)))), chain(lbind(lbind(fork, paint), identity), lbind(compose, compose(rbind(shift, TWO_BY_ZERO), hmirror)), chain(rbind(compose, asobject), lbind(rbind, sfilter), compose(lbind(compose, flip), lbind(matcher, first))))), fork(compose, chain(lbind(lbind(fork, paint), identity), lbind(compose, compose(rbind(shift, TWO_BY_TWO), cmirror)), chain(rbind(compose, asobject), lbind(rbind, sfilter), compose(lbind(compose, flip), lbind(matcher, first)))), chain(lbind(lbind(fork, paint), identity), lbind(compose, compose(rbind(shift, ORIGIN), dmirror)), chain(rbind(compose, asobject), lbind(rbind, sfilter), compose(lbind(compose, flip), lbind(matcher, first))))))))))
"""

verify_363442ee = """
paint(I, mapply(lbind(shift, shift(normalize(argmax(objects(fill(I, mostcolor(I), merge(frontiers(I))), F, F, T), size)), invert(halve(shape(argmax(objects(fill(I, mostcolor(I), merge(frontiers(I))), F, F, T), size)))))), apply(center, remove(argmax(objects(fill(I, mostcolor(I), merge(frontiers(I))), F, F, T), size), objects(fill(I, mostcolor(I), merge(frontiers(I))), F, F, T)))))
"""

verify_36d67576 = """
call(branch(equality(size(sfilter(argmax(objects(I, F, T, T), size), compose(rbind(contained, palette(merge(remove(argmax(objects(I, F, T, T), size), objects(I, F, T, T))))), first))), ZERO), identity, fork(paint, identity, fork(mapply, compose(last, rbind(astuple, fork(mapply, compose(lbind(lbind, shift), fork(shift, chain(first, rbind(rapply, argmax(objects(I, F, T, T), size)), initset), compose(invert, chain(first, rbind(rapply, argmax(objects(I, F, T, T), size)), compose(initset, lbind(lbind(chain, ulcorner), rbind(sfilter, compose(rbind(contained, palette(merge(remove(argmax(objects(I, F, T, T), size), objects(I, F, T, T))))), first)))))))), compose(lbind(occurrences, I), compose(chain(first, rbind(rapply, argmax(objects(I, F, T, T), size)), initset), fork(lbind(fork, shift), lbind(compose, rbind(sfilter, compose(rbind(contained, palette(merge(remove(argmax(objects(I, F, T, T), size), objects(I, F, T, T))))), first))), compose(lbind(compose, invert), lbind(lbind(chain, ulcorner), rbind(sfilter, compose(rbind(contained, palette(merge(remove(argmax(objects(I, F, T, T), size), objects(I, F, T, T))))), first)))))))))), compose(last, rbind(astuple, apply(fork(compose, first, last), product(combine(repeat(identity, ONE), combine(astuple(cmirror, dmirror), astuple(vmirror, hmirror))), combine(repeat(identity, ONE), combine(astuple(cmirror, dmirror), astuple(vmirror, hmirror)))))))))), I)
"""

verify_36fdfd69 = """
fill(fill(I, FOUR, call(power(compose(lbind(mapply, backdrop), fork(apply, compose(rbind(rbind(chain, lbind(lbind, astuple)), lbind(compose, chain(lbind(greater, THREE), maximum, compose(fork(multiply, sign, identity), fork(subtract, first, last))))), lbind(lbind, sfilter)), identity)), TWO), ofcolor(I, leastcolor(I)))), leastcolor(I), ofcolor(I, leastcolor(I)))
"""

verify_3906de3d = """
fill(fill(fill(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), dmirror(apply(rbind(order, identity), dmirror(fill(fill(fill(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), TWO, extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), ONE, other(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), argmin(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), uppermost))), ZERO, argmin(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), uppermost))))))), first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), ofcolor(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), dmirror(apply(rbind(order, identity), dmirror(fill(fill(fill(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), TWO, extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), ONE, other(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), argmin(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), uppermost))), ZERO, argmin(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), uppermost))))))), TWO)), color(other(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), argmin(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), uppermost))), ofcolor(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), dmirror(apply(rbind(order, identity), dmirror(fill(fill(fill(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), TWO, extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), ONE, other(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), argmin(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), uppermost))), ZERO, argmin(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), uppermost))))))), ONE)), color(argmin(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), uppermost)), ofcolor(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), dmirror(apply(rbind(order, identity), dmirror(fill(fill(fill(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), TWO, extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), ONE, other(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), argmin(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), uppermost))), ZERO, argmin(remove(extract(partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))), matcher(color, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))), partition(call(branch(greater(size(sfilter(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))))), size(sfilter(last(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)), matcher(identity, first(first(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I))))))), hmirror, identity), call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I)))), uppermost))))))), ZERO))
"""

verify_39a8645d = """
paint(canvas(mostcolor(I), shape(mostcommon(apply(normalize, totuple(objects(I, T, T, T)))))), mostcommon(apply(normalize, totuple(objects(I, T, T, T)))))
"""

verify_39e1d7f9 = """
crop(paint(vupscale(hupscale(apply(compose(chain(lbind(apply, last), rbind(sfilter, compose(fork(equality, compose(rbind(multiply, divide(width(compress(I)), increment(size(sfilter(frontiers(I), vline))))), rbind(divide, divide(width(compress(I)), increment(size(sfilter(frontiers(I), vline)))))), identity), first)), fork(pair, compose(rbind(lbind(interval, ZERO), ONE), size), identity)), last), sfilter(pair(interval(ZERO, height(paint(compress(I), mapply(lbind(shift, shift(normalize(argmax(objects(compress(I), F, F, T), numcolors)), invert(ulcorner(sfilter(normalize(argmax(objects(compress(I), F, F, T), numcolors)), matcher(first, call(compose(first, fork(rapply, compose(initset, first), last)), branch(positive(size(merge(remove(argmax(objects(compress(I), F, F, T), numcolors), objects(compress(I), F, F, T))))), astuple(color, merge(remove(argmax(objects(compress(I), F, F, T), numcolors), objects(compress(I), F, F, T)))), astuple(leastcolor, argmax(objects(compress(I), F, F, T), numcolors)))))))))), apply(ulcorner, colorfilter(objects(compress(I), T, F, T), call(compose(first, fork(rapply, compose(initset, first), last)), branch(positive(size(merge(remove(argmax(objects(compress(I), F, F, T), numcolors), objects(compress(I), F, F, T))))), astuple(color, merge(remove(argmax(objects(compress(I), F, F, T), numcolors), objects(compress(I), F, F, T)))), astuple(leastcolor, argmax(objects(compress(I), F, F, T), numcolors))))))))), ONE), paint(compress(I), mapply(lbind(shift, shift(normalize(argmax(objects(compress(I), F, F, T), numcolors)), invert(ulcorner(sfilter(normalize(argmax(objects(compress(I), F, F, T), numcolors)), matcher(first, call(compose(first, fork(rapply, compose(initset, first), last)), branch(positive(size(merge(remove(argmax(objects(compress(I), F, F, T), numcolors), objects(compress(I), F, F, T))))), astuple(color, merge(remove(argmax(objects(compress(I), F, F, T), numcolors), objects(compress(I), F, F, T)))), astuple(leastcolor, argmax(objects(compress(I), F, F, T), numcolors)))))))))), apply(ulcorner, colorfilter(objects(compress(I), T, F, T), call(compose(first, fork(rapply, compose(initset, first), last)), branch(positive(size(merge(remove(argmax(objects(compress(I), F, F, T), numcolors), objects(compress(I), F, F, T))))), astuple(color, merge(remove(argmax(objects(compress(I), F, F, T), numcolors), objects(compress(I), F, F, T)))), astuple(leastcolor, argmax(objects(compress(I), F, F, T), numcolors))))))))), compose(fork(equality, compose(rbind(multiply, divide(height(compress(I)), increment(size(sfilter(frontiers(I), hline))))), rbind(divide, divide(height(compress(I)), increment(size(sfilter(frontiers(I), hline)))))), identity), first))), increment(divide(width(compress(I)), increment(size(sfilter(frontiers(I), vline)))))), increment(divide(height(compress(I)), increment(size(sfilter(frontiers(I), hline)))))), merge(frontiers(I))), ORIGIN, shape(I))
"""

verify_3aa6fb7a = """
underfill(I, ONE, mapply(corners, objects(I, T, F, T)))
"""

verify_3ac3eb23 = """
call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(chain(first, rbind(rapply, I), compose(initset, lbind(compose, chain(lowermost, merge, fgpartition)))), ZERO)), paint(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(chain(first, rbind(rapply, I), compose(initset, lbind(compose, chain(lowermost, merge, fgpartition)))), ZERO)), I), mapply(fork(recolor, color, compose(fork(combine, fork(combine, chain(rbind(apply, interval(ZERO, height(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(chain(first, rbind(rapply, I), compose(initset, lbind(compose, chain(lowermost, merge, fgpartition)))), ZERO)), I)), TWO)), lbind(rbind, astuple), last), chain(rbind(apply, interval(ONE, height(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(chain(first, rbind(rapply, I), compose(initset, lbind(compose, chain(lowermost, merge, fgpartition)))), ZERO)), I)), TWO)), lbind(rbind, astuple), compose(increment, last))), chain(rbind(apply, interval(ONE, height(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(chain(first, rbind(rapply, I), compose(initset, lbind(compose, chain(lowermost, merge, fgpartition)))), ZERO)), I)), TWO)), lbind(rbind, astuple), compose(decrement, last))), center)), objects(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(chain(first, rbind(rapply, I), compose(initset, lbind(compose, chain(lowermost, merge, fgpartition)))), ZERO)), I), T, F, T))))
"""

verify_3af2c5a8 = """
vconcat(hconcat(I, vmirror(I)), hmirror(hconcat(I, vmirror(I))))
"""

verify_3bd67248 = """
call(last(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), matcher(chain(dedupe, first, compose(first, chain(rbind(rapply, I), initset, first))), repeat(leastcolor(I), ONE)))), fill(fill(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), matcher(chain(dedupe, first, compose(first, chain(rbind(rapply, I), initset, first))), repeat(leastcolor(I), ONE)))), I), FOUR, mapply(rbind(shoot, DOWN), apply(lbind(astuple, height(ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), matcher(chain(dedupe, first, compose(first, chain(rbind(rapply, I), initset, first))), repeat(leastcolor(I), ONE)))), I), leastcolor(I)))), interval(ZERO, height(ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), matcher(chain(dedupe, first, compose(first, chain(rbind(rapply, I), initset, first))), repeat(leastcolor(I), ONE)))), I), leastcolor(I))), ONE)))), TWO, mapply(lbind(shift, shift(asindices(canvas(ZERO, astuple(height(ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), matcher(chain(dedupe, first, compose(first, chain(rbind(rapply, I), initset, first))), repeat(leastcolor(I), ONE)))), I), leastcolor(I))), height(ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), matcher(chain(dedupe, first, compose(first, chain(rbind(rapply, I), initset, first))), repeat(leastcolor(I), ONE)))), I), leastcolor(I)))))), astuple(height(ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), matcher(chain(dedupe, first, compose(first, chain(rbind(rapply, I), initset, first))), repeat(leastcolor(I), ONE)))), I), leastcolor(I))), height(ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), matcher(chain(dedupe, first, compose(first, chain(rbind(rapply, I), initset, first))), repeat(leastcolor(I), ONE)))), I), leastcolor(I)))))), pair(interval(ZERO, maximum(shape(I)), height(ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), matcher(chain(dedupe, first, compose(first, chain(rbind(rapply, I), initset, first))), repeat(leastcolor(I), ONE)))), I), leastcolor(I)))), interval(ZERO, maximum(shape(I)), height(ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), matcher(chain(dedupe, first, compose(first, chain(rbind(rapply, I), initset, first))), repeat(leastcolor(I), ONE)))), I), leastcolor(I))))))))
"""

verify_3bdb4ada = """
fill(I, color(extract(partition(I), compose(flip, fork(equality, size, fork(multiply, height, width))))), mapply(fork(sfilter, toindices, fork(lbind(fork, both), chain(lbind(rbind(chain, first), compose(flip, even)), lbind(rbind, subtract), uppermost), chain(lbind(rbind(chain, last), compose(flip, even)), lbind(rbind, subtract), leftmost))), remove(extract(partition(I), compose(flip, fork(equality, size, fork(multiply, height, width)))), partition(I))))
"""

verify_3befdf3e = """
paint(I, mapply(fork(combine, fork(recolor, compose(color, fork(sfilter, identity, chain(rbind(compose, last), lbind(rbind, contained), box))), fork(difference, fork(combine, backdrop, fork(combine, fork(combine, fork(shift, toindices, compose(toivec, chain(decrement, decrement, height))), fork(shift, toindices, chain(toivec, invert, chain(decrement, decrement, height)))), fork(combine, fork(shift, toindices, compose(tojvec, chain(decrement, decrement, width))), fork(shift, toindices, chain(tojvec, invert, chain(decrement, decrement, width)))))), box)), fork(recolor, fork(other, palette, compose(color, fork(sfilter, identity, chain(rbind(compose, last), lbind(rbind, contained), box)))), box)), objects(I, F, F, T)))
"""

verify_3c9b0459 = """
rot180(I)
"""

verify_3de23699 = """
trim(subgrid(combine(ofcolor(I, first(order(remove(mostcolor(toobject(mapply(dneighbors, corners(asindices(I))), I)), palette(I)), identity))), ofcolor(I, last(order(remove(mostcolor(toobject(mapply(dneighbors, corners(asindices(I))), I)), palette(I)), identity)))), switch(I, last(order(remove(mostcolor(toobject(mapply(dneighbors, corners(asindices(I))), I)), palette(I)), identity)), first(order(remove(mostcolor(toobject(mapply(dneighbors, corners(asindices(I))), I)), palette(I)), identity)))))
"""

verify_3e980e27 = """
call(compose(branch(positive(size(ofcolor(I, THREE))), fork(paint, identity, fork(mapply, compose(lbind(lbind, shift), chain(normalize, rbind(argmax, numcolors), compose(rbind(sfilter, compose(lbind(contained, THREE), palette)), rbind(rbind(rbind(objects, T), T), F)))), chain(rbind(apply, ofcolor(I, THREE)), lbind(lbind, add), compose(invert, chain(ulcorner, rbind(sfilter, matcher(first, THREE)), chain(normalize, rbind(argmax, numcolors), compose(rbind(sfilter, compose(lbind(contained, THREE), palette)), rbind(rbind(rbind(objects, T), T), F)))))))), identity), branch(positive(size(ofcolor(I, TWO))), fork(paint, identity, fork(mapply, compose(lbind(lbind, shift), chain(normalize, vmirror, compose(rbind(argmax, numcolors), compose(rbind(sfilter, compose(lbind(contained, TWO), palette)), rbind(rbind(rbind(objects, T), T), F))))), fork(apply, chain(lbind(lbind, add), invert, chain(ulcorner, rbind(sfilter, matcher(first, TWO)), chain(normalize, vmirror, compose(rbind(argmax, numcolors), compose(rbind(sfilter, compose(lbind(contained, TWO), palette)), rbind(rbind(rbind(objects, T), T), F)))))), compose(rbind(remove, ofcolor(I, TWO)), chain(center, rbind(sfilter, matcher(first, TWO)), compose(rbind(argmax, numcolors), compose(rbind(sfilter, compose(lbind(contained, TWO), palette)), rbind(rbind(rbind(objects, T), T), F)))))))), identity)), I)
"""

verify_3eda0437 = """
paint(I, call(branch(positive(size(sfilter(apply(compose(lbind(sfilter, product(interval(TWO, increment(maximum(apply(compose(size, rbind(sfilter, matcher(identity, ZERO))), dmirror(I)))), ONE), interval(TWO, increment(maximum(apply(compose(size, rbind(sfilter, matcher(identity, ZERO))), I))), ONE))), lbind(matcher, fork(multiply, first, last))), apply(fork(multiply, first, last), product(interval(TWO, increment(maximum(apply(compose(size, rbind(sfilter, matcher(identity, ZERO))), dmirror(I)))), ONE), interval(TWO, increment(maximum(apply(compose(size, rbind(sfilter, matcher(identity, ZERO))), I))), ONE)))), chain(positive, size, lbind(mapply, chain(lbind(occurrences, I), lbind(recolor, ZERO), compose(asindices, lbind(canvas, NEG_ONE)))))))), chain(lbind(recolor, SIX), lbind(mapply, compose(fork(mapply, lbind(lbind, shift), lbind(occurrences, I)), chain(lbind(recolor, ZERO), asindices, lbind(canvas, NEG_ONE)))), rbind(argmax, compose(fork(multiply, first, last), first))), fork(difference, identity, identity)), sfilter(apply(compose(lbind(sfilter, product(interval(TWO, increment(maximum(apply(compose(size, rbind(sfilter, matcher(identity, ZERO))), dmirror(I)))), ONE), interval(TWO, increment(maximum(apply(compose(size, rbind(sfilter, matcher(identity, ZERO))), I))), ONE))), lbind(matcher, fork(multiply, first, last))), apply(fork(multiply, first, last), product(interval(TWO, increment(maximum(apply(compose(size, rbind(sfilter, matcher(identity, ZERO))), dmirror(I)))), ONE), interval(TWO, increment(maximum(apply(compose(size, rbind(sfilter, matcher(identity, ZERO))), I))), ONE)))), chain(positive, size, lbind(mapply, chain(lbind(occurrences, I), lbind(recolor, ZERO), compose(asindices, lbind(canvas, NEG_ONE))))))))
"""

verify_3f7978a0 = """
subgrid(insert(add(ulcorner(extract(partition(I), fork(both, fork(either, fork(equality, compose(double, height), size), fork(equality, compose(double, width), size)), fork(either, chain(rbind(equality, TWO), size, chain(rbind(sfilter, vline), lbind(colorfilter, objects(I, T, F, F)), color)), chain(rbind(equality, TWO), size, chain(rbind(sfilter, hline), lbind(colorfilter, objects(I, T, F, F)), color)))))), branch(vline(first(colorfilter(objects(I, T, F, F), color(extract(partition(I), fork(both, fork(either, fork(equality, compose(double, height), size), fork(equality, compose(double, width), size)), fork(either, chain(rbind(equality, TWO), size, chain(rbind(sfilter, vline), lbind(colorfilter, objects(I, T, F, F)), color)), chain(rbind(equality, TWO), size, chain(rbind(sfilter, hline), lbind(colorfilter, objects(I, T, F, F)), color))))))))), UP, LEFT)), initset(add(lrcorner(extract(partition(I), fork(both, fork(either, fork(equality, compose(double, height), size), fork(equality, compose(double, width), size)), fork(either, chain(rbind(equality, TWO), size, chain(rbind(sfilter, vline), lbind(colorfilter, objects(I, T, F, F)), color)), chain(rbind(equality, TWO), size, chain(rbind(sfilter, hline), lbind(colorfilter, objects(I, T, F, F)), color)))))), branch(vline(first(colorfilter(objects(I, T, F, F), color(extract(partition(I), fork(both, fork(either, fork(equality, compose(double, height), size), fork(equality, compose(double, width), size)), fork(either, chain(rbind(equality, TWO), size, chain(rbind(sfilter, vline), lbind(colorfilter, objects(I, T, F, F)), color)), chain(rbind(equality, TWO), size, chain(rbind(sfilter, hline), lbind(colorfilter, objects(I, T, F, F)), color))))))))), DOWN, RIGHT)))), I)
"""

verify_40853293 = """
paint(paint(I, mfilter(apply(fork(recolor, color, backdrop), partition(I)), hline)), mfilter(apply(fork(recolor, color, backdrop), partition(I)), vline))
"""

verify_4093f84a = """
replace(call(branch(positive(leftmost(ofcolor(I, argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I)))))), identity, dmirror), hconcat(hconcat(apply(rbind(order, rbind(equality, argmin(remove(argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I))), palette(I)), lbind(colorcount, I)))), subgrid(sfilter(asindices(call(branch(positive(leftmost(ofcolor(I, argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I)))))), identity, dmirror), I)), compose(lbind(greater, leftmost(ofcolor(call(branch(positive(leftmost(ofcolor(I, argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I)))))), identity, dmirror), I), argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I)))))), last)), call(branch(positive(leftmost(ofcolor(I, argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I)))))), identity, dmirror), I))), subgrid(ofcolor(call(branch(positive(leftmost(ofcolor(I, argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I)))))), identity, dmirror), I), argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I)))), call(branch(positive(leftmost(ofcolor(I, argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I)))))), identity, dmirror), I))), vmirror(apply(rbind(order, rbind(equality, argmin(remove(argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I))), palette(I)), lbind(colorcount, I)))), vmirror(subgrid(sfilter(asindices(call(branch(positive(leftmost(ofcolor(I, argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I)))))), identity, dmirror), I)), compose(rbind(greater, rightmost(ofcolor(call(branch(positive(leftmost(ofcolor(I, argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I)))))), identity, dmirror), I), argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I)))))), last)), call(branch(positive(leftmost(ofcolor(I, argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I)))))), identity, dmirror), I))))))), argmin(remove(argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I))), palette(I)), lbind(colorcount, I)), argmin(palette(merge(frontiers(I))), compose(fork(multiply, height, width), lbind(ofcolor, I))))
"""

verify_41e4d17e = """
underfill(I, SIX, mapply(compose(fork(combine, vfrontier, hfrontier), center), sfilter(objects(I, T, F, F), fork(both, compose(lbind(equality, NINE), size), fork(equality, height, width)))))
"""

verify_4258a5f9 = """
fill(I, ONE, difference(mapply(neighbors, ofcolor(I, leastcolor(I))), ofcolor(I, leastcolor(I))))
"""

verify_4290ef0e = """
paint(rot90(paint(rot90(paint(rot90(paint(canvas(mostcolor(I), astuple(decrement(double(branch(contained(ONE, apply(size, fgpartition(I))), size(fgpartition(I)), increment(size(fgpartition(I)))))), decrement(double(branch(contained(ONE, apply(size, fgpartition(I))), size(fgpartition(I)), increment(size(fgpartition(I)))))))), mpapply(shift, apply(normalize, apply(compose(rbind(argmax, fork(add, fork(contained, compose(rbind(add, DOWN), ulcorner), toindices), fork(contained, compose(rbind(add, RIGHT), ulcorner), toindices))), fork(insert, hmirror, fork(insert, cmirror, fork(insert, vmirror, compose(initset, identity))))), order(fgpartition(I), compose(invert, fork(add, compose(maximum, shape), chain(rbind(valmax, width), lbind(colorfilter, objects(I, T, F, T)), color)))))), pair(interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size(fgpartition(I)), increment(size(fgpartition(I)))), ONE), interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size(fgpartition(I)), increment(size(fgpartition(I)))), ONE))))), mpapply(shift, apply(normalize, apply(compose(rbind(argmax, fork(add, fork(contained, compose(rbind(add, DOWN), ulcorner), toindices), fork(contained, compose(rbind(add, RIGHT), ulcorner), toindices))), fork(insert, hmirror, fork(insert, cmirror, fork(insert, vmirror, compose(initset, identity))))), order(fgpartition(I), compose(invert, fork(add, compose(maximum, shape), chain(rbind(valmax, width), lbind(colorfilter, objects(I, T, F, T)), color)))))), pair(interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size(fgpartition(I)), increment(size(fgpartition(I)))), ONE), interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size(fgpartition(I)), increment(size(fgpartition(I)))), ONE))))), mpapply(shift, apply(normalize, apply(compose(rbind(argmax, fork(add, fork(contained, compose(rbind(add, DOWN), ulcorner), toindices), fork(contained, compose(rbind(add, RIGHT), ulcorner), toindices))), fork(insert, hmirror, fork(insert, cmirror, fork(insert, vmirror, compose(initset, identity))))), order(fgpartition(I), compose(invert, fork(add, compose(maximum, shape), chain(rbind(valmax, width), lbind(colorfilter, objects(I, T, F, T)), color)))))), pair(interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size(fgpartition(I)), increment(size(fgpartition(I)))), ONE), interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size(fgpartition(I)), increment(size(fgpartition(I)))), ONE))))), mpapply(shift, apply(normalize, apply(compose(rbind(argmax, fork(add, fork(contained, compose(rbind(add, DOWN), ulcorner), toindices), fork(contained, compose(rbind(add, RIGHT), ulcorner), toindices))), fork(insert, hmirror, fork(insert, cmirror, fork(insert, vmirror, compose(initset, identity))))), order(fgpartition(I), compose(invert, fork(add, compose(maximum, shape), chain(rbind(valmax, width), lbind(colorfilter, objects(I, T, F, T)), color)))))), pair(interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size(fgpartition(I)), increment(size(fgpartition(I)))), ONE), interval(ZERO, branch(contained(ONE, apply(size, fgpartition(I))), size(fgpartition(I)), increment(size(fgpartition(I)))), ONE))))
"""

verify_42a50994 = """
cover(I, merge(sizefilter(objects(I, F, T, T), ONE)))
"""

verify_4347f46a = """
fill(I, mostcolor(I), mapply(fork(difference, toindices, box), objects(I, T, F, T)))
"""

verify_444801d8 = """
paint(I, mapply(fork(recolor, chain(leastcolor, rbind(toobject, I), delta), fork(combine, delta, fork(argmin, fork(astuple, compose(rbind(shift, UP), fork(connect, ulcorner, urcorner)), compose(rbind(shift, DOWN), fork(connect, llcorner, lrcorner))), compose(lbind(rbind, manhattan), delta)))), difference(objects(I, T, F, T), sizefilter(objects(I, T, F, T), ONE))))
"""

verify_445eab21 = """
canvas(color(argmax(objects(I, T, F, T), fork(multiply, height, width))), TWO_BY_TWO)
"""

verify_447fd412 = """
subgrid(shift(asobject(I), shape(I)), paint(paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I))), mapply(chain(merge, rbind(sfilter, fork(equality, chain(size, chain(lbind(mfilter, objects(paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I))), F, T, T)), rbind(lbind(chain, compose(positive, size)), toindices), lbind(rbind, intersection)), toindices), rbind(colorcount, mostcolor(merge(remove(normalize(argmax(objects(paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I))), F, T, T), numcolors)), objects(paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I))), F, T, T))))))), fork(apply, compose(lbind(lbind, shift), lbind(upscale, normalize(argmax(objects(paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I))), F, T, T), numcolors)))), compose(lbind(occurrences, paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I)))), lbind(upscale, combine(sfilter(normalize(argmax(objects(paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I))), F, T, T), numcolors)), matcher(first, mostcolor(merge(remove(normalize(argmax(objects(paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I))), F, T, T), numcolors)), objects(paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I))), F, T, T)))))), recolor(mostcolor(I), sfilter(normalize(argmax(objects(paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I))), F, T, T), numcolors)), matcher(first, argmin(palette(normalize(argmax(objects(paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I))), F, T, T), numcolors))), matcher(identity, mostcolor(merge(remove(normalize(argmax(objects(paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I))), F, T, T), numcolors)), objects(paint(canvas(mostcolor(I), multiply(shape(I), THREE)), shift(asobject(I), shape(I))), F, T, T)))))))))))))), interval(ONE, SIX, ONE))))
"""

verify_44d8ac46 = """
fill(I, TWO, mfilter(apply(delta, objects(I, T, F, T)), square))
"""

verify_44f52bb0 = """
canvas(branch(either(equality(vmirror(I), I), equality(hmirror(I), I)), ONE, SEVEN), UNITY)
"""

verify_4522001f = """
fill(paint(canvas(mostcolor(I), multiply(THREE, shape(I))), shift(asobject(I), multiply(subtract(ONE, first(delta(normalize(sfilter(first(objects(I, F, F, T)), matcher(first, mostcolor(merge(objects(I, F, F, T))))))))), double(shape(I))))), mostcolor(merge(objects(I, F, F, T))), mapply(fork(combine, compose(backdrop, fork(combine, identity, fork(extract, compose(rbind(apply, apply(double, ineighbors(ORIGIN))), lbind(lbind, shift)), compose(lbind(rbind, adjacent), chain(lbind(mapply, dneighbors), delta, rbind(sfilter, matcher(first, mostcolor(merge(objects(I, F, F, T)))))))))), compose(rbind(shift, multiply(decrement(double(first(delta(normalize(sfilter(first(objects(I, F, F, T)), matcher(first, mostcolor(merge(objects(I, F, F, T)))))))))), FOUR)), compose(backdrop, fork(combine, identity, fork(extract, compose(rbind(apply, apply(double, ineighbors(ORIGIN))), lbind(lbind, shift)), compose(lbind(rbind, adjacent), chain(lbind(mapply, dneighbors), delta, rbind(sfilter, matcher(first, mostcolor(merge(objects(I, F, F, T)))))))))))), objects(paint(canvas(mostcolor(I), multiply(THREE, shape(I))), shift(asobject(I), multiply(subtract(ONE, first(delta(normalize(sfilter(first(objects(I, F, F, T)), matcher(first, mostcolor(merge(objects(I, F, F, T))))))))), double(shape(I))))), F, F, T)))
"""

verify_4612dd53 = """
underfill(I, TWO, shift(ofcolor(fill(subgrid(ofcolor(I, leastcolor(I)), fill(I, TWO, box(ofcolor(I, leastcolor(I))))), TWO, branch(greater(size(mapply(vfrontier, ofcolor(subgrid(ofcolor(I, leastcolor(I)), fill(I, TWO, box(ofcolor(I, leastcolor(I))))), leastcolor(I)))), size(mapply(hfrontier, ofcolor(subgrid(ofcolor(I, leastcolor(I)), fill(I, TWO, box(ofcolor(I, leastcolor(I))))), leastcolor(I))))), mapply(hfrontier, ofcolor(subgrid(ofcolor(I, leastcolor(I)), fill(I, TWO, box(ofcolor(I, leastcolor(I))))), leastcolor(I))), mapply(vfrontier, ofcolor(subgrid(ofcolor(I, leastcolor(I)), fill(I, TWO, box(ofcolor(I, leastcolor(I))))), leastcolor(I))))), TWO), ulcorner(ofcolor(I, leastcolor(I)))))
"""

verify_46442a0e = """
vconcat(hconcat(I, rot90(I)), hconcat(rot270(I), rot180(I)))
"""

verify_469497ad = """
fill(upscale(I, decrement(numcolors(I))), TWO, intersection(combine(combine(shoot(ulcorner(ofcolor(upscale(I, decrement(numcolors(I))), argmin(sfilter(palette(I), matcher(chain(numcolors, rbind(toobject, I), compose(outbox, lbind(ofcolor, I))), ONE)), compose(fork(multiply, height, width), lbind(ofcolor, I))))), NEG_UNITY), shoot(lrcorner(ofcolor(upscale(I, decrement(numcolors(I))), argmin(sfilter(palette(I), matcher(chain(numcolors, rbind(toobject, I), compose(outbox, lbind(ofcolor, I))), ONE)), compose(fork(multiply, height, width), lbind(ofcolor, I))))), UNITY)), combine(shoot(urcorner(ofcolor(upscale(I, decrement(numcolors(I))), argmin(sfilter(palette(I), matcher(chain(numcolors, rbind(toobject, I), compose(outbox, lbind(ofcolor, I))), ONE)), compose(fork(multiply, height, width), lbind(ofcolor, I))))), UP_RIGHT), shoot(llcorner(ofcolor(upscale(I, decrement(numcolors(I))), argmin(sfilter(palette(I), matcher(chain(numcolors, rbind(toobject, I), compose(outbox, lbind(ofcolor, I))), ONE)), compose(fork(multiply, height, width), lbind(ofcolor, I))))), DOWN_LEFT))), ofcolor(upscale(I, decrement(numcolors(I))), mostcolor(toobject(outbox(ofcolor(upscale(I, decrement(numcolors(I))), argmin(sfilter(palette(I), matcher(chain(numcolors, rbind(toobject, I), compose(outbox, lbind(ofcolor, I))), ONE)), compose(fork(multiply, height, width), lbind(ofcolor, I))))), upscale(I, decrement(numcolors(I))))))))
"""

verify_46f33fce = """
upscale(rot180(downscale(rot180(I), TWO)), FOUR)
"""

verify_47c1f68c = """
fill(argmax(combine(astuple(vconcat(hconcat(lefthalf(tophalf(I)), vmirror(lefthalf(tophalf(I)))), hmirror(hconcat(lefthalf(tophalf(I)), vmirror(lefthalf(tophalf(I)))))), vconcat(hconcat(vmirror(righthalf(tophalf(I))), righthalf(tophalf(I))), hmirror(hconcat(vmirror(righthalf(tophalf(I))), righthalf(tophalf(I)))))), astuple(vconcat(hmirror(hconcat(lefthalf(bottomhalf(I)), vmirror(lefthalf(bottomhalf(I))))), hconcat(lefthalf(bottomhalf(I)), vmirror(lefthalf(bottomhalf(I))))), vconcat(hmirror(hconcat(vmirror(righthalf(bottomhalf(I))), righthalf(bottomhalf(I)))), hconcat(vmirror(righthalf(bottomhalf(I))), righthalf(bottomhalf(I)))))), numcolors), color(merge(frontiers(I))), difference(asindices(argmax(combine(astuple(vconcat(hconcat(lefthalf(tophalf(I)), vmirror(lefthalf(tophalf(I)))), hmirror(hconcat(lefthalf(tophalf(I)), vmirror(lefthalf(tophalf(I)))))), vconcat(hconcat(vmirror(righthalf(tophalf(I))), righthalf(tophalf(I))), hmirror(hconcat(vmirror(righthalf(tophalf(I))), righthalf(tophalf(I)))))), astuple(vconcat(hmirror(hconcat(lefthalf(bottomhalf(I)), vmirror(lefthalf(bottomhalf(I))))), hconcat(lefthalf(bottomhalf(I)), vmirror(lefthalf(bottomhalf(I))))), vconcat(hmirror(hconcat(vmirror(righthalf(bottomhalf(I))), righthalf(bottomhalf(I)))), hconcat(vmirror(righthalf(bottomhalf(I))), righthalf(bottomhalf(I)))))), numcolors)), ofcolor(argmax(combine(astuple(vconcat(hconcat(lefthalf(tophalf(I)), vmirror(lefthalf(tophalf(I)))), hmirror(hconcat(lefthalf(tophalf(I)), vmirror(lefthalf(tophalf(I)))))), vconcat(hconcat(vmirror(righthalf(tophalf(I))), righthalf(tophalf(I))), hmirror(hconcat(vmirror(righthalf(tophalf(I))), righthalf(tophalf(I)))))), astuple(vconcat(hmirror(hconcat(lefthalf(bottomhalf(I)), vmirror(lefthalf(bottomhalf(I))))), hconcat(lefthalf(bottomhalf(I)), vmirror(lefthalf(bottomhalf(I))))), vconcat(hmirror(hconcat(vmirror(righthalf(bottomhalf(I))), righthalf(bottomhalf(I)))), hconcat(vmirror(righthalf(bottomhalf(I))), righthalf(bottomhalf(I)))))), numcolors), mostcolor(compress(I)))))
"""

verify_484b58aa = """
paint(I, mapply(lbind(shift, sfilter(asobject(I), compose(flip, matcher(first, argmin(sfilter(palette(I), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), valmin(palette(I), compose(size, lbind(colorfilter, objects(I, T, F, F)))))), lbind(colorcount, I)))))), apply(lbind(multiply, astuple(hperiod(asobject(sfilter(dmirror(I), compose(flip, lbind(contained, argmin(sfilter(palette(I), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), valmin(palette(I), compose(size, lbind(colorfilter, objects(I, T, F, F)))))), lbind(colorcount, I))))))), hperiod(asobject(sfilter(I, compose(flip, lbind(contained, argmin(sfilter(palette(I), matcher(compose(size, lbind(colorfilter, objects(I, T, F, F))), valmin(palette(I), compose(size, lbind(colorfilter, objects(I, T, F, F)))))), lbind(colorcount, I))))))))), mapply(neighbors, neighbors(ORIGIN)))))
"""

verify_48d8fb45 = """
paint(canvas(mostcolor(I), shape(sfilter(argmax(objects(I, F, T, T), numcolors), matcher(first, mostcolor(argmax(objects(I, F, T, T), numcolors)))))), normalize(sfilter(argmax(objects(I, F, T, T), numcolors), matcher(first, mostcolor(argmax(objects(I, F, T, T), numcolors))))))
"""

verify_4938f0c2 = """
paint(I, mapply(fork(shift, identity, chain(lbind(subtract, ulcorner(extract(fgpartition(I), fork(both, square, matcher(size, FOUR))))), ulcorner, rbind(sfilter, matcher(first, color(extract(fgpartition(I), fork(both, square, matcher(size, FOUR)))))))), rapply(insert(hmirror, insert(vmirror, initset(compose(hmirror, vmirror)))), merge(fgpartition(I)))))
"""

verify_496994bd = """
paint(I, sfilter(asobject(call(branch(contained(ONE, apply(numcolors, vsplit(I, TWO))), hmirror, vmirror), I)), compose(flip, matcher(first, mostcolor(I)))))
"""

verify_49d1d64f = """
paint(paint(paint(paint(paint(canvas(ZERO, increment(increment(shape(I)))), shift(shift(asobject(I), UNITY), LEFT)), shift(shift(asobject(I), UNITY), RIGHT)), shift(shift(asobject(I), UNITY), UP)), shift(shift(asobject(I), UNITY), DOWN)), shift(asobject(I), UNITY))
"""

verify_4be741c5 = """
call(branch(equality(size(dedupe(first(I))), ONE), dmirror, identity), apply(dedupe, crop(call(branch(equality(size(dedupe(first(I))), ONE), dmirror, identity), I), ORIGIN, astuple(ONE, call(branch(equality(size(dedupe(first(I))), ONE), height, width), I)))))
"""

verify_4c4377d9 = """
vconcat(hmirror(I), I)
"""

verify_4c5c2cf0 = """
paint(I, mapply(fork(shift, identity, chain(lbind(subtract, ulcorner(extract(fgpartition(I), fork(both, fork(equality, toindices, fork(difference, backdrop, compose(dneighbors, center))), matcher(size, FIVE))))), ulcorner, rbind(sfilter, matcher(first, color(extract(fgpartition(I), fork(both, fork(equality, toindices, fork(difference, backdrop, compose(dneighbors, center))), matcher(size, FIVE)))))))), rapply(insert(hmirror, insert(vmirror, initset(compose(hmirror, vmirror)))), merge(fgpartition(I)))))
"""

verify_50846271 = """
fill(replace(fill(call(power(fork(paint, identity, chain(lbind(recolor, leastcolor(I)), rbind(mapply, interval(TWO, FIVE, ONE)), fork(lbind(fork, combine), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, LEFT)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, RIGHT)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I)))), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, UP)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, DOWN)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))))))), FOUR), I), leastcolor(I), mapply(fork(combine, fork(connect, rbind(add, toivec(invert(halve(maximum(apply(compose(maximum, shape), colorfilter(objects(call(power(fork(paint, identity, chain(lbind(recolor, leastcolor(I)), rbind(mapply, interval(TWO, FIVE, ONE)), fork(lbind(fork, combine), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, LEFT)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, RIGHT)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I)))), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, UP)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, DOWN)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))))))), FOUR), I), T, T, T), leastcolor(I)))))))), rbind(add, toivec(halve(maximum(apply(compose(maximum, shape), colorfilter(objects(call(power(fork(paint, identity, chain(lbind(recolor, leastcolor(I)), rbind(mapply, interval(TWO, FIVE, ONE)), fork(lbind(fork, combine), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, LEFT)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, RIGHT)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I)))), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, UP)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, DOWN)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))))))), FOUR), I), T, T, T), leastcolor(I)))))))), fork(connect, rbind(add, tojvec(invert(halve(maximum(apply(compose(maximum, shape), colorfilter(objects(call(power(fork(paint, identity, chain(lbind(recolor, leastcolor(I)), rbind(mapply, interval(TWO, FIVE, ONE)), fork(lbind(fork, combine), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, LEFT)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, RIGHT)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I)))), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, UP)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, DOWN)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))))))), FOUR), I), T, T, T), leastcolor(I)))))))), rbind(add, tojvec(halve(maximum(apply(compose(maximum, shape), colorfilter(objects(call(power(fork(paint, identity, chain(lbind(recolor, leastcolor(I)), rbind(mapply, interval(TWO, FIVE, ONE)), fork(lbind(fork, combine), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, LEFT)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, RIGHT)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I)))), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, UP)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, DOWN)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))))))), FOUR), I), T, T, T), leastcolor(I))))))))), combine(sfilter(ofcolor(call(power(fork(paint, identity, chain(lbind(recolor, leastcolor(I)), rbind(mapply, interval(TWO, FIVE, ONE)), fork(lbind(fork, combine), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, LEFT)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, RIGHT)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I)))), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, UP)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, DOWN)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))))))), FOUR), I), leastcolor(I)), fork(both, fork(either, compose(rbind(contained, ofcolor(call(power(fork(paint, identity, chain(lbind(recolor, leastcolor(I)), rbind(mapply, interval(TWO, FIVE, ONE)), fork(lbind(fork, combine), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, LEFT)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, RIGHT)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I)))), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, UP)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, DOWN)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))))))), FOUR), I), leastcolor(I))), rbind(add, RIGHT)), compose(rbind(contained, ofcolor(call(power(fork(paint, identity, chain(lbind(recolor, leastcolor(I)), rbind(mapply, interval(TWO, FIVE, ONE)), fork(lbind(fork, combine), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, LEFT)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, RIGHT)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I)))), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, UP)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, DOWN)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))))))), FOUR), I), leastcolor(I))), rbind(add, LEFT))), fork(either, compose(rbind(contained, ofcolor(call(power(fork(paint, identity, chain(lbind(recolor, leastcolor(I)), rbind(mapply, interval(TWO, FIVE, ONE)), fork(lbind(fork, combine), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, LEFT)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, RIGHT)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I)))), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, UP)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, DOWN)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))))))), FOUR), I), leastcolor(I))), rbind(add, DOWN)), compose(rbind(contained, ofcolor(call(power(fork(paint, identity, chain(lbind(recolor, leastcolor(I)), rbind(mapply, interval(TWO, FIVE, ONE)), fork(lbind(fork, combine), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, LEFT)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, RIGHT)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I)))), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, UP)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, DOWN)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))))))), FOUR), I), leastcolor(I))), rbind(add, UP))))), apply(center, sfilter(colorfilter(objects(call(power(fork(paint, identity, chain(lbind(recolor, leastcolor(I)), rbind(mapply, interval(TWO, FIVE, ONE)), fork(lbind(fork, combine), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, LEFT)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, RIGHT)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I)))), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, UP)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, DOWN)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))))))), FOUR), I), T, T, T), leastcolor(I)), fork(both, matcher(size, maximum(apply(compose(maximum, shape), colorfilter(objects(call(power(fork(paint, identity, chain(lbind(recolor, leastcolor(I)), rbind(mapply, interval(TWO, FIVE, ONE)), fork(lbind(fork, combine), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, LEFT)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, RIGHT)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), tojvec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I)))), fork(lbind(fork, combine), compose(chain(lbind(compose, rbind(shift, UP)), rbind(lbind(chain, first), call(lbind(compose, initset), compose(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))), compose(chain(lbind(compose, rbind(shift, DOWN)), rbind(lbind(chain, first), call(lbind(compose, initset), chain(compose(lbind(lbind(fork, intersection), identity), lbind(rbind, shift)), toivec, invert))), lbind(rbind, rapply)), rbind(ofcolor, leastcolor(I))))))), FOUR), I), T, T, T), leastcolor(I))))), fork(either, vline, hline))))))), leastcolor(I), EIGHT), leastcolor(I), ofcolor(I, leastcolor(I)))
"""

verify_508bd3b6 = """
fill(I, THREE, difference(combine(call(lbind(shoot, argmin(intersection(intersection(asindices(I), outbox(ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I))))))), branch(contained(ulcorner(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE)))), ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE)))), combine(shoot(argmin(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE))), compose(rbind(manhattan, ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I)))))), initset)), UNITY), shoot(argmin(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE))), compose(rbind(manhattan, ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I)))))), initset)), NEG_UNITY)), combine(shoot(argmin(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE))), compose(rbind(manhattan, ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I)))))), initset)), UP_RIGHT), shoot(argmin(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE))), compose(rbind(manhattan, ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I)))))), initset)), DOWN_LEFT)))), compose(rbind(manhattan, initset(argmin(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE))), compose(rbind(manhattan, ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I)))))), initset)))), initset))), branch(equality(height(ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I)))))), height(I)), branch(greater(leftmost(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE)))), leftmost(ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I))))))), UNITY, NEG_UNITY), branch(greater(uppermost(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE)))), uppermost(ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I))))))), UNITY, NEG_UNITY))), call(lbind(shoot, argmin(intersection(intersection(asindices(I), outbox(ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I))))))), branch(contained(ulcorner(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE)))), ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE)))), combine(shoot(argmin(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE))), compose(rbind(manhattan, ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I)))))), initset)), UNITY), shoot(argmin(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE))), compose(rbind(manhattan, ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I)))))), initset)), NEG_UNITY)), combine(shoot(argmin(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE))), compose(rbind(manhattan, ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I)))))), initset)), UP_RIGHT), shoot(argmin(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE))), compose(rbind(manhattan, ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I)))))), initset)), DOWN_LEFT)))), compose(rbind(manhattan, initset(argmin(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE))), compose(rbind(manhattan, ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I)))))), initset)))), initset))), branch(equality(height(ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I)))))), height(I)), branch(greater(leftmost(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE)))), leftmost(ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I))))))), UP_RIGHT, DOWN_LEFT), branch(greater(uppermost(ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE)))), uppermost(ofcolor(I, extract(palette(I), fork(equality, lbind(ofcolor, I), compose(backdrop, lbind(ofcolor, I))))))), DOWN_LEFT, UP_RIGHT)))), ofcolor(I, extract(palette(I), matcher(chain(maximum, lbind(apply, compose(maximum, shape)), lbind(colorfilter, objects(I, T, F, F))), ONE)))))
"""

verify_50cb2852 = """
fill(I, EIGHT, mapply(compose(backdrop, inbox), objects(I, T, F, T)))
"""

verify_5117e062 = """
fill(canvas(mostcolor(I), shape(argmax(objects(I, F, T, T), numcolors))), mostcolor(argmax(objects(I, F, T, T), numcolors)), normalize(argmax(objects(I, F, T, T), numcolors)))
"""

verify_5168d44c = """
paint(replace(I, color(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))), color(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size))), combine(shift(vmirror(combine(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))))), shift(hmirror(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))))))))), subtract(ulcorner(delta(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))))))), ulcorner(delta(hmirror(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))))))))))))))), subtract(ulcorner(delta(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))))))), ulcorner(delta(vmirror(combine(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))))), shift(hmirror(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))))))))), subtract(ulcorner(delta(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))))))), ulcorner(delta(hmirror(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))))))))))))))))))), combine(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))))), shift(hmirror(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))))))))), subtract(ulcorner(delta(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))))))), ulcorner(delta(hmirror(shift(argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)), astuple(branch(equality(ONE, size(apply(uppermost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), lowermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), uppermost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))))), branch(equality(ONE, size(apply(leftmost, colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))))), ZERO, maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), rightmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))), subtract(leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)), colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color)))))), lbind(manhattan, argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner))))), leftmost(argmin(colorfilter(objects(I, T, F, F), color(other(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), argmin(remove(argmax(sfilter(partition(I), matcher(fork(multiply, height, width), valmax(partition(I), fork(multiply, height, width)))), size), partition(I)), chain(size, lbind(colorfilter, objects(I, T, F, F)), color))))), compose(fork(add, first, last), ulcorner)))))))))))))))))
"""

verify_539a4f51 = """
call(extract(combine(astuple(identity, cmirror), astuple(hmirror, vmirror)), chain(first, rbind(rapply, I), compose(initset, lbind(compose, compose(chain(lbind(contained, ORIGIN), toindices, rbind(argmin, fork(multiply, height, width))), rbind(rbind(rbind(objects, F), F), T)))))), paint(upscale(call(extract(combine(astuple(identity, cmirror), astuple(hmirror, vmirror)), chain(first, rbind(rapply, I), compose(initset, lbind(compose, compose(chain(lbind(contained, ORIGIN), toindices, rbind(argmin, fork(multiply, height, width))), rbind(rbind(rbind(objects, F), F), T)))))), I), TWO), combine(sfilter(asobject(repeat(merge(repeat(sfilter(first(call(extract(combine(astuple(identity, cmirror), astuple(hmirror, vmirror)), chain(first, rbind(rapply, I), compose(initset, lbind(compose, compose(chain(lbind(contained, ORIGIN), toindices, rbind(argmin, fork(multiply, height, width))), rbind(rbind(rbind(objects, F), F), T)))))), I)), compose(flip, matcher(identity, ZERO))), double(increment(divide(height(I), size(sfilter(first(call(extract(combine(astuple(identity, cmirror), astuple(hmirror, vmirror)), chain(first, rbind(rapply, I), compose(initset, lbind(compose, compose(chain(lbind(contained, ORIGIN), toindices, rbind(argmin, fork(multiply, height, width))), rbind(rbind(rbind(objects, F), F), T)))))), I)), compose(flip, matcher(identity, ZERO))))))))), double(height(I)))), fork(greater, chain(increment, last, last), compose(first, last))), dmirror(sfilter(asobject(repeat(merge(repeat(sfilter(first(call(extract(combine(astuple(identity, cmirror), astuple(hmirror, vmirror)), chain(first, rbind(rapply, I), compose(initset, lbind(compose, compose(chain(lbind(contained, ORIGIN), toindices, rbind(argmin, fork(multiply, height, width))), rbind(rbind(rbind(objects, F), F), T)))))), I)), compose(flip, matcher(identity, ZERO))), double(increment(divide(height(I), size(sfilter(first(call(extract(combine(astuple(identity, cmirror), astuple(hmirror, vmirror)), chain(first, rbind(rapply, I), compose(initset, lbind(compose, compose(chain(lbind(contained, ORIGIN), toindices, rbind(argmin, fork(multiply, height, width))), rbind(rbind(rbind(objects, F), F), T)))))), I)), compose(flip, matcher(identity, ZERO))))))))), double(height(I)))), fork(greater, chain(increment, last, last), compose(first, last)))))))
"""

verify_53b68214 = """
paint(canvas(mostcolor(I), astuple(TEN, width(I))), mapply(compose(lbind(shift, merge(fgpartition(I))), lbind(multiply, argmax(sfilter(sfilter(remove(ORIGIN, product(interval(ONE, SIX, ONE), interval(invert(TEN), TEN, ONE))), fork(both, fork(equality, compose(size, compose(lbind(intersection, merge(fgpartition(I))), lbind(shift, merge(fgpartition(I))))), compose(size, compose(lbind(intersection, toindices(merge(fgpartition(I)))), lbind(shift, toindices(merge(fgpartition(I))))))), chain(positive, size, compose(lbind(intersection, merge(fgpartition(I))), lbind(shift, merge(fgpartition(I))))))), matcher(compose(size, compose(lbind(intersection, merge(fgpartition(I))), lbind(shift, merge(fgpartition(I))))), valmax(sfilter(remove(ORIGIN, product(interval(ONE, SIX, ONE), interval(invert(TEN), TEN, ONE))), fork(both, fork(equality, compose(size, compose(lbind(intersection, merge(fgpartition(I))), lbind(shift, merge(fgpartition(I))))), compose(size, compose(lbind(intersection, toindices(merge(fgpartition(I)))), lbind(shift, toindices(merge(fgpartition(I))))))), chain(positive, size, compose(lbind(intersection, merge(fgpartition(I))), lbind(shift, merge(fgpartition(I))))))), compose(size, compose(lbind(intersection, merge(fgpartition(I))), lbind(shift, merge(fgpartition(I)))))))), fork(multiply, first, last)))), interval(ZERO, TEN, ONE)))
"""

verify_543a7ed5 = """
fill(fill(I, THREE, mapply(outbox, objects(I, T, F, T))), FOUR, mapply(delta, objects(I, T, F, T)))
"""

verify_54d82841 = """
fill(I, FOUR, apply(branch(call(rbind(contained, toindices(first(objects(I, T, F, T)))), add(center(delta(first(objects(I, T, F, T)))), branch(portrait(first(objects(I, T, F, T))), RIGHT, DOWN))), branch(portrait(first(objects(I, T, F, T))), toivec, tojvec), call(branch(portrait(first(objects(I, T, F, T))), rbind, lbind), astuple, decrement(call(branch(portrait(first(objects(I, T, F, T))), width, height), I)))), branch(portrait(first(objects(I, T, F, T))), apply(first, mapply(delta, objects(I, T, F, T))), apply(last, mapply(delta, objects(I, T, F, T))))))
"""

verify_54d9e175 = """
paint(I, mapply(fork(recolor, chain(power(increment, FIVE), first, chain(lbind(remove, FIVE), lbind(remove, ZERO), palette)), toindices), objects(hconcat(I, canvas(leastcolor(merge(frontiers(I))), shape(I))), F, F, T)))
"""

verify_5521c0d9 = """
call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), compose(matcher(chain(maximum, lbind(apply, uppermost), compose(rbind(rbind(rbind(objects, T), F), T), fork(hconcat, identity, compose(lbind(canvas, mostcolor(toobject(box(asindices(I)), I))), shape)))), ZERO), chain(first, rbind(rapply, I), initset))), paint(fill(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), compose(matcher(chain(maximum, lbind(apply, uppermost), compose(rbind(rbind(rbind(objects, T), F), T), fork(hconcat, identity, compose(lbind(canvas, mostcolor(toobject(box(asindices(I)), I))), shape)))), ZERO), chain(first, rbind(rapply, I), initset))), I), mostcolor(I), merge(objects(hconcat(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), compose(matcher(chain(maximum, lbind(apply, uppermost), compose(rbind(rbind(rbind(objects, T), F), T), fork(hconcat, identity, compose(lbind(canvas, mostcolor(toobject(box(asindices(I)), I))), shape)))), ZERO), chain(first, rbind(rapply, I), initset))), I), canvas(mostcolor(toobject(box(asindices(I)), I)), shape(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), compose(matcher(chain(maximum, lbind(apply, uppermost), compose(rbind(rbind(rbind(objects, T), F), T), fork(hconcat, identity, compose(lbind(canvas, mostcolor(toobject(box(asindices(I)), I))), shape)))), ZERO), chain(first, rbind(rapply, I), initset))), I)))), T, F, T))), mapply(fork(shift, identity, compose(toivec, height)), objects(hconcat(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), compose(matcher(chain(maximum, lbind(apply, uppermost), compose(rbind(rbind(rbind(objects, T), F), T), fork(hconcat, identity, compose(lbind(canvas, mostcolor(toobject(box(asindices(I)), I))), shape)))), ZERO), chain(first, rbind(rapply, I), initset))), I), canvas(mostcolor(toobject(box(asindices(I)), I)), shape(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), compose(matcher(chain(maximum, lbind(apply, uppermost), compose(rbind(rbind(rbind(objects, T), F), T), fork(hconcat, identity, compose(lbind(canvas, mostcolor(toobject(box(asindices(I)), I))), shape)))), ZERO), chain(first, rbind(rapply, I), initset))), I)))), T, F, T))))
"""

verify_5582e5ca = """
canvas(mostcolor(I), shape(I))
"""

verify_5614dbcf = """
downscale(paint(I, mapply(fork(recolor, compose(color, chain(rbind(sfilter, compose(flip, matcher(first, FIVE))), rbind(toobject, I), lbind(shift, asindices(canvas(ZERO, THREE_BY_THREE))))), lbind(shift, asindices(canvas(ZERO, THREE_BY_THREE)))), apply(rbind(multiply, THREE), product(interval(ZERO, first(divide(shape(I), THREE)), ONE), interval(ZERO, last(divide(shape(I), THREE)), ONE))))), THREE)
"""

verify_56dc2b01 = """
call(branch(hline(ofcolor(I, TWO)), dmirror, identity), fill(paint(cover(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I), extract(fgpartition(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I)), compose(flip, matcher(color, TWO)))), shift(extract(fgpartition(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I)), compose(flip, matcher(color, TWO))), tojvec(call(branch(greater(leftmost(ofcolor(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I), TWO)), leftmost(extract(fgpartition(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I)), compose(flip, matcher(color, TWO))))), identity, invert), decrement(manhattan(extract(fgpartition(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I)), compose(flip, matcher(color, TWO))), ofcolor(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I), TWO))))))), EIGHT, vfrontier(tojvec(call(branch(greater(leftmost(ofcolor(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I), TWO)), leftmost(extract(fgpartition(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I)), compose(flip, matcher(color, TWO))))), decrement, increment), call(branch(greater(leftmost(ofcolor(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I), TWO)), leftmost(extract(fgpartition(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I)), compose(flip, matcher(color, TWO))))), leftmost, rightmost), shift(extract(fgpartition(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I)), compose(flip, matcher(color, TWO))), tojvec(call(branch(greater(leftmost(ofcolor(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I), TWO)), leftmost(extract(fgpartition(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I)), compose(flip, matcher(color, TWO))))), identity, invert), decrement(manhattan(extract(fgpartition(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I)), compose(flip, matcher(color, TWO))), ofcolor(call(branch(hline(ofcolor(I, TWO)), dmirror, identity),I), TWO))))))))))))
"""

verify_56ff96f3 = """
paint(I, mapply(fork(recolor, color, backdrop), fgpartition(I)))
"""

verify_57aa92db = """
paint(I, mapply(fork(combine, compose(rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained)))))), fork(shift, chain(lbind(upscale, argmax(sfilter(objects(I, F, T, T), matcher(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), minimum(apply(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), objects(I, F, T, T))))), size)), width, rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))))), fork(subtract, compose(ulcorner, rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))))), chain(ulcorner, rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained)))))), chain(lbind(upscale, argmax(sfilter(objects(I, F, T, T), matcher(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), minimum(apply(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), objects(I, F, T, T))))), size)), width, rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))))))))), fork(recolor, compose(rbind(other, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), palette), fork(difference, fork(shift, chain(lbind(upscale, argmax(sfilter(objects(I, F, T, T), matcher(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), minimum(apply(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), objects(I, F, T, T))))), size)), width, rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))))), fork(subtract, compose(ulcorner, rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))))), chain(ulcorner, rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained)))))), chain(lbind(upscale, argmax(sfilter(objects(I, F, T, T), matcher(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), minimum(apply(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), objects(I, F, T, T))))), size)), width, rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained)))))))))), compose(rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained)))))), fork(shift, chain(lbind(upscale, argmax(sfilter(objects(I, F, T, T), matcher(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), minimum(apply(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), objects(I, F, T, T))))), size)), width, rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))))), fork(subtract, compose(ulcorner, rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))))), chain(ulcorner, rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained)))))), chain(lbind(upscale, argmax(sfilter(objects(I, F, T, T), matcher(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), minimum(apply(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), objects(I, F, T, T))))), size)), width, rbind(sfilter, matcher(first, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained)))))))))))))), remove(argmax(sfilter(objects(I, F, T, T), matcher(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), minimum(apply(rbind(colorcount, argmax(palette(I), compose(size, chain(lbind(sfilter, objects(I, F, T, T)), rbind(compose, palette), lbind(lbind, contained))))), objects(I, F, T, T))))), size), objects(I, F, T, T))))
"""

verify_5ad4f10b = """
downscale(replace(switch(subgrid(ofcolor(I, argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I))))))), I), argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I)))))), other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I)))))))), argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I)))))), mostcolor(toobject(box(asindices(I)), I))), maximum(sfilter(interval(ONE, maximum(shape(replace(switch(subgrid(ofcolor(I, argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I))))))), I), argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I)))))), other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I)))))))), argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I)))))), mostcolor(toobject(box(asindices(I)), I))))), ONE), matcher(fork(upscale, lbind(downscale, replace(switch(subgrid(ofcolor(I, argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I))))))), I), argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I)))))), other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I)))))))), argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I)))))), mostcolor(toobject(box(asindices(I)), I)))), identity), replace(switch(subgrid(ofcolor(I, argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I))))))), I), argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I)))))), other(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I)))))))), argmax(remove(mostcolor(toobject(box(asindices(I)), I)), palette(I)), compose(chain(flip, positive, size), fork(sfilter, lbind(ofcolor, I), compose(rbind(matcher, ZERO), chain(rbind(lbind(chain, size), dneighbors), lbind(lbind, intersection), lbind(ofcolor, I)))))), mostcolor(toobject(box(asindices(I)), I)))))))
"""

verify_5bd6f4ac = """
rot90(crop(rot270(I), ORIGIN, THREE_BY_THREE))
"""

verify_5c0a986e = """
paint(I, combine(mapply(chain(lbind(recolor, TWO), rbind(shoot, UNITY), lrcorner), colorfilter(objects(I, T, F, T), TWO)), mapply(chain(lbind(recolor, ONE), rbind(shoot, NEG_UNITY), ulcorner), colorfilter(objects(I, T, F, T), ONE))))
"""

verify_5c2c9af4 = """
fill(I, leastcolor(I), mapply(box, pair(apply(rbind(add, ulcorner(ofcolor(I, leastcolor(I)))), apply(invert, pair(apply(rbind(multiply, halve(height(ofcolor(I, leastcolor(I))))), interval(ZERO, multiply(THREE, TEN), ONE)), apply(rbind(multiply, halve(width(ofcolor(I, leastcolor(I))))), interval(ZERO, multiply(THREE, TEN), ONE))))), apply(rbind(add, lrcorner(ofcolor(I, leastcolor(I)))), pair(apply(rbind(multiply, halve(height(ofcolor(I, leastcolor(I))))), interval(ZERO, multiply(THREE, TEN), ONE)), apply(rbind(multiply, halve(width(ofcolor(I, leastcolor(I))))), interval(ZERO, multiply(THREE, TEN), ONE)))))))
"""

verify_5daaa586 = """
fill(subgrid(outbox(mfilter(colorfilter(objects(I, T, F, F), mostcolor(I)), compose(flip, rbind(bordering, I)))), I), argmin(palette(trim(subgrid(outbox(mfilter(colorfilter(objects(I, T, F, F), mostcolor(I)), compose(flip, rbind(bordering, I)))), I))), matcher(identity, mostcolor(I))), mapply(fork(connect, first, last), sfilter(product(shift(ofcolor(trim(subgrid(outbox(mfilter(colorfilter(objects(I, T, F, F), mostcolor(I)), compose(flip, rbind(bordering, I)))), I)), argmin(palette(trim(subgrid(outbox(mfilter(colorfilter(objects(I, T, F, F), mostcolor(I)), compose(flip, rbind(bordering, I)))), I))), matcher(identity, mostcolor(I)))), UNITY), difference(ofcolor(subgrid(outbox(mfilter(colorfilter(objects(I, T, F, F), mostcolor(I)), compose(flip, rbind(bordering, I)))), I), argmin(palette(trim(subgrid(outbox(mfilter(colorfilter(objects(I, T, F, F), mostcolor(I)), compose(flip, rbind(bordering, I)))), I))), matcher(identity, mostcolor(I)))), shift(ofcolor(trim(subgrid(outbox(mfilter(colorfilter(objects(I, T, F, F), mostcolor(I)), compose(flip, rbind(bordering, I)))), I)), argmin(palette(trim(subgrid(outbox(mfilter(colorfilter(objects(I, T, F, F), mostcolor(I)), compose(flip, rbind(bordering, I)))), I))), matcher(identity, mostcolor(I)))), UNITY))), fork(either, fork(equality, compose(first, first), compose(first, last)), fork(equality, compose(last, first), compose(last, last))))))
"""

verify_60b61512 = """
fill(I, SEVEN, mapply(delta, objects(I, T, T, T)))
"""

verify_6150a2bd = """
rot180(I)
"""

verify_623ea044 = """
fill(I, leastcolor(I), mapply(fork(combine, fork(combine, rbind(shoot, UNITY), rbind(shoot, NEG_UNITY)), fork(combine, rbind(shoot, UP_RIGHT), rbind(shoot, DOWN_LEFT))), ofcolor(I, leastcolor(I))))
"""

verify_62c24649 = """
vconcat(hconcat(I, vmirror(I)), hmirror(hconcat(I, vmirror(I))))
"""

verify_63613498 = """
fill(I, color(argmax(sfilter(objects(I, T, F, T), fork(both, fork(both, fork(equality, compose(decrement, fork(add, height, width)), size), rbind(bordering, I)), matcher(chain(numcolors, rbind(toobject, I), delta), TWO))), size)), argmax(remove(sfilter(toobject(delta(argmax(sfilter(objects(I, T, F, T), fork(both, fork(both, fork(equality, compose(decrement, fork(add, height, width)), size), rbind(bordering, I)), matcher(chain(numcolors, rbind(toobject, I), delta), TWO))), size)), I), compose(flip, matcher(first, mostcolor(I)))), objects(I, T, F, T)), matcher(compose(toindices, normalize), toindices(normalize(sfilter(toobject(delta(argmax(sfilter(objects(I, T, F, T), fork(both, fork(both, fork(equality, compose(decrement, fork(add, height, width)), size), rbind(bordering, I)), matcher(chain(numcolors, rbind(toobject, I), delta), TWO))), size)), I), compose(flip, matcher(first, mostcolor(I)))))))))
"""

verify_6430c8c4 = """
fill(canvas(first(intersection(palette(call(branch(positive(size(sfilter(frontiers(I), hline))), tophalf, lefthalf), I)), palette(call(branch(positive(size(sfilter(frontiers(I), hline))), bottomhalf, righthalf), I)))), shape(call(branch(positive(size(sfilter(frontiers(I), hline))), tophalf, lefthalf), I))), THREE, intersection(ofcolor(call(branch(positive(size(sfilter(frontiers(I), hline))), tophalf, lefthalf), I), first(intersection(palette(call(branch(positive(size(sfilter(frontiers(I), hline))), tophalf, lefthalf), I)), palette(call(branch(positive(size(sfilter(frontiers(I), hline))), bottomhalf, righthalf), I))))), ofcolor(call(branch(positive(size(sfilter(frontiers(I), hline))), bottomhalf, righthalf), I), first(intersection(palette(call(branch(positive(size(sfilter(frontiers(I), hline))), tophalf, lefthalf), I)), palette(call(branch(positive(size(sfilter(frontiers(I), hline))), bottomhalf, righthalf), I)))))))
"""

verify_6455b5f5 = """
fill(fill(I, ONE, merge(sizefilter(colorfilter(objects(I, T, F, F), mostcolor(toobject(corners(asindices(I)), I))), valmax(colorfilter(objects(I, T, F, F), mostcolor(toobject(corners(asindices(I)), I))), size)))), EIGHT, merge(sizefilter(colorfilter(objects(I, T, F, F), mostcolor(toobject(corners(asindices(I)), I))), valmin(colorfilter(objects(I, T, F, F), mostcolor(toobject(corners(asindices(I)), I))), size))))
"""

verify_662c240a = """
extract(call(branch(portrait(I), vsplit, hsplit), I, divide(maximum(shape(I)), minimum(shape(I)))), compose(flip, fork(equality, identity, dmirror)))
"""

verify_67385a82 = """
fill(I, EIGHT, merge(difference(colorfilter(objects(I, T, F, F), other(palette(I), ZERO)), sizefilter(colorfilter(objects(I, T, F, F), other(palette(I), ZERO)), ONE))))
"""

verify_673ef223 = """
fill(fill(fill(fill(I, other(palette(merge(objects(I, T, F, T))), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))), mapply(fork(connect, identity, fork(add, identity, compose(rbind(gravitate, extract(colorfilter(objects(I, T, F, T), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))), fork(either, rbind(vmatching, ofcolor(I, other(palette(merge(objects(I, T, F, T))), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))))), rbind(hmatching, ofcolor(I, other(palette(merge(objects(I, T, F, T))), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T))))))))))))), initset))), ofcolor(I, other(palette(merge(objects(I, T, F, T))), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T))))))))))), FOUR, ofcolor(I, other(palette(merge(objects(I, T, F, T))), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))))), other(palette(merge(objects(I, T, F, T))), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))), mapply(branch(greater(size(apply(first, ofcolor(I, extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))))), size(apply(last, ofcolor(I, extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T))))))))))), hfrontier, vfrontier), shift(ofcolor(I, other(palette(merge(objects(I, T, F, T))), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T))))))))), call(branch(greater(size(apply(first, ofcolor(I, extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))))), size(apply(last, ofcolor(I, extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T))))))))))), compose(toivec, first), compose(tojvec, last)), subtract(ulcorner(other(colorfilter(objects(I, T, F, T), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))), extract(colorfilter(objects(I, T, F, T), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))), fork(either, rbind(vmatching, ofcolor(I, other(palette(merge(objects(I, T, F, T))), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))))), rbind(hmatching, ofcolor(I, other(palette(merge(objects(I, T, F, T))), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))))))))), ulcorner(extract(colorfilter(objects(I, T, F, T), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))), fork(either, rbind(vmatching, ofcolor(I, other(palette(merge(objects(I, T, F, T))), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))))), rbind(hmatching, ofcolor(I, other(palette(merge(objects(I, T, F, T))), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))))))))))))), extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T))))))), ofcolor(I, extract(palette(merge(objects(I, T, F, T))), fork(both, matcher(compose(size, lbind(colorfilter, objects(I, T, F, T))), TWO), fork(both, matcher(chain(size, rbind(difference, box(asindices(I))), lbind(ofcolor, I)), ZERO), chain(rbind(greater, ONE), minimum, compose(lbind(apply, size), lbind(colorfilter, objects(I, T, F, T)))))))))
"""

verify_6773b310 = """
fill(canvas(other(remove(color(merge(frontiers(I))), palette(I)), argmin(remove(color(merge(frontiers(I))), palette(I)), lbind(colorcount, I))), increment(astuple(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))))), ONE, apply(rbind(divide, increment(shape(first(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, T, T))))), apply(ulcorner, sfilter(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, T, T), matcher(rbind(colorcount, argmin(remove(color(merge(frontiers(I))), palette(I)), lbind(colorcount, I))), valmax(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, T, T), rbind(colorcount, argmin(remove(color(merge(frontiers(I))), palette(I)), lbind(colorcount, I)))))))))
"""

verify_67a3c6ac = """
vmirror(I)
"""

verify_67a423a3 = """
fill(I, FOUR, outbox(intersection(backdrop(ofcolor(I, first(totuple(remove(mostcolor(I), palette(I)))))), backdrop(ofcolor(I, last(totuple(remove(mostcolor(I), palette(I)))))))))
"""

verify_67e8384a = """
vconcat(hconcat(I, vmirror(I)), hmirror(hconcat(I, vmirror(I))))
"""

verify_681b3aeb = """
fill(canvas(color(normalize(last(totuple(objects(I, T, T, T))))), shape(combine(shift(toindices(normalize(first(totuple(objects(I, T, T, T))))), first(argmax(product(product(interval(ZERO, valmax(totuple(objects(I, T, T, T)), height), ONE), interval(ZERO, valmax(totuple(objects(I, T, T, T)), width), ONE)), product(interval(ZERO, valmax(totuple(objects(I, T, T, T)), height), ONE), interval(ZERO, valmax(totuple(objects(I, T, T, T)), width), ONE))), fork(both, matcher(compose(size, fork(intersection, compose(lbind(shift, toindices(normalize(first(totuple(objects(I, T, T, T)))))), first), compose(lbind(shift, toindices(normalize(last(totuple(objects(I, T, T, T)))))), last))), ZERO), compose(fork(equality, size, fork(multiply, height, width)), fork(combine, compose(lbind(shift, toindices(normalize(first(totuple(objects(I, T, T, T)))))), first), compose(lbind(shift, toindices(normalize(last(totuple(objects(I, T, T, T)))))), last))))))), shift(toindices(normalize(last(totuple(objects(I, T, T, T))))), last(argmax(product(product(interval(ZERO, valmax(totuple(objects(I, T, T, T)), height), ONE), interval(ZERO, valmax(totuple(objects(I, T, T, T)), width), ONE)), product(interval(ZERO, valmax(totuple(objects(I, T, T, T)), height), ONE), interval(ZERO, valmax(totuple(objects(I, T, T, T)), width), ONE))), fork(both, matcher(compose(size, fork(intersection, compose(lbind(shift, toindices(normalize(first(totuple(objects(I, T, T, T)))))), first), compose(lbind(shift, toindices(normalize(last(totuple(objects(I, T, T, T)))))), last))), ZERO), compose(fork(equality, size, fork(multiply, height, width)), fork(combine, compose(lbind(shift, toindices(normalize(first(totuple(objects(I, T, T, T)))))), first), compose(lbind(shift, toindices(normalize(last(totuple(objects(I, T, T, T)))))), last)))))))))), color(normalize(first(totuple(objects(I, T, T, T))))), shift(shift(toindices(normalize(first(totuple(objects(I, T, T, T))))), first(argmax(product(product(interval(ZERO, valmax(totuple(objects(I, T, T, T)), height), ONE), interval(ZERO, valmax(totuple(objects(I, T, T, T)), width), ONE)), product(interval(ZERO, valmax(totuple(objects(I, T, T, T)), height), ONE), interval(ZERO, valmax(totuple(objects(I, T, T, T)), width), ONE))), fork(both, matcher(compose(size, fork(intersection, compose(lbind(shift, toindices(normalize(first(totuple(objects(I, T, T, T)))))), first), compose(lbind(shift, toindices(normalize(last(totuple(objects(I, T, T, T)))))), last))), ZERO), compose(fork(equality, size, fork(multiply, height, width)), fork(combine, compose(lbind(shift, toindices(normalize(first(totuple(objects(I, T, T, T)))))), first), compose(lbind(shift, toindices(normalize(last(totuple(objects(I, T, T, T)))))), last))))))), invert(ulcorner(combine(shift(toindices(normalize(first(totuple(objects(I, T, T, T))))), first(argmax(product(product(interval(ZERO, valmax(totuple(objects(I, T, T, T)), height), ONE), interval(ZERO, valmax(totuple(objects(I, T, T, T)), width), ONE)), product(interval(ZERO, valmax(totuple(objects(I, T, T, T)), height), ONE), interval(ZERO, valmax(totuple(objects(I, T, T, T)), width), ONE))), fork(both, matcher(compose(size, fork(intersection, compose(lbind(shift, toindices(normalize(first(totuple(objects(I, T, T, T)))))), first), compose(lbind(shift, toindices(normalize(last(totuple(objects(I, T, T, T)))))), last))), ZERO), compose(fork(equality, size, fork(multiply, height, width)), fork(combine, compose(lbind(shift, toindices(normalize(first(totuple(objects(I, T, T, T)))))), first), compose(lbind(shift, toindices(normalize(last(totuple(objects(I, T, T, T)))))), last))))))), shift(toindices(normalize(last(totuple(objects(I, T, T, T))))), last(argmax(product(product(interval(ZERO, valmax(totuple(objects(I, T, T, T)), height), ONE), interval(ZERO, valmax(totuple(objects(I, T, T, T)), width), ONE)), product(interval(ZERO, valmax(totuple(objects(I, T, T, T)), height), ONE), interval(ZERO, valmax(totuple(objects(I, T, T, T)), width), ONE))), fork(both, matcher(compose(size, fork(intersection, compose(lbind(shift, toindices(normalize(first(totuple(objects(I, T, T, T)))))), first), compose(lbind(shift, toindices(normalize(last(totuple(objects(I, T, T, T)))))), last))), ZERO), compose(fork(equality, size, fork(multiply, height, width)), fork(combine, compose(lbind(shift, toindices(normalize(first(totuple(objects(I, T, T, T)))))), first), compose(lbind(shift, toindices(normalize(last(totuple(objects(I, T, T, T)))))), last))))))))))))
"""

verify_6855a6e4 = """
call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), fill(fill(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), other(remove(color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), palette(I)), argmin(remove(color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), palette(I)), lbind(colorcount, I))), ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), argmin(remove(color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), palette(I)), lbind(colorcount, I)))), argmin(remove(color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), palette(I)), lbind(colorcount, I)), combine(shift(vmirror(sfilter(ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), argmin(remove(color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), palette(I)), lbind(colorcount, I))), compose(lbind(greater, leftmost(ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height))))))))), last))), tojvec(add(TWO, subtract(leftmost(ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))), leftmost(sfilter(ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), argmin(remove(color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), palette(I)), lbind(colorcount, I))), compose(lbind(greater, leftmost(ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height))))))))), last))))))), shift(vmirror(difference(ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), argmin(remove(color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), palette(I)), lbind(colorcount, I))), sfilter(ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), argmin(remove(color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), palette(I)), lbind(colorcount, I))), compose(lbind(greater, leftmost(ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height))))))))), last)))), invert(tojvec(add(TWO, subtract(rightmost(difference(ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), argmin(remove(color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), palette(I)), lbind(colorcount, I))), sfilter(ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), argmin(remove(color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), palette(I)), lbind(colorcount, I))), compose(lbind(greater, leftmost(ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height))))))))), last)))), rightmost(ofcolor(call(branch(positive(size(intersection(toindices(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))), vfrontier(center(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height)))))))))), dmirror, identity), I), color(extract(partition(I), fork(both, matcher(compose(size, fork(difference, toindices, box)), ZERO), fork(either, fork(equality, size, chain(rbind(add, FOUR), double, width)), fork(equality, size, chain(rbind(add, FOUR), double, height))))))))))))))))
"""

verify_68b16354 = """
hmirror(I)
"""

verify_694f12f3 = """
fill(fill(I, ONE, call(compose(backdrop, inbox), argmin(sfilter(objects(I, T, F, F), fork(equality, size, fork(multiply, height, width))), size))), TWO, call(compose(backdrop, inbox), argmax(sfilter(objects(I, T, F, F), fork(equality, size, fork(multiply, height, width))), size)))
"""

verify_6a1e5592 = """
call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), fill(cover(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I), merge(colorfilter(objects(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I), T, T, T), other(remove(color(call(chain(asobject, first, fork(vsplit, identity, height)), call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I))), palette(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I))), mostcolor(I))))), ONE, mapply(fork(shift, compose(normalize, toindices), compose(rbind(argmin, first), chain(lbind(sfilter, mapply(neighbors, mapply(neighbors, ofcolor(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I), mostcolor(I))))), fork(lbind(fork, both), chain(rbind(matcher, ZERO), lbind(lbind(chain, size), rbind(intersection, ofcolor(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I), color(call(chain(asobject, first, fork(vsplit, identity, height)), call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I)))))), lbind(lbind, shift)), fork(lbind(fork, both), compose(rbind(matcher, ZERO), compose(lbind(lbind(chain, size), rbind(intersection, ofcolor(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I), mostcolor(I)))), fork(lbind(fork, difference), compose(lbind(compose, rbind(sfilter, call(rbind(rbind(chain, first), decrement), lbind(greater, lowermost(ofcolor(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I), color(call(chain(asobject, first, fork(vsplit, identity, height)), call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I))))))))), chain(rbind(lbind(chain, rbind(mapply, remove(DOWN, dneighbors(ORIGIN)))), lbind(lbind, add)), lbind(lbind, compose), lbind(lbind, shift))), lbind(lbind, shift)))), chain(rbind(matcher, ZERO), lbind(lbind(chain, size), rbind(difference, ofcolor(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I), mostcolor(I)))), lbind(lbind, shift)))), compose(normalize, toindices)))), colorfilter(objects(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I), T, T, T), other(remove(color(call(chain(asobject, first, fork(vsplit, identity, height)), call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I))), palette(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), fork(both, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, numcolors), chain(asobject, first, fork(vsplit, identity, height))))), ONE), compose(flip, matcher(chain(first, rbind(rapply, I), compose(initset, lbind(lbind(chain, color), chain(asobject, first, fork(vsplit, identity, height))))), mostcolor(I))))), I))), mostcolor(I))))))
"""

verify_6aa20dc0 = """
paint(I, mapply(fork(mapply, compose(lbind(lbind, shift), fork(shift, chain(normalize, first, fork(rapply, compose(initset, last), compose(lbind(upscale, sfilter(toobject(backdrop(mfilter(objects(I, F, T, T), matcher(numcolors, valmax(objects(I, F, T, T), numcolors)))), I), compose(flip, matcher(first, mostcolor(I))))), first))), chain(ulcorner, compose(normalize, rbind(sfilter, compose(flip, matcher(first, mostcolor(sfilter(toobject(backdrop(mfilter(objects(I, F, T, T), matcher(numcolors, valmax(objects(I, F, T, T), numcolors)))), I), compose(flip, matcher(first, mostcolor(I))))))))), chain(normalize, first, fork(rapply, compose(initset, last), compose(lbind(upscale, sfilter(toobject(backdrop(mfilter(objects(I, F, T, T), matcher(numcolors, valmax(objects(I, F, T, T), numcolors)))), I), compose(flip, matcher(first, mostcolor(I))))), first)))))), compose(lbind(occurrences, paint(canvas(mostcolor(I), add(TWO, shape(I))), shift(asobject(I), UNITY))), compose(fork(combine, compose(normalize, compose(normalize, rbind(sfilter, compose(flip, matcher(first, mostcolor(sfilter(toobject(backdrop(mfilter(objects(I, F, T, T), matcher(numcolors, valmax(objects(I, F, T, T), numcolors)))), I), compose(flip, matcher(first, mostcolor(I)))))))))), compose(lbind(recolor, mostcolor(I)), fork(difference, compose(lbind(mapply, dneighbors), chain(normalize, toindices, compose(normalize, rbind(sfilter, compose(flip, matcher(first, mostcolor(sfilter(toobject(backdrop(mfilter(objects(I, F, T, T), matcher(numcolors, valmax(objects(I, F, T, T), numcolors)))), I), compose(flip, matcher(first, mostcolor(I))))))))))), chain(normalize, toindices, compose(normalize, rbind(sfilter, compose(flip, matcher(first, mostcolor(sfilter(toobject(backdrop(mfilter(objects(I, F, T, T), matcher(numcolors, valmax(objects(I, F, T, T), numcolors)))), I), compose(flip, matcher(first, mostcolor(I))))))))))))), chain(normalize, first, fork(rapply, compose(initset, last), compose(lbind(upscale, sfilter(toobject(backdrop(mfilter(objects(I, F, T, T), matcher(numcolors, valmax(objects(I, F, T, T), numcolors)))), I), compose(flip, matcher(first, mostcolor(I))))), first)))))), product(interval(ONE, FIVE, ONE), insert(vmirror, insert(hmirror, insert(cmirror, insert(dmirror, initset(identity))))))))
"""

verify_6b9890af = """
paint(subgrid(argmax(sfilter(objects(I, T, T, T), fork(equality, toindices, box)), fork(multiply, height, width)), I), shift(asobject(vupscale(hupscale(subgrid(difference(merge(fgpartition(I)), argmax(sfilter(objects(I, T, T, T), fork(equality, toindices, box)), fork(multiply, height, width))), I), divide(subtract(width(subgrid(argmax(sfilter(objects(I, T, T, T), fork(equality, toindices, box)), fork(multiply, height, width)), I)), TWO), width(subgrid(difference(merge(fgpartition(I)), argmax(sfilter(objects(I, T, T, T), fork(equality, toindices, box)), fork(multiply, height, width))), I)))), divide(subtract(height(subgrid(argmax(sfilter(objects(I, T, T, T), fork(equality, toindices, box)), fork(multiply, height, width)), I)), TWO), height(subgrid(difference(merge(fgpartition(I)), argmax(sfilter(objects(I, T, T, T), fork(equality, toindices, box)), fork(multiply, height, width))), I))))), UNITY))
"""

verify_6c434453 = """
fill(fill(I, mostcolor(I), merge(sfilter(sfilter(objects(I, T, F, T), chain(rbind(greater, TWO), minimum, shape)), fork(equality, toindices, box)))), TWO, mapply(fork(intersection, fork(combine, compose(hfrontier, center), compose(vfrontier, center)), backdrop), sfilter(sfilter(objects(I, T, F, T), chain(rbind(greater, TWO), minimum, shape)), fork(equality, toindices, box))))
"""

verify_6cdd2623 = """
fill(canvas(mostcolor(I), shape(I)), color(argmax(sfilter(partition(I), matcher(chain(size, rbind(difference, box(asindices(I))), toindices), ZERO)), size)), mfilter(prapply(connect, toindices(argmax(sfilter(partition(I), matcher(chain(size, rbind(difference, box(asindices(I))), toindices), ZERO)), size)), toindices(argmax(sfilter(partition(I), matcher(chain(size, rbind(difference, box(asindices(I))), toindices), ZERO)), size))), fork(both, compose(flip, matcher(chain(size, rbind(difference, box(asindices(I))), toindices), ZERO)), fork(either, hline, vline))))
"""

verify_6cf79266 = """
fill(I, ONE, mapply(lbind(shift, asobject(canvas(ZERO, THREE_BY_THREE))), occurrences(I, asobject(canvas(ZERO, THREE_BY_THREE)))))
"""

verify_6d0160f0 = """
paint(paint(canvas(argmax(sfilter(remove(mostcolor(merge(frontiers(I))), palette(I)), matcher(chain(compose(size, lbind(sfilter, objects(fill(hconcat(I, canvas(NEG_ONE, shape(I))), NEG_ONE, merge(frontiers(I))), F, F, T))), rbind(compose, palette), lbind(lbind, contained)), valmax(remove(mostcolor(merge(frontiers(I))), palette(I)), chain(compose(size, lbind(sfilter, objects(fill(hconcat(I, canvas(NEG_ONE, shape(I))), NEG_ONE, merge(frontiers(I))), F, F, T))), rbind(compose, palette), lbind(lbind, contained))))), lbind(colorcount, merge(objects(fill(hconcat(I, canvas(NEG_ONE, shape(I))), NEG_ONE, merge(frontiers(I))), F, F, T)))), shape(I)), merge(frontiers(I))), shift(sfilter(normalize(extract(objects(fill(hconcat(I, canvas(NEG_ONE, shape(I))), NEG_ONE, merge(frontiers(I))), F, F, T), compose(lbind(contained, FOUR), palette))), compose(flip, matcher(first, mostcolor(merge(frontiers(I)))))), multiply(increment(shape(normalize(extract(objects(fill(hconcat(I, canvas(NEG_ONE, shape(I))), NEG_ONE, merge(frontiers(I))), F, F, T), compose(lbind(contained, FOUR), palette))))), center(sfilter(normalize(extract(objects(fill(hconcat(I, canvas(NEG_ONE, shape(I))), NEG_ONE, merge(frontiers(I))), F, F, T), compose(lbind(contained, FOUR), palette))), matcher(first, FOUR))))))
"""

verify_6d0aefbc = """
hconcat(I, vmirror(I))
"""

verify_6d58a25d = """
call(last(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(chain(lbind(contained, combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX))))), lbind(apply, compose(normalize, toindices)), partition), chain(first, rbind(rapply, I), compose(initset, first))))), fill(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(chain(lbind(contained, combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX))))), lbind(apply, compose(normalize, toindices)), partition), chain(first, rbind(rapply, I), compose(initset, first))))), I), argmin(remove(extract(palette(I), matcher(compose(normalize, lbind(ofcolor, call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(chain(lbind(contained, combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX))))), lbind(apply, compose(normalize, toindices)), partition), chain(first, rbind(rapply, I), compose(initset, first))))), I))), combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX)))))), palette(I)), lbind(colorcount, call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(chain(lbind(contained, combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX))))), lbind(apply, compose(normalize, toindices)), partition), chain(first, rbind(rapply, I), compose(initset, first))))), I))), mapply(fork(connect, fork(astuple, chain(increment, rbind(valmax, first), chain(lbind(sfilter, ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(chain(lbind(contained, combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX))))), lbind(apply, compose(normalize, toindices)), partition), chain(first, rbind(rapply, I), compose(initset, first))))), I), extract(palette(I), matcher(compose(normalize, lbind(ofcolor, call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(chain(lbind(contained, combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX))))), lbind(apply, compose(normalize, toindices)), partition), chain(first, rbind(rapply, I), compose(initset, first))))), I))), combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX)))))))), lbind(matcher, last), last)), last), compose(lbind(astuple, decrement(height(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(chain(lbind(contained, combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX))))), lbind(apply, compose(normalize, toindices)), partition), chain(first, rbind(rapply, I), compose(initset, first))))), I)))), last)), sfilter(ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(chain(lbind(contained, combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX))))), lbind(apply, compose(normalize, toindices)), partition), chain(first, rbind(rapply, I), compose(initset, first))))), I), argmin(remove(extract(palette(I), matcher(compose(normalize, lbind(ofcolor, call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(chain(lbind(contained, combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX))))), lbind(apply, compose(normalize, toindices)), partition), chain(first, rbind(rapply, I), compose(initset, first))))), I))), combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX)))))), palette(I)), lbind(colorcount, call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(chain(lbind(contained, combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX))))), lbind(apply, compose(normalize, toindices)), partition), chain(first, rbind(rapply, I), compose(initset, first))))), I)))), chain(compose(positive, size), rbind(intersection, ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(chain(lbind(contained, combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX))))), lbind(apply, compose(normalize, toindices)), partition), chain(first, rbind(rapply, I), compose(initset, first))))), I), extract(palette(I), matcher(compose(normalize, lbind(ofcolor, call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(chain(lbind(contained, combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX))))), lbind(apply, compose(normalize, toindices)), partition), chain(first, rbind(rapply, I), compose(initset, first))))), I))), combine(insert(astuple(ONE, THREE), insert(TWO_BY_TWO, initset(astuple(TWO, FOUR)))), combine(connect(tojvec(THREE), toivec(THREE)), connect(tojvec(THREE), astuple(THREE, SIX)))))))), rbind(shoot, UP))))))
"""

verify_6d75e8bb = """
fill(I, TWO, delta(argmin(partition(I), size)))
"""

verify_6e02f1e3 = """
fill(canvas(ZERO, shape(I)), FIVE, connect(branch(equality(numcolors(I), THREE), toivec(decrement(height(I))), ORIGIN), branch(equality(numcolors(I), TWO), decrement(shape(I)), tojvec(decrement(width(I))))))
"""

verify_6e19193c = """
paint(I, combine(combine(mapply(fork(recolor, color, chain(rbind(shoot, UNITY), rbind(add, UNITY), lrcorner)), sfilter(objects(I, T, F, T), fork(equality, toindices, fork(remove, lrcorner, toindices)))), mapply(fork(recolor, color, chain(rbind(shoot, UP_RIGHT), rbind(add, UP_RIGHT), urcorner)), sfilter(objects(I, T, F, T), fork(equality, toindices, fork(remove, urcorner, toindices))))), combine(mapply(fork(recolor, color, chain(rbind(shoot, NEG_UNITY), rbind(add, NEG_UNITY), ulcorner)), sfilter(objects(I, T, F, T), fork(equality, toindices, fork(remove, ulcorner, toindices)))), mapply(fork(recolor, color, chain(rbind(shoot, DOWN_LEFT), rbind(add, DOWN_LEFT), llcorner)), sfilter(objects(I, T, F, T), fork(equality, toindices, fork(remove, llcorner, toindices)))))))
"""

verify_6e82a1ae = """
fill(fill(fill(I, THREE, mfilter(objects(I, T, F, T), matcher(size, TWO))), TWO, mfilter(objects(I, T, F, T), matcher(size, THREE))), ONE, mfilter(objects(I, T, F, T), matcher(size, FOUR)))
"""

verify_6ecd11f4 = """
paint(apply(compose(chain(lbind(apply, last), rbind(sfilter, compose(fork(equality, identity, compose(rbind(multiply, divide(width(argmin(objects(I, F, T, T), numcolors)), width(argmax(objects(I, F, T, T), numcolors)))), rbind(divide, divide(width(argmin(objects(I, F, T, T), numcolors)), width(argmax(objects(I, F, T, T), numcolors)))))), first)), lbind(pair, interval(ZERO, width(paint(canvas(mostcolor(I), shape(argmin(objects(I, F, T, T), numcolors))), normalize(argmin(objects(I, F, T, T), numcolors)))), ONE))), last), sfilter(pair(interval(ZERO, height(paint(canvas(mostcolor(I), shape(argmin(objects(I, F, T, T), numcolors))), normalize(argmin(objects(I, F, T, T), numcolors)))), ONE), paint(canvas(mostcolor(I), shape(argmin(objects(I, F, T, T), numcolors))), normalize(argmin(objects(I, F, T, T), numcolors)))), compose(fork(equality, identity, compose(rbind(multiply, divide(height(argmin(objects(I, F, T, T), numcolors)), height(argmax(objects(I, F, T, T), numcolors)))), rbind(divide, divide(height(argmin(objects(I, F, T, T), numcolors)), height(argmax(objects(I, F, T, T), numcolors)))))), first))), sfilter(normalize(argmax(objects(I, F, T, T), numcolors)), compose(rbind(contained, ofcolor(apply(compose(chain(lbind(apply, last), rbind(sfilter, compose(fork(equality, identity, compose(rbind(multiply, divide(width(argmin(objects(I, F, T, T), numcolors)), width(argmax(objects(I, F, T, T), numcolors)))), rbind(divide, divide(width(argmin(objects(I, F, T, T), numcolors)), width(argmax(objects(I, F, T, T), numcolors)))))), first)), lbind(pair, interval(ZERO, width(paint(canvas(mostcolor(I), shape(argmin(objects(I, F, T, T), numcolors))), normalize(argmin(objects(I, F, T, T), numcolors)))), ONE))), last), sfilter(pair(interval(ZERO, height(paint(canvas(mostcolor(I), shape(argmin(objects(I, F, T, T), numcolors))), normalize(argmin(objects(I, F, T, T), numcolors)))), ONE), paint(canvas(mostcolor(I), shape(argmin(objects(I, F, T, T), numcolors))), normalize(argmin(objects(I, F, T, T), numcolors)))), compose(fork(equality, identity, compose(rbind(multiply, divide(height(argmin(objects(I, F, T, T), numcolors)), height(argmax(objects(I, F, T, T), numcolors)))), rbind(divide, divide(height(argmin(objects(I, F, T, T), numcolors)), height(argmax(objects(I, F, T, T), numcolors)))))), first))), color(argmin(objects(I, F, T, T), numcolors)))), last)))
"""

verify_6f8cd79b = """
fill(I, EIGHT, box(asindices(I)))
"""

verify_6fa7a44f = """
vconcat(I, hmirror(I))
"""

verify_72322fa7 = """
paint(I, mapply(fork(combine, fork(mapply, compose(lbind(lbind, shift), fork(shift, identity, chain(invert, ulcorner, fork(sfilter, identity, compose(lbind(matcher, first), chain(first, totuple, palette)))))), compose(lbind(occurrences, I), fork(sfilter, identity, compose(lbind(matcher, first), chain(first, totuple, palette))))), fork(mapply, compose(lbind(lbind, shift), fork(shift, identity, chain(invert, ulcorner, fork(sfilter, identity, compose(lbind(matcher, first), chain(last, totuple, palette)))))), compose(lbind(occurrences, I), fork(sfilter, identity, compose(lbind(matcher, first), chain(last, totuple, palette)))))), apply(normalize, sfilter(objects(I, F, T, T), matcher(numcolors, TWO)))))
"""

verify_72ca375d = """
subgrid(extract(objects(I, T, T, T), fork(equality, identity, vmirror)), I)
"""

verify_73251a56 = """
replace(paint(paint(I, call(first(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))), call(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))))), last(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first))))), first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first))), call(branch(positive(size(toobject(difference(mapply(dneighbors, ofcolor(paint(paint(I, call(first(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))), call(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))))), last(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first))))), first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first))))), ofcolor(paint(paint(I, call(first(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))), call(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))))), last(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first))))), first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first))))), paint(paint(I, call(first(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))), call(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))))), last(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))))))), mostcolor, compose(last, rbind(astuple, first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))))), toobject(difference(mapply(dneighbors, ofcolor(paint(paint(I, call(first(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))), call(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))))), last(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first))))), first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first))))), ofcolor(paint(paint(I, call(first(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))), call(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))))), last(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first))))), first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first))))), paint(paint(I, call(first(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))), call(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first)))))), last(last(argmin(sfilter(product(palette(I), insert(astuple(dmirror, recolor(index(I, ORIGIN), shoot(ORIGIN, UNITY))), initset(astuple(cmirror, recolor(index(I, urcorner(asindices(I))), shoot(urcorner(asindices(I)), DOWN_LEFT)))))), compose(first, fork(rapply, compose(initset, compose(rbind(lbind(fork, equality), identity), compose(first, last))), fork(paint, compose(lbind(paint, I), compose(first, fork(rapply, compose(initset, compose(first, last)), compose(chain(lbind(sfilter, asobject(I)), lbind(compose, flip), lbind(matcher, first)), first)))), compose(last, last))))), compose(lbind(colorcount, I), first))))))))
"""

verify_7447852a = """
fill(I, FOUR, mapply(first, sfilter(pair(order(objects(hconcat(I, canvas(index(I, ORIGIN), shape(I))), F, F, T), compose(last, centerofmass)), interval(ZERO, size(order(objects(hconcat(I, canvas(index(I, ORIGIN), shape(I))), F, F, T), compose(last, centerofmass))), ONE)), fork(equality, last, chain(rbind(multiply, THREE), rbind(divide, THREE), last)))))
"""

verify_7468f01a = """
vmirror(compress(I))
"""

verify_746b3537 = """
call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), repeat(apply(color, order(objects(call(branch(equality(ONE, size(dedupe(first(I)))), dmirror, identity), I), T, F, F), leftmost)), ONE))
"""

verify_74dd1130 = """
dmirror(I)
"""

verify_75b8110e = """
paint(paint(paint(paint(canvas(first(intersection(intersection(palette(lefthalf(tophalf(I))), palette(righthalf(tophalf(I)))), intersection(palette(righthalf(bottomhalf(I))), palette(lefthalf(bottomhalf(I)))))), shape(lefthalf(tophalf(I)))), call(compose(rbind(sfilter, compose(flip, matcher(first, first(intersection(intersection(palette(lefthalf(tophalf(I))), palette(righthalf(tophalf(I)))), intersection(palette(righthalf(bottomhalf(I))), palette(lefthalf(bottomhalf(I))))))))), asobject), lefthalf(tophalf(I)))), call(compose(rbind(sfilter, compose(flip, matcher(first, first(intersection(intersection(palette(lefthalf(tophalf(I))), palette(righthalf(tophalf(I)))), intersection(palette(righthalf(bottomhalf(I))), palette(lefthalf(bottomhalf(I))))))))), asobject), righthalf(bottomhalf(I)))), call(compose(rbind(sfilter, compose(flip, matcher(first, first(intersection(intersection(palette(lefthalf(tophalf(I))), palette(righthalf(tophalf(I)))), intersection(palette(righthalf(bottomhalf(I))), palette(lefthalf(bottomhalf(I))))))))), asobject), lefthalf(bottomhalf(I)))), call(compose(rbind(sfilter, compose(flip, matcher(first, first(intersection(intersection(palette(lefthalf(tophalf(I))), palette(righthalf(tophalf(I)))), intersection(palette(righthalf(bottomhalf(I))), palette(lefthalf(bottomhalf(I))))))))), asobject), righthalf(tophalf(I))))
"""

verify_760b3cac = """
paint(I, shift(call(branch(either(equality(size(sfilter(toindices(extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE))))), matcher(first, lowermost(extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE)))))))), TWO), equality(size(sfilter(toindices(extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE))))), matcher(first, uppermost(extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE)))))))), TWO)), hmirror, vmirror), other(fgpartition(I), extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE)))))), multiply(shape(other(fgpartition(I), extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE)))))), add(add(multiply(equality(size(sfilter(toindices(extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE))))), matcher(first, lowermost(extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE)))))))), TWO), DOWN), multiply(equality(size(sfilter(toindices(extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE))))), matcher(first, uppermost(extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE)))))))), TWO), UP)), add(multiply(equality(size(sfilter(toindices(extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE))))), matcher(last, rightmost(extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE)))))))), TWO), RIGHT), multiply(equality(size(sfilter(toindices(extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE))))), matcher(last, leftmost(extract(fgpartition(I), fork(both, fork(both, matcher(shape, THREE_BY_THREE), matcher(size, FIVE)), fork(both, matcher(compose(size, fork(intersection, toindices, box)), FOUR), matcher(compose(size, fork(intersection, toindices, corners)), ONE)))))))), TWO), LEFT))))))
"""

verify_776ffc46 = """
fill(I, color(normalize(sfilter(toobject(backdrop(inbox(argmax(sfilter(objects(I, T, F, T), fork(equality, toindices, box)), fork(multiply, height, width)))), I), compose(flip, matcher(first, mostcolor(I)))))), mfilter(objects(I, T, F, T), matcher(compose(toindices, normalize), toindices(normalize(sfilter(toobject(backdrop(inbox(argmax(sfilter(objects(I, T, F, T), fork(equality, toindices, box)), fork(multiply, height, width)))), I), compose(flip, matcher(first, mostcolor(I)))))))))
"""

verify_77fdfe62 = """
vconcat(hconcat(replace(lefthalf(tophalf(trim(trim(I)))), other(palette(trim(trim(I))), color(toobject(difference(box(asindices(compress(I))), corners(asindices(compress(I)))), compress(I)))), index(I, ORIGIN)), replace(righthalf(tophalf(trim(trim(I)))), other(palette(trim(trim(I))), color(toobject(difference(box(asindices(compress(I))), corners(asindices(compress(I)))), compress(I)))), index(I, tojvec(decrement(width(I)))))), hconcat(replace(lefthalf(bottomhalf(trim(trim(I)))), other(palette(trim(trim(I))), color(toobject(difference(box(asindices(compress(I))), corners(asindices(compress(I)))), compress(I)))), index(I, toivec(decrement(height(I))))), replace(righthalf(bottomhalf(trim(trim(I)))), other(palette(trim(trim(I))), color(toobject(difference(box(asindices(compress(I))), corners(asindices(compress(I)))), compress(I)))), index(I, decrement(shape(I))))))
"""

verify_780d0b14 = """
compress(paint(fill(I, color(merge(frontiers(I))), merge(objects(hconcat(fill(I, NEG_ONE, merge(frontiers(I))), canvas(NEG_ONE, shape(I))), F, F, T))), apply(fork(astuple, compose(rbind(other, color(merge(frontiers(I)))), palette), ulcorner), objects(hconcat(fill(I, NEG_ONE, merge(frontiers(I))), canvas(NEG_ONE, shape(I))), F, F, T))))
"""

verify_7837ac64 = """
apply(chain(lbind(apply, fork(rbind(branch, color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width)))), chain(flip, fork(either, chain(positive, size, lbind(intersection, insert(color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width))), initset(argmax(remove(color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width))), palette(I)), lbind(colorcount, I)))))), chain(positive, decrement, size)), chain(palette, rbind(toobject, subgrid(mapply(lbind(ofcolor, I), remove(argmax(remove(color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width))), palette(I)), lbind(colorcount, I)), remove(color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width))), palette(I)))), I)), compose(corners, outbox))), compose(first, chain(palette, rbind(toobject, subgrid(mapply(lbind(ofcolor, I), remove(argmax(remove(color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width))), palette(I)), lbind(colorcount, I)), remove(color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width))), palette(I)))), I)), compose(corners, outbox))))), rbind(order, leftmost), compose(lbind(sfilter, colorfilter(objects(subgrid(mapply(lbind(ofcolor, I), remove(argmax(remove(color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width))), palette(I)), lbind(colorcount, I)), remove(color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width))), palette(I)))), I), T, F, F), color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width))))), lbind(matcher, uppermost))), order(apply(uppermost, colorfilter(objects(subgrid(mapply(lbind(ofcolor, I), remove(argmax(remove(color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width))), palette(I)), lbind(colorcount, I)), remove(color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width))), palette(I)))), I), T, F, F), color(argmax(sfilter(objects(I, T, F, F), fork(equality, toindices, backdrop)), fork(multiply, height, width))))), identity))
"""

verify_794b24be = """
fill(fill(canvas(argmax(remove(ONE, palette(I)), lbind(colorcount, I)), THREE_BY_THREE), TWO, connect(ORIGIN, tojvec(decrement(colorcount(I, ONE))))), TWO, branch(equality(colorcount(I, ONE), FOUR), initset(UNITY), connect(ORIGIN, tojvec(decrement(colorcount(I, ONE))))))
"""

verify_7b6016b9 = """
replace(fill(I, TWO, mfilter(colorfilter(objects(I, T, F, F), mostcolor(toobject(box(asindices(I)), I))), compose(flip, rbind(bordering, I)))), mostcolor(toobject(box(asindices(I)), I)), THREE)
"""

verify_7b7f7511 = """
call(branch(equality(lefthalf(I), righthalf(I)), lefthalf, tophalf), I)
"""

verify_7c008303 = """
paint(subgrid(argmax(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, F, T), size), I), sfilter(asobject(vupscale(hupscale(subgrid(argmin(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, F, T), size), I), halve(width(argmax(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, F, T), size)))), halve(height(argmax(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, F, T), size))))), compose(rbind(contained, difference(asindices(subgrid(argmax(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, F, T), size), I)), ofcolor(subgrid(argmax(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, F, T), size), I), color(merge(remove(argmin(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, F, T), size), remove(argmax(objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, F, T), size), objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), F, F, T)))))))), last)))
"""

verify_7ddcd7ec = """
paint(I, mapply(fork(recolor, color, fork(shoot, center, lbind(position, argmax(objects(I, F, F, T), size)))), remove(argmax(objects(I, F, F, T), size), objects(I, F, F, T))))
"""

verify_7df24a62 = """
trim(paint(paint(canvas(mostcolor(I), increment(increment(shape(I)))), shift(asobject(I), UNITY)), mapply(chain(first, rbind(rapply, toobject(backdrop(ofcolor(paint(canvas(mostcolor(I), increment(increment(shape(I)))), shift(asobject(I), UNITY)), color(argmin(partition(I), compose(maximum, shape))))), paint(canvas(mostcolor(I), increment(increment(shape(I)))), shift(asobject(I), UNITY)))), lbind(rapply, initset(lbind(lbind(chain, fork(mapply, lbind(lbind, shift), compose(lbind(occurrences, paint(canvas(mostcolor(I), increment(increment(shape(I)))), shift(asobject(I), UNITY))), fork(combine, rbind(sfilter, matcher(first, argmin(remove(color(argmin(partition(I), compose(maximum, shape))), palette(I)), lbind(colorcount, I)))), compose(lbind(recolor, mostcolor(I)), rbind(sfilter, matcher(first, color(argmin(partition(I), compose(maximum, shape)))))))))), normalize)))), apply(fork(compose, first, last), product(combine(repeat(identity, ONE), combine(astuple(cmirror, dmirror), astuple(hmirror, vmirror))), combine(repeat(identity, ONE), combine(astuple(cmirror, dmirror), astuple(hmirror, vmirror))))))))
"""

verify_7e0986d6 = """
paint(fill(I, mostcolor(I), mapply(toindices, sfilter(objects(I, T, F, T), compose(lbind(greater, THREE), size)))), mapply(fork(recolor, color, backdrop), objects(fill(I, mostcolor(I), mapply(toindices, sfilter(objects(I, T, F, T), compose(lbind(greater, THREE), size)))), T, F, T)))
"""

verify_7f4411dc = """
paint(canvas(argmin(palette(I), matcher(identity, mostcommon(apply(color, totuple(objects(I, T, F, F)))))), shape(I)), mapply(lbind(shift, asobject(canvas(mostcommon(apply(color, totuple(objects(I, T, F, F)))), TWO_BY_TWO))), occurrences(I, asobject(canvas(mostcommon(apply(color, totuple(objects(I, T, F, F)))), TWO_BY_TWO)))))
"""

verify_7fe24cdd = """
vconcat(hconcat(I, rot90(I)), hconcat(rot270(I), rot180(I)))
"""

verify_80af3007 = """
fill(canvas(other(palette(I), color(argmin(partition(I), fork(multiply, height, width)))), multiply(shape(apply(chain(lbind(apply, first), rbind(sfilter, compose(fork(equality, identity, compose(rbind(multiply, extract(interval(ONE, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), width(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))), rbind(divide, extract(interval(ONE, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), width(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))))), last)), rbind(pair, interval(ZERO, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE))), apply(first, sfilter(pair(subgrid(argmin(partition(I), fork(multiply, height, width)), I), interval(ZERO, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE)), compose(fork(equality, identity, compose(rbind(multiply, extract(interval(ONE, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), height(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))), rbind(divide, extract(interval(ONE, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), height(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))))), last))))), shape(apply(chain(lbind(apply, first), rbind(sfilter, compose(fork(equality, identity, compose(rbind(multiply, extract(interval(ONE, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), width(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))), rbind(divide, extract(interval(ONE, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), width(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))))), last)), rbind(pair, interval(ZERO, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE))), apply(first, sfilter(pair(subgrid(argmin(partition(I), fork(multiply, height, width)), I), interval(ZERO, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE)), compose(fork(equality, identity, compose(rbind(multiply, extract(interval(ONE, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), height(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))), rbind(divide, extract(interval(ONE, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), height(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))))), last))))))), color(argmin(partition(I), fork(multiply, height, width))), mapply(lbind(shift, ofcolor(apply(chain(lbind(apply, first), rbind(sfilter, compose(fork(equality, identity, compose(rbind(multiply, extract(interval(ONE, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), width(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))), rbind(divide, extract(interval(ONE, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), width(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))))), last)), rbind(pair, interval(ZERO, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE))), apply(first, sfilter(pair(subgrid(argmin(partition(I), fork(multiply, height, width)), I), interval(ZERO, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE)), compose(fork(equality, identity, compose(rbind(multiply, extract(interval(ONE, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), height(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))), rbind(divide, extract(interval(ONE, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), height(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))))), last)))), color(argmin(partition(I), fork(multiply, height, width))))), apply(rbind(multiply, shape(apply(chain(lbind(apply, first), rbind(sfilter, compose(fork(equality, identity, compose(rbind(multiply, extract(interval(ONE, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), width(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))), rbind(divide, extract(interval(ONE, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), width(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))))), last)), rbind(pair, interval(ZERO, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE))), apply(first, sfilter(pair(subgrid(argmin(partition(I), fork(multiply, height, width)), I), interval(ZERO, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE)), compose(fork(equality, identity, compose(rbind(multiply, extract(interval(ONE, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), height(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))), rbind(divide, extract(interval(ONE, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), height(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))))), last)))))), ofcolor(apply(chain(lbind(apply, first), rbind(sfilter, compose(fork(equality, identity, compose(rbind(multiply, extract(interval(ONE, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), width(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))), rbind(divide, extract(interval(ONE, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), width(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))))), last)), rbind(pair, interval(ZERO, width(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE))), apply(first, sfilter(pair(subgrid(argmin(partition(I), fork(multiply, height, width)), I), interval(ZERO, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE)), compose(fork(equality, identity, compose(rbind(multiply, extract(interval(ONE, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), height(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))), rbind(divide, extract(interval(ONE, height(subgrid(argmin(partition(I), fork(multiply, height, width)), I)), ONE), matcher(fork(multiply, identity, identity), height(subgrid(argmin(partition(I), fork(multiply, height, width)), I))))))), last)))), color(argmin(partition(I), fork(multiply, height, width)))))))
"""

verify_810b9b61 = """
fill(I, THREE, mfilter(objects(I, T, F, T), fork(both, chain(rbind(greater, TWO), minimum, shape), fork(equality, toindices, box))))
"""

verify_82819916 = """
call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), paint(call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), I), mapply(fork(combine, fork(recolor, compose(color, fork(sfilter, identity, chain(rbind(compose, last), lbind(rbind, contained), chain(toindices, rbind(sfilter, matcher(first, first(totuple(palette(asobject(repeat(argmin(call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), I), compose(size, rbind(sfilter, matcher(identity, mostcolor(merge(frontiers(I))))))), ONE))))))), chain(lbind(shift, asobject(repeat(argmin(call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), I), compose(size, rbind(sfilter, matcher(identity, mostcolor(merge(frontiers(I))))))), ONE))), toivec, uppermost))))), compose(rbind(sfilter, matcher(first, first(totuple(palette(asobject(repeat(argmin(call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), I), compose(size, rbind(sfilter, matcher(identity, mostcolor(merge(frontiers(I))))))), ONE))))))), chain(lbind(shift, asobject(repeat(argmin(call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), I), compose(size, rbind(sfilter, matcher(identity, mostcolor(merge(frontiers(I))))))), ONE))), toivec, uppermost))), fork(recolor, fork(other, palette, compose(color, fork(sfilter, identity, chain(rbind(compose, last), lbind(rbind, contained), chain(toindices, rbind(sfilter, matcher(first, first(totuple(palette(asobject(repeat(argmin(call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), I), compose(size, rbind(sfilter, matcher(identity, mostcolor(merge(frontiers(I))))))), ONE))))))), chain(lbind(shift, asobject(repeat(argmin(call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), I), compose(size, rbind(sfilter, matcher(identity, mostcolor(merge(frontiers(I))))))), ONE))), toivec, uppermost)))))), fork(difference, chain(lbind(shift, asobject(repeat(argmin(call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), I), compose(size, rbind(sfilter, matcher(identity, mostcolor(merge(frontiers(I))))))), ONE))), toivec, uppermost), compose(rbind(sfilter, matcher(first, first(totuple(palette(asobject(repeat(argmin(call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), I), compose(size, rbind(sfilter, matcher(identity, mostcolor(merge(frontiers(I))))))), ONE))))))), chain(lbind(shift, asobject(repeat(argmin(call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), I), compose(size, rbind(sfilter, matcher(identity, mostcolor(merge(frontiers(I))))))), ONE))), toivec, uppermost))))), apply(compose(lbind(sfilter, merge(fgpartition(call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), I)))), lbind(matcher, compose(first, last))), apply(first, toindices(merge(fgpartition(call(branch(positive(size(sfilter(frontiers(I), hline))), identity, dmirror), I)))))))))
"""

verify_83302e8f = """
fill(fill(I, FOUR, ofcolor(I, index(I, ORIGIN))), THREE, merge(sfilter(colorfilter(objects(I, T, F, F), index(I, ORIGIN)), fork(both, fork(equality, size, fork(multiply, height, width)), chain(positive, decrement, size)))))
"""

verify_834ec97d = """
fill(paint(cover(I, argmin(partition(I), size)), shift(argmin(partition(I), size), DOWN)), FOUR, mapply(rbind(shoot, UP), apply(lbind(astuple, uppermost(argmin(partition(I), size))), combine(interval(leftmost(argmin(partition(I), size)), width(I), TWO), interval(leftmost(argmin(partition(I), size)), NEG_ONE, NEG_TWO)))))
"""

verify_8403a5d5 = """
fill(fill(I, color(argmin(fgpartition(I), size)), mapply(vfrontier, apply(tojvec, interval(leftmost(argmin(fgpartition(I), size)), width(I), TWO)))), FIVE, combine(apply(tojvec, interval(increment(leftmost(argmin(fgpartition(I), size))), width(I), FOUR)), apply(lbind(astuple, decrement(height(I))), interval(add(leftmost(argmin(fgpartition(I), size)), THREE), width(I), FOUR))))
"""

verify_846bdb03 = """
call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), paint(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), shift(call(branch(equality(greater(leftmost(ofcolor(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), last(remove(mostcolor(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), cover(I, backdrop(extract(partition(I), fork(equality, corners, toindices)))))), remove(color(extract(partition(I), fork(equality, corners, toindices))), palette(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), subgrid(extract(partition(I), fork(equality, corners, toindices)), I)))))))), leftmost(ofcolor(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), first(remove(mostcolor(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), cover(I, backdrop(extract(partition(I), fork(equality, corners, toindices)))))), remove(color(extract(partition(I), fork(equality, corners, toindices))), palette(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), subgrid(extract(partition(I), fork(equality, corners, toindices)), I))))))))), greater(leftmost(ofcolor(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), cover(I, backdrop(extract(partition(I), fork(equality, corners, toindices))))), last(remove(mostcolor(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), cover(I, backdrop(extract(partition(I), fork(equality, corners, toindices)))))), remove(color(extract(partition(I), fork(equality, corners, toindices))), palette(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), subgrid(extract(partition(I), fork(equality, corners, toindices)), I)))))))), leftmost(ofcolor(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), cover(I, backdrop(extract(partition(I), fork(equality, corners, toindices))))), first(remove(mostcolor(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), cover(I, backdrop(extract(partition(I), fork(equality, corners, toindices)))))), remove(color(extract(partition(I), fork(equality, corners, toindices))), palette(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), subgrid(extract(partition(I), fork(equality, corners, toindices)), I)))))))))), identity, vmirror), normalize(merge(fgpartition(call(branch(positive(size(sfilter(frontiers(subgrid(extract(partition(I), fork(equality, corners, toindices)), I)), hline))), dmirror, identity), cover(I, backdrop(extract(partition(I), fork(equality, corners, toindices))))))))), UNITY)))
"""

verify_855e0971 = """
call(branch(flip(contained(F, apply(chain(lbind(greater, THREE), size, dedupe), I))), identity, dmirror), mapply(fork(paint, identity, chain(lbind(recolor, argmax(palette(I), compose(size, fork(sfilter, lbind(ofcolor, I), compose(rbind(lbind(chain, flip), chain(palette, rbind(toobject, I), neighbors)), lbind(lbind, contained)))))), lbind(mapply, vfrontier), rbind(ofcolor, argmax(palette(I), compose(size, fork(sfilter, lbind(ofcolor, I), compose(rbind(lbind(chain, flip), chain(palette, rbind(toobject, I), neighbors)), lbind(lbind, contained)))))))), apply(rbind(subgrid, call(branch(flip(contained(F, apply(chain(lbind(greater, THREE), size, dedupe), I))), identity, dmirror), I)), order(difference(objects(call(branch(flip(contained(F, apply(chain(lbind(greater, THREE), size, dedupe), I))), identity, dmirror), I), T, T, F), colorfilter(objects(call(branch(flip(contained(F, apply(chain(lbind(greater, THREE), size, dedupe), I))), identity, dmirror), I), T, T, F), argmax(palette(I), compose(size, fork(sfilter, lbind(ofcolor, I), compose(rbind(lbind(chain, flip), chain(palette, rbind(toobject, I), neighbors)), lbind(lbind, contained))))))), uppermost))))
"""

verify_85c4e7cd = """
paint(I, mpapply(recolor, apply(last, order(pair(interval(ZERO, halve(minimum(shape(I))), ONE), apply(compose(color, rbind(toobject, I)), combine(repeat(box(asindices(I)), ONE), apply(chain(first, rbind(rapply, box(asindices(I))), compose(initset, lbind(power, inbox))), interval(ONE, halve(minimum(shape(I))), ONE))))), compose(invert, first))), combine(repeat(box(asindices(I)), ONE), apply(chain(first, rbind(rapply, box(asindices(I))), compose(initset, lbind(power, inbox))), interval(ONE, halve(minimum(shape(I))), ONE)))))
"""

verify_868de0fa = """
fill(fill(I, TWO, merge(sfilter(sfilter(objects(I, T, F, F), square), compose(even, height)))), SEVEN, merge(difference(sfilter(objects(I, T, F, F), square), sfilter(sfilter(objects(I, T, F, F), square), compose(even, height)))))
"""

verify_8731374e = """
fill(call(power(compose(compose(first, fork(rapply, chain(initset, rbind(rbind(branch, identity), fork(subgrid, chain(lbind(insert, DOWN), initset, compose(lrcorner, asindices)), identity)), fork(greater, compose(rbind(subtract, TWO), width), chain(size, rbind(sfilter, matcher(identity, color(argmax(objects(I, T, F, F), size)))), first))), identity)), rot90), double(double(EIGHT))), subgrid(argmax(objects(I, T, F, F), size), I)), leastcolor(call(power(compose(compose(first, fork(rapply, chain(initset, rbind(rbind(branch, identity), fork(subgrid, chain(lbind(insert, DOWN), initset, compose(lrcorner, asindices)), identity)), fork(greater, compose(rbind(subtract, TWO), width), chain(size, rbind(sfilter, matcher(identity, color(argmax(objects(I, T, F, F), size)))), first))), identity)), rot90), double(double(EIGHT))), subgrid(argmax(objects(I, T, F, F), size), I))), mapply(fork(combine, vfrontier, hfrontier), ofcolor(call(power(compose(compose(first, fork(rapply, chain(initset, rbind(rbind(branch, identity), fork(subgrid, chain(lbind(insert, DOWN), initset, compose(lrcorner, asindices)), identity)), fork(greater, compose(rbind(subtract, TWO), width), chain(size, rbind(sfilter, matcher(identity, color(argmax(objects(I, T, F, F), size)))), first))), identity)), rot90), double(double(EIGHT))), subgrid(argmax(objects(I, T, F, F), size), I)), leastcolor(call(power(compose(compose(first, fork(rapply, chain(initset, rbind(rbind(branch, identity), fork(subgrid, chain(lbind(insert, DOWN), initset, compose(lrcorner, asindices)), identity)), fork(greater, compose(rbind(subtract, TWO), width), chain(size, rbind(sfilter, matcher(identity, color(argmax(objects(I, T, F, F), size)))), first))), identity)), rot90), double(double(EIGHT))), subgrid(argmax(objects(I, T, F, F), size), I))))))
"""

verify_88a10436 = """
paint(I, mapply(lbind(shift, shift(normalize(argmax(objects(I, F, F, T), size)), invert(halve(shape(argmax(objects(I, F, F, T), size)))))), apply(center, sizefilter(objects(I, F, F, T), ONE))))
"""

verify_88a62173 = """
leastcommon(combine(astuple(tophalf(lefthalf(I)), tophalf(righthalf(I))), astuple(bottomhalf(lefthalf(I)), bottomhalf(righthalf(I)))))
"""

verify_890034e9 = """
fill(I, leastcommon(apply(color, totuple(sfilter(sfilter(objects(I, T, F, F), chain(rbind(greater, TWO), minimum, shape)), fork(equality, toindices, box))))), mapply(lbind(shift, shift(normalize(ofcolor(I, leastcommon(apply(color, totuple(sfilter(sfilter(objects(I, T, F, F), chain(rbind(greater, TWO), minimum, shape)), fork(equality, toindices, box))))))), NEG_UNITY)), occurrences(I, recolor(ZERO, inbox(ofcolor(I, leastcommon(apply(color, totuple(sfilter(sfilter(objects(I, T, F, F), chain(rbind(greater, TWO), minimum, shape)), fork(equality, toindices, box)))))))))))
"""

verify_8a004b2b = """
subgrid(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size), paint(I, shift(sfilter(asobject(hupscale(vupscale(subgrid(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)), I), divide(height(sfilter(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I)))), compose(rbind(contained, sfilter(palette(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), matcher(fork(divide, lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)))), mostcommon(apply(fork(divide, first, last), pair(apply(lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)), apply(lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)))))))), first))), height(sfilter(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)), compose(rbind(contained, sfilter(palette(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), matcher(fork(divide, lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)))), mostcommon(apply(fork(divide, first, last), pair(apply(lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)), apply(lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)))))))), first))))), divide(width(sfilter(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I)))), compose(rbind(contained, sfilter(palette(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), matcher(fork(divide, lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)))), mostcommon(apply(fork(divide, first, last), pair(apply(lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)), apply(lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)))))))), first))), width(sfilter(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)), compose(rbind(contained, sfilter(palette(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), matcher(fork(divide, lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)))), mostcommon(apply(fork(divide, first, last), pair(apply(lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)), apply(lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)))))))), first)))))), compose(flip, matcher(first, mostcolor(I)))), subtract(ulcorner(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), ulcorner(sfilter(sfilter(asobject(hupscale(vupscale(subgrid(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)), I), divide(height(sfilter(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I)))), compose(rbind(contained, sfilter(palette(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), matcher(fork(divide, lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)))), mostcommon(apply(fork(divide, first, last), pair(apply(lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)), apply(lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)))))))), first))), height(sfilter(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)), compose(rbind(contained, sfilter(palette(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), matcher(fork(divide, lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)))), mostcommon(apply(fork(divide, first, last), pair(apply(lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)), apply(lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)))))))), first))))), divide(width(sfilter(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I)))), compose(rbind(contained, sfilter(palette(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), matcher(fork(divide, lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)))), mostcommon(apply(fork(divide, first, last), pair(apply(lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)), apply(lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)))))))), first))), width(sfilter(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)), compose(rbind(contained, sfilter(palette(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), matcher(fork(divide, lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)))), mostcommon(apply(fork(divide, first, last), pair(apply(lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)), apply(lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)))))))), first)))))), compose(flip, matcher(first, mostcolor(I)))), compose(rbind(contained, sfilter(palette(difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), matcher(fork(divide, lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I)))), mostcommon(apply(fork(divide, first, last), pair(apply(lbind(colorcount, sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)), apply(lbind(colorcount, difference(merge(fgpartition(I)), toobject(backdrop(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size)), I))), order(palette(sfilter(toobject(backdrop(inbox(argmax(sfilter(partition(I), fork(equality, toindices, corners)), size))), I), compose(flip, matcher(first, mostcolor(I))))), identity)))))))), first)))))))
"""

verify_8be77c9e = """
vconcat(I, hmirror(I))
"""

verify_8d5021e8 = """
hmirror(vconcat(vconcat(hconcat(vmirror(I), I), hmirror(hconcat(vmirror(I), I))), hconcat(vmirror(I), I)))
"""

verify_8d510a79 = """
fill(fill(I, TWO, mapply(fork(connect, identity, fork(add, identity, compose(rbind(gravitate, ofcolor(I, leastcommon(apply(color, totuple(frontiers(I)))))), initset))), ofcolor(I, TWO))), ONE, mapply(fork(connect, identity, fork(add, identity, compose(chain(lbind(multiply, maximum(shape(I))), sign, lbind(gravitate, ofcolor(I, leastcommon(apply(color, totuple(frontiers(I))))))), initset))), ofcolor(I, ONE)))
"""

verify_8e1813be = """
call(branch(greater(size(sfilter(sfilter(partition(I), fork(either, matcher(height, ONE), matcher(width, ONE))), matcher(height, ONE))), size(sfilter(sfilter(partition(I), fork(either, matcher(height, ONE), matcher(width, ONE))), matcher(width, ONE)))), dmirror, identity), repeat(apply(color, order(sfilter(partition(I), fork(either, matcher(height, ONE), matcher(width, ONE))), branch(greater(size(sfilter(sfilter(partition(I), fork(either, matcher(height, ONE), matcher(width, ONE))), matcher(height, ONE))), size(sfilter(sfilter(partition(I), fork(either, matcher(height, ONE), matcher(width, ONE))), matcher(width, ONE)))), uppermost, leftmost))), size(sfilter(partition(I), fork(either, matcher(height, ONE), matcher(width, ONE))))))
"""

verify_8e5a5113 = """
call(branch(portrait(I), identity, rot270), paint(call(branch(portrait(I), identity, rot90), I), mapply(fork(combine, fork(shift, compose(asobject, chain(first, rbind(rapply, subgrid(argmax(objects(hconcat(call(branch(portrait(I), identity, rot90), I), canvas(index(call(branch(portrait(I), identity, rot90), I), toivec(width(call(branch(portrait(I), identity, rot90), I)))), shape(call(branch(portrait(I), identity, rot90), I)))), F, T, T), numcolors), call(branch(portrait(I), identity, rot90), I))), compose(initset, lbind(power, rot90)))), chain(toivec, lbind(add, uppermost(argmax(objects(hconcat(call(branch(portrait(I), identity, rot90), I), canvas(index(call(branch(portrait(I), identity, rot90), I), toivec(width(call(branch(portrait(I), identity, rot90), I)))), shape(call(branch(portrait(I), identity, rot90), I)))), F, T, T), numcolors))), lbind(multiply, increment(height(argmax(objects(hconcat(call(branch(portrait(I), identity, rot90), I), canvas(index(call(branch(portrait(I), identity, rot90), I), toivec(width(call(branch(portrait(I), identity, rot90), I)))), shape(call(branch(portrait(I), identity, rot90), I)))), F, T, T), numcolors)))))), fork(shift, compose(asobject, chain(first, rbind(rapply, subgrid(argmax(objects(hconcat(call(branch(portrait(I), identity, rot90), I), canvas(index(call(branch(portrait(I), identity, rot90), I), toivec(width(call(branch(portrait(I), identity, rot90), I)))), shape(call(branch(portrait(I), identity, rot90), I)))), F, T, T), numcolors), call(branch(portrait(I), identity, rot90), I))), compose(initset, lbind(power, rot270)))), chain(toivec, lbind(subtract, uppermost(argmax(objects(hconcat(call(branch(portrait(I), identity, rot90), I), canvas(index(call(branch(portrait(I), identity, rot90), I), toivec(width(call(branch(portrait(I), identity, rot90), I)))), shape(call(branch(portrait(I), identity, rot90), I)))), F, T, T), numcolors))), lbind(multiply, increment(height(argmax(objects(hconcat(call(branch(portrait(I), identity, rot90), I), canvas(index(call(branch(portrait(I), identity, rot90), I), toivec(width(call(branch(portrait(I), identity, rot90), I)))), shape(call(branch(portrait(I), identity, rot90), I)))), F, T, T), numcolors))))))), interval(ONE, FOUR, ONE))))
"""

verify_8eb1be9a = """
paint(I, mapply(fork(combine, compose(lbind(shift, merge(fgpartition(I))), toivec), compose(compose(lbind(shift, merge(fgpartition(I))), toivec), invert)), interval(ZERO, height(I), height(merge(fgpartition(I))))))
"""

verify_8efcae92 = """
argmax(apply(rbind(subgrid, I), apply(compose(merge, compose(lbind(sfilter, remove(argmax(objects(I, T, F, F), fork(multiply, height, width)), objects(I, T, F, F))), chain(chain(lbind(lbind(chain, positive), size), rbind(compose, backdrop), lbind(lbind, intersection)), backdrop, outbox))), sfilter(remove(argmax(objects(I, T, F, F), fork(multiply, height, width)), objects(I, T, F, F)), chain(positive, size, compose(lbind(sfilter, remove(argmax(objects(I, T, F, F), fork(multiply, height, width)), objects(I, T, F, F))), chain(chain(lbind(lbind(chain, positive), size), rbind(compose, backdrop), lbind(lbind, intersection)), backdrop, outbox)))))), rbind(colorcount, argmin(palette(merge(apply(compose(merge, compose(lbind(sfilter, remove(argmax(objects(I, T, F, F), fork(multiply, height, width)), objects(I, T, F, F))), chain(chain(lbind(lbind(chain, positive), size), rbind(compose, backdrop), lbind(lbind, intersection)), backdrop, outbox))), sfilter(remove(argmax(objects(I, T, F, F), fork(multiply, height, width)), objects(I, T, F, F)), chain(positive, size, compose(lbind(sfilter, remove(argmax(objects(I, T, F, F), fork(multiply, height, width)), objects(I, T, F, F))), chain(chain(lbind(lbind(chain, positive), size), rbind(compose, backdrop), lbind(lbind, intersection)), backdrop, outbox))))))), lbind(colorcount, merge(apply(compose(merge, compose(lbind(sfilter, remove(argmax(objects(I, T, F, F), fork(multiply, height, width)), objects(I, T, F, F))), chain(chain(lbind(lbind(chain, positive), size), rbind(compose, backdrop), lbind(lbind, intersection)), backdrop, outbox))), sfilter(remove(argmax(objects(I, T, F, F), fork(multiply, height, width)), objects(I, T, F, F)), chain(positive, size, compose(lbind(sfilter, remove(argmax(objects(I, T, F, F), fork(multiply, height, width)), objects(I, T, F, F))), chain(chain(lbind(lbind(chain, positive), size), rbind(compose, backdrop), lbind(lbind, intersection)), backdrop, outbox))))))))))
"""

verify_8f2ea7aa = """
paint(canvas(mostcolor(I), multiply(shape(normalize(merge(fgpartition(I)))), shape(normalize(merge(fgpartition(I)))))), mapply(lbind(shift, normalize(merge(fgpartition(I)))), apply(rbind(multiply, shape(normalize(merge(fgpartition(I))))), toindices(normalize(merge(fgpartition(I)))))))
"""

verify_90c28cc7 = """
dmirror(dedupe(dmirror(dedupe(call(power(compose(dmirror, rbind(sfilter, chain(positive, size, rbind(sfilter, compose(flip, matcher(identity, ZERO)))))), FOUR), I)))))
"""

verify_90f3ed37 = """
fill(I, ONE, mapply(fork(difference, compose(lbind(shift, shift(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width), invert(ulcorner(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width))))), fork(argmax, fork(sfilter, fork(sfilter, chain(rbind(apply, shift(asindices(I), invert(center(asindices(I))))), lbind(rbind, add), center), compose(lbind(compose, compose(positive, size)), compose(rbind(compose, lbind(shift, shift(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width), invert(ulcorner(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width)))))), lbind(rbind, intersection)))), fork(matcher, compose(lbind(compose, size), compose(rbind(compose, lbind(shift, shift(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width), invert(ulcorner(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width)))))), lbind(rbind, intersection))), fork(valmax, fork(sfilter, chain(rbind(apply, shift(asindices(I), invert(center(asindices(I))))), lbind(rbind, add), center), compose(lbind(compose, compose(positive, size)), compose(rbind(compose, lbind(shift, shift(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width), invert(ulcorner(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width)))))), lbind(rbind, intersection)))), compose(lbind(compose, size), compose(rbind(compose, lbind(shift, shift(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width), invert(ulcorner(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width)))))), lbind(rbind, intersection)))))), fork(compose, compose(lbind(rbind, greater), rightmost), compose(lbind(compose, compose(leftmost, lbind(insert, tojvec(double(width(I)))))), compose(rbind(compose, lbind(shift, shift(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width), invert(ulcorner(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width)))))), lbind(rbind, difference)))))), identity), remove(argmax(apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))), width), apply(compose(chain(lbind(sfilter, ofcolor(I, leastcolor(I))), rbind(matcher, ZERO), lbind(compose, chain(size, lbind(sfilter, difference(apply(first, asindices(I)), apply(first, ofcolor(I, leastcolor(I))))), lbind(rbind, contained)))), fork(lbind(fork, rbind(interval, ONE)), chain(rbind(lbind(chain, compose(increment, minimum)), first), lbind(lbind, astuple), first), chain(rbind(lbind(chain, maximum), first), lbind(lbind, astuple), first))), apply(toivec, apply(first, ofcolor(I, leastcolor(I))))))))
"""

verify_913fb3ed = """
paint(I, mapply(fork(recolor, first, chain(lbind(mapply, neighbors), lbind(ofcolor, I), last)), insert(astuple(ONE, TWO), insert(astuple(FOUR, EIGHT), initset(astuple(SIX, THREE))))))
"""

verify_91413438 = """
merge(hsplit(dmirror(merge(combine(repeat(dmirror(I), colorcount(I, other(palette(I), ZERO))), repeat(canvas(ZERO, shape(dmirror(I))), subtract(multiply(colorcount(I, ZERO), colorcount(I, ZERO)), colorcount(I, other(palette(I), ZERO))))))), colorcount(I, ZERO)))
"""

verify_91714a58 = """
fill(paint(canvas(mostcolor(I), shape(I)), argmax(objects(I, T, F, T), size)), mostcolor(I), combine(mapply(lbind(shift, toindices(insert(astuple(mostcolor(I), ORIGIN), insert(astuple(color(argmax(objects(I, T, F, T), size)), RIGHT), initset(astuple(mostcolor(I), ZERO_BY_TWO)))))), occurrences(paint(canvas(mostcolor(I), shape(I)), argmax(objects(I, T, F, T), size)), insert(astuple(mostcolor(I), ORIGIN), insert(astuple(color(argmax(objects(I, T, F, T), size)), RIGHT), initset(astuple(mostcolor(I), ZERO_BY_TWO)))))), mapply(lbind(shift, toindices(dmirror(insert(astuple(mostcolor(I), ORIGIN), insert(astuple(color(argmax(objects(I, T, F, T), size)), RIGHT), initset(astuple(mostcolor(I), ZERO_BY_TWO))))))), occurrences(paint(canvas(mostcolor(I), shape(I)), argmax(objects(I, T, F, T), size)), dmirror(insert(astuple(mostcolor(I), ORIGIN), insert(astuple(color(argmax(objects(I, T, F, T), size)), RIGHT), initset(astuple(mostcolor(I), ZERO_BY_TWO)))))))))
"""

verify_9172f3a0 = """
upscale(I, THREE)
"""

verify_928ad970 = """
fill(I, other(remove(leastcolor(I), palette(I)), mostcolor(I)), inbox(ofcolor(I, leastcolor(I))))
"""

verify_93b581b8 = """
paint(I, mapply(fork(combine, fork(combine, fork(recolor, compose(lbind(index, I), lrcorner), rbind(shift, astuple(NEG_TWO, NEG_TWO))), fork(recolor, compose(lbind(index, I), ulcorner), rbind(shift, TWO_BY_TWO))), fork(combine, fork(recolor, compose(lbind(index, I), llcorner), rbind(shift, astuple(NEG_TWO, TWO))), fork(recolor, compose(lbind(index, I), urcorner), rbind(shift, astuple(TWO, NEG_TWO))))), apply(toindices, objects(I, F, F, T))))
"""

verify_941d9a10 = """
fill(fill(fill(I, ONE, argmin(colorfilter(objects(I, T, T, F), mostcolor(toobject(corners(asindices(I)), I))), fork(add, leftmost, uppermost))), THREE, argmax(colorfilter(objects(I, T, T, F), mostcolor(toobject(corners(asindices(I)), I))), fork(add, leftmost, uppermost))), TWO, extract(colorfilter(objects(I, T, T, F), mostcolor(toobject(corners(asindices(I)), I))), fork(both, fork(equality, chain(chain(size, lbind(sfilter, colorfilter(objects(I, T, T, F), mostcolor(toobject(corners(asindices(I)), I)))), rbind(compose, leftmost)), lbind(lbind, greater), leftmost), chain(chain(size, lbind(sfilter, colorfilter(objects(I, T, T, F), mostcolor(toobject(corners(asindices(I)), I)))), rbind(compose, leftmost)), lbind(rbind, greater), leftmost)), fork(equality, chain(chain(size, lbind(sfilter, colorfilter(objects(I, T, T, F), mostcolor(toobject(corners(asindices(I)), I)))), rbind(compose, uppermost)), lbind(lbind, greater), uppermost), chain(chain(size, lbind(sfilter, colorfilter(objects(I, T, T, F), mostcolor(toobject(corners(asindices(I)), I)))), rbind(compose, uppermost)), lbind(rbind, greater), uppermost)))))
"""

verify_94f9d214 = """
fill(canvas(first(intersection(palette(first(call(extract(astuple(vsplit, hsplit), matcher(compose(lbind(apply, numcolors), chain(first, rbind(rapply, I), lbind(rapply, initset(rbind(rbind, TWO))))), TWO_BY_TWO)), I, TWO))), palette(last(call(extract(astuple(vsplit, hsplit), matcher(compose(lbind(apply, numcolors), chain(first, rbind(rapply, I), lbind(rapply, initset(rbind(rbind, TWO))))), TWO_BY_TWO)), I, TWO))))), shape(first(call(extract(astuple(vsplit, hsplit), matcher(compose(lbind(apply, numcolors), chain(first, rbind(rapply, I), lbind(rapply, initset(rbind(rbind, TWO))))), TWO_BY_TWO)), I, TWO)))), TWO, intersection(ofcolor(first(call(extract(astuple(vsplit, hsplit), matcher(compose(lbind(apply, numcolors), chain(first, rbind(rapply, I), lbind(rapply, initset(rbind(rbind, TWO))))), TWO_BY_TWO)), I, TWO)), first(intersection(palette(first(call(extract(astuple(vsplit, hsplit), matcher(compose(lbind(apply, numcolors), chain(first, rbind(rapply, I), lbind(rapply, initset(rbind(rbind, TWO))))), TWO_BY_TWO)), I, TWO))), palette(last(call(extract(astuple(vsplit, hsplit), matcher(compose(lbind(apply, numcolors), chain(first, rbind(rapply, I), lbind(rapply, initset(rbind(rbind, TWO))))), TWO_BY_TWO)), I, TWO)))))), ofcolor(last(call(extract(astuple(vsplit, hsplit), matcher(compose(lbind(apply, numcolors), chain(first, rbind(rapply, I), lbind(rapply, initset(rbind(rbind, TWO))))), TWO_BY_TWO)), I, TWO)), first(intersection(palette(first(call(extract(astuple(vsplit, hsplit), matcher(compose(lbind(apply, numcolors), chain(first, rbind(rapply, I), lbind(rapply, initset(rbind(rbind, TWO))))), TWO_BY_TWO)), I, TWO))), palette(last(call(extract(astuple(vsplit, hsplit), matcher(compose(lbind(apply, numcolors), chain(first, rbind(rapply, I), lbind(rapply, initset(rbind(rbind, TWO))))), TWO_BY_TWO)), I, TWO))))))))
"""

verify_952a094c = """
fill(fill(fill(fill(cover(I, inbox(merge(fgpartition(I)))), index(I, ulcorner(inbox(merge(fgpartition(I))))), initset(add(UNITY, lrcorner(merge(fgpartition(I)))))), index(I, lrcorner(inbox(merge(fgpartition(I))))), initset(add(NEG_UNITY, ulcorner(merge(fgpartition(I)))))), index(I, urcorner(inbox(merge(fgpartition(I))))), initset(add(DOWN_LEFT, llcorner(merge(fgpartition(I)))))), index(I, llcorner(inbox(merge(fgpartition(I))))), initset(add(UP_RIGHT, urcorner(merge(fgpartition(I))))))
"""

verify_9565186b = """
paint(canvas(FIVE, shape(I)), argmax(partition(I), size))
"""

verify_95990924 = """
fill(fill(fill(fill(I, ONE, shift(apply(ulcorner, objects(I, T, F, T)), NEG_UNITY)), TWO, shift(apply(urcorner, objects(I, T, F, T)), UP_RIGHT)), THREE, shift(apply(llcorner, objects(I, T, F, T)), DOWN_LEFT)), FOUR, shift(apply(lrcorner, objects(I, T, F, T)), UNITY))
"""

verify_963e52fc = """
crop(rot270(merge(repeat(rot90(crop(I, ulcorner(asobject(I)), astuple(height(asobject(I)), hperiod(asobject(I))))), increment(divide(double(width(I)), hperiod(asobject(I))))))), ORIGIN, astuple(height(asobject(I)), double(width(I))))
"""

verify_97999447 = """
fill(paint(I, mapply(fork(recolor, color, compose(rbind(shoot, RIGHT), center)), apply(initset, sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I))))))), FIVE, merge(prapply(shift, apply(toindices, apply(initset, sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I)))))), apply(tojvec, apply(increment, apply(double, interval(ZERO, width(I), ONE)))))))
"""

verify_97a05b5b = """
paint(subgrid(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))), I), mapply(fork(shift, compose(asobject, compose(first, fork(rapply, compose(initset, compose(lbind(argmax, combine(combine(astuple(identity, rot180), astuple(rot90, rot270)), combine(astuple(hmirror, vmirror), astuple(cmirror, dmirror)))), chain(lbind(rbind(chain, initset), compose(compose(chain(positive, size, lbind(occurrences, subgrid(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))), I))), asobject), first)), lbind(rbind, rapply), fork(rbind(replace, color(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))))), compose(rbind(rbind(replace, mostcolor(I)), color(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))))), fork(paint, compose(lbind(canvas, NEG_ONE), shape), normalize)), compose(rbind(other, color(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))))), palette))))), fork(paint, compose(lbind(canvas, NEG_ONE), shape), normalize)))), compose(chain(first, lbind(occurrences, subgrid(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))), I)), asobject), compose(first, fork(rapply, compose(initset, compose(lbind(argmax, combine(combine(astuple(identity, rot180), astuple(rot90, rot270)), combine(astuple(hmirror, vmirror), astuple(cmirror, dmirror)))), chain(lbind(rbind(chain, initset), compose(compose(chain(positive, size, lbind(occurrences, subgrid(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))), I))), asobject), first)), lbind(rbind, rapply), fork(rbind(replace, color(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))))), compose(rbind(rbind(replace, mostcolor(I)), color(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))))), fork(paint, compose(lbind(canvas, NEG_ONE), shape), normalize)), compose(rbind(other, color(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))))), palette))))), fork(rbind(replace, color(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))))), compose(rbind(rbind(replace, mostcolor(I)), color(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))))), fork(paint, compose(lbind(canvas, NEG_ONE), shape), normalize)), compose(rbind(other, color(merge(difference(objects(I, F, F, T), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO))))))), palette)))))), sfilter(objects(I, F, F, T), fork(both, fork(equality, size, fork(multiply, height, width)), matcher(numcolors, TWO)))))
"""

verify_98cf29f8 = """
trim(fill(replace(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)), color(other(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop)))), mostcolor(toobject(box(asindices(I)), I))), color(other(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop)))), shift(ofcolor(fill(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)), mostcolor(toobject(box(asindices(I)), I)), combine(mapply(lbind(shift, insert(astuple(color(other(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop)))), RIGHT), recolor(mostcolor(toobject(box(asindices(I)), I)), insert(ORIGIN, initset(ZERO_BY_TWO))))), occurrences(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)), insert(astuple(color(other(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop)))), RIGHT), recolor(mostcolor(toobject(box(asindices(I)), I)), insert(ORIGIN, initset(ZERO_BY_TWO)))))), mapply(lbind(shift, dmirror(insert(astuple(color(other(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop)))), RIGHT), recolor(mostcolor(toobject(box(asindices(I)), I)), insert(ORIGIN, initset(ZERO_BY_TWO)))))), occurrences(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)), dmirror(insert(astuple(color(other(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop)))), RIGHT), recolor(mostcolor(toobject(box(asindices(I)), I)), insert(ORIGIN, initset(ZERO_BY_TWO))))))))), color(other(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop))))), gravitate(ofcolor(fill(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)), mostcolor(toobject(box(asindices(I)), I)), combine(mapply(lbind(shift, insert(astuple(color(other(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop)))), RIGHT), recolor(mostcolor(toobject(box(asindices(I)), I)), insert(ORIGIN, initset(ZERO_BY_TWO))))), occurrences(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)), insert(astuple(color(other(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop)))), RIGHT), recolor(mostcolor(toobject(box(asindices(I)), I)), insert(ORIGIN, initset(ZERO_BY_TWO)))))), mapply(lbind(shift, dmirror(insert(astuple(color(other(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop)))), RIGHT), recolor(mostcolor(toobject(box(asindices(I)), I)), insert(ORIGIN, initset(ZERO_BY_TWO)))))), occurrences(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)), dmirror(insert(astuple(color(other(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop)))), RIGHT), recolor(mostcolor(toobject(box(asindices(I)), I)), insert(ORIGIN, initset(ZERO_BY_TWO))))))))), color(other(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop))))), extract(apply(fork(recolor, identity, lbind(ofcolor, paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY)))), remove(mostcolor(toobject(box(asindices(I)), I)), palette(paint(canvas(mostcolor(toobject(box(asindices(I)), I)), add(TWO, shape(I))), shift(asobject(I), UNITY))))), fork(equality, toindices, backdrop))))))
"""

verify_995c5fa3 = """
apply(rbind(repeat, divide(increment(width(I)), FIVE)), apply(fork(add, fork(add, compose(lbind(multiply, TWO), matcher(numcolors, ONE)), compose(lbind(multiply, FOUR), compose(flip, fork(equality, identity, hmirror)))), fork(add, compose(lbind(multiply, THREE), compose(flip, fork(equality, compose(lbind(index, I), ulcorner), chain(lbind(index, I), lbind(add, DOWN), ulcorner)))), compose(lbind(multiply, EIGHT), compose(flip, fork(either, fork(either, matcher(numcolors, ONE), compose(flip, fork(equality, identity, hmirror))), compose(flip, fork(equality, compose(lbind(index, I), ulcorner), chain(lbind(index, I), lbind(add, DOWN), ulcorner)))))))), apply(compose(rbind(toobject, I), lbind(shift, asindices(canvas(NEG_ONE, astuple(FOUR, FOUR))))), apply(tojvec, interval(ZERO, multiply(divide(increment(width(I)), FIVE), FIVE), FIVE)))))
"""

verify_99b1bc43 = """
fill(canvas(first(intersection(palette(first(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO))), palette(last(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO))))), shape(first(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO)))), THREE, difference(combine(ofcolor(first(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO)), first(intersection(palette(first(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO))), palette(last(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO)))))), ofcolor(last(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO)), first(intersection(palette(first(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO))), palette(last(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO))))))), intersection(ofcolor(first(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO)), first(intersection(palette(first(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO))), palette(last(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO)))))), ofcolor(last(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO)), first(intersection(palette(first(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO))), palette(last(call(branch(positive(size(sfilter(frontiers(I), vline))), hsplit, vsplit), I, TWO)))))))))
"""

verify_99fa7670 = """
underpaint(paint(I, mapply(fork(recolor, color, compose(rbind(shoot, RIGHT), center)), objects(I, T, F, T))), mapply(fork(recolor, compose(color, first), fork(connect, compose(lrcorner, first), compose(lrcorner, last))), pair(remove(recolor(mostcolor(I), initset(add(shape(I), DOWN_LEFT))), order(insert(recolor(mostcolor(I), initset(add(shape(I), DOWN_LEFT))), objects(paint(I, mapply(fork(recolor, color, compose(rbind(shoot, RIGHT), center)), objects(I, T, F, T))), T, F, T)), uppermost)), remove(first(order(insert(recolor(mostcolor(I), initset(add(shape(I), DOWN_LEFT))), objects(paint(I, mapply(fork(recolor, color, compose(rbind(shoot, RIGHT), center)), objects(I, T, F, T))), T, F, T)), uppermost)), order(insert(recolor(mostcolor(I), initset(add(shape(I), DOWN_LEFT))), objects(paint(I, mapply(fork(recolor, color, compose(rbind(shoot, RIGHT), center)), objects(I, T, F, T))), T, F, T)), uppermost)))))
"""

verify_9aec4887 = """
paint(paint(subgrid(backdrop(outbox(argmax(colorfilter(sfilter(objects(I, T, F, F), fork(equality, size, fork(multiply, height, width))), mostcolor(I)), size))), I), shift(normalize(merge(fgpartition(cover(I, backdrop(outbox(argmax(colorfilter(sfilter(objects(I, T, F, F), fork(equality, size, fork(multiply, height, width))), mostcolor(I)), size))))))), UNITY)), mapply(fork(recolor, color, compose(lbind(sfilter, toindices(shift(normalize(merge(fgpartition(cover(I, backdrop(outbox(argmax(colorfilter(sfilter(objects(I, T, F, F), fork(equality, size, fork(multiply, height, width))), mostcolor(I)), size))))))), UNITY))), fork(lbind(fork, greater), chain(rbind(compose, compose(lbind(lbind, manhattan), initset)), lbind(lbind, valmin), rbind(remove, fgpartition(subgrid(backdrop(outbox(argmax(colorfilter(sfilter(objects(I, T, F, F), fork(equality, size, fork(multiply, height, width))), mostcolor(I)), size))), I)))), compose(rbind(compose, initset), lbind(rbind, manhattan))))), fgpartition(subgrid(backdrop(outbox(argmax(colorfilter(sfilter(objects(I, T, F, F), fork(equality, size, fork(multiply, height, width))), mostcolor(I)), size))), I))))
"""

verify_9af7a82c = """
cmirror(merge(apply(compose(cmirror, fork(vconcat, fork(canvas, color, compose(rbind(astuple, ONE), size)), compose(lbind(canvas, ZERO), chain(rbind(astuple, ONE), lbind(subtract, valmax(partition(I), size)), size)))), order(partition(I), size))))
"""

verify_9d9215db = """
call(power(compose(rot90, fork(paint, identity, fork(mapply, compose(chain(chain(lbind(lbind(fork, recolor), first), rbind(compose, compose(rbind(shoot, RIGHT), last)), lbind(rbind, sfilter)), rbind(lbind(fork, both), chain(flip, fork(equality, compose(double, halve), identity), last)), lbind(rbind, contained)), fork(intersection, compose(rbind(sfilter, fork(greater, last, compose(increment, first))), asindices), compose(compose(rbind(shift, tojvec(NEG_TWO)), vmirror), compose(rbind(sfilter, fork(greater, last, compose(increment, first))), asindices)))), compose(rbind(sfilter, compose(flip, matcher(first, mostcolor(I)))), fork(toobject, fork(intersection, compose(rbind(sfilter, fork(greater, last, compose(increment, first))), asindices), compose(compose(rbind(shift, tojvec(NEG_TWO)), vmirror), compose(rbind(sfilter, fork(greater, last, compose(increment, first))), asindices))), identity))))), FOUR), paint(I, combine(combine(merge(fgpartition(hmirror(I))), merge(fgpartition(vmirror(I)))), merge(fgpartition(vmirror(hmirror(I)))))))
"""

verify_9dfd6313 = """
call(last(extract(combine(astuple(astuple(connect(ORIGIN, decrement(shape(I))), dmirror), astuple(connect(toivec(decrement(height(I))), tojvec(decrement(width(I)))), cmirror)), astuple(astuple(connect(tojvec(halve(width(I))), astuple(decrement(height(I)), halve(width(I)))), vmirror), astuple(connect(toivec(halve(height(I))), astuple(halve(height(I)), decrement(width(I)))), hmirror))), fork(both, matcher(chain(numcolors, rbind(toobject, I), first), ONE), fork(equality, chain(lbind(colorcount, I), color, compose(rbind(toobject, I), first)), compose(size, first))))), I)
"""

verify_9ecd008a = """
subgrid(ofcolor(I, ZERO), argmin(astuple(vmirror(I), hmirror(I)), compose(rbind(colorcount, ZERO), lbind(toobject, ofcolor(I, ZERO)))))
"""

verify_9edfc990 = """
paint(I, recolor(ONE, mfilter(colorfilter(objects(I, T, F, F), ZERO), rbind(adjacent, ofcolor(I, ONE)))))
"""

verify_9f236235 = """
vmirror(apply(chain(lbind(apply, color), rbind(order, leftmost), compose(lbind(sfilter, objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), T, F, T)), lbind(matcher, uppermost))), order(apply(uppermost, objects(hconcat(I, canvas(color(merge(frontiers(I))), shape(I))), T, F, T)), identity)))
"""

verify_a1570a43 = """
paint(fill(I, mostcolor(I), difference(merge(fgpartition(I)), argmax(sfilter(fgpartition(I), fork(equality, toindices, corners)), fork(multiply, height, width)))), shift(normalize(difference(merge(fgpartition(I)), argmax(sfilter(fgpartition(I), fork(equality, toindices, corners)), fork(multiply, height, width)))), increment(ulcorner(argmax(sfilter(fgpartition(I), fork(equality, toindices, corners)), fork(multiply, height, width))))))
"""

verify_a2fd1cf0 = """
underfill(I, EIGHT, combine(connect(astuple(minimum(astuple(uppermost(ofcolor(I, TWO)), uppermost(ofcolor(I, THREE)))), leftmost(ofcolor(I, THREE))), astuple(maximum(astuple(uppermost(ofcolor(I, TWO)), uppermost(ofcolor(I, THREE)))), leftmost(ofcolor(I, THREE)))), connect(astuple(uppermost(ofcolor(I, TWO)), minimum(astuple(leftmost(ofcolor(I, TWO)), leftmost(ofcolor(I, THREE))))), astuple(uppermost(ofcolor(I, TWO)), maximum(astuple(leftmost(ofcolor(I, TWO)), leftmost(ofcolor(I, THREE))))))))
"""

verify_a3325580 = """
dmirror(merge(apply(rbind(canvas, astuple(ONE, valmax(objects(I, T, F, T), size))), apply(color, order(sizefilter(objects(I, T, F, T), valmax(objects(I, T, F, T), size)), leftmost)))))
"""

verify_a3df8b1e = """
call(branch(portrait(I), identity, dmirror), fill(call(branch(portrait(I), identity, dmirror), I), other(palette(I), mostcolor(toobject(difference(asindices(I), corners(asindices(I))), I))), mapply(last, sfilter(pair(combine(astuple(equality(index(call(branch(portrait(I), identity, dmirror), I), ulcorner(asindices(call(branch(portrait(I), identity, dmirror), I)))), other(palette(I), mostcolor(toobject(difference(asindices(I), corners(asindices(I))), I)))), equality(index(call(branch(portrait(I), identity, dmirror), I), urcorner(asindices(call(branch(portrait(I), identity, dmirror), I)))), other(palette(I), mostcolor(toobject(difference(asindices(I), corners(asindices(I))), I))))), astuple(equality(index(call(branch(portrait(I), identity, dmirror), I), llcorner(asindices(call(branch(portrait(I), identity, dmirror), I)))), other(palette(I), mostcolor(toobject(difference(asindices(I), corners(asindices(I))), I)))), equality(index(call(branch(portrait(I), identity, dmirror), I), lrcorner(asindices(call(branch(portrait(I), identity, dmirror), I)))), other(palette(I), mostcolor(toobject(difference(asindices(I), corners(asindices(I))), I)))))), combine(astuple(sfilter(asindices(call(branch(portrait(I), identity, dmirror), I)), rbind(contained, mapply(chain(lbind(shift, remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))), toivec, lbind(multiply, height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), interval(ZERO, increment(divide(height(call(branch(portrait(I), identity, dmirror), I)), height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), ONE)))), vmirror(sfilter(asindices(call(branch(portrait(I), identity, dmirror), I)), rbind(contained, mapply(chain(lbind(shift, remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))), toivec, lbind(multiply, height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), interval(ZERO, increment(divide(height(call(branch(portrait(I), identity, dmirror), I)), height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), ONE)))))), astuple(hmirror(sfilter(asindices(call(branch(portrait(I), identity, dmirror), I)), rbind(contained, mapply(chain(lbind(shift, remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))), toivec, lbind(multiply, height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), interval(ZERO, increment(divide(height(call(branch(portrait(I), identity, dmirror), I)), height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), ONE))))), hmirror(vmirror(sfilter(asindices(call(branch(portrait(I), identity, dmirror), I)), rbind(contained, mapply(chain(lbind(shift, remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))), toivec, lbind(multiply, height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), interval(ZERO, increment(divide(height(call(branch(portrait(I), identity, dmirror), I)), height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), ONE))))))))), first))))
"""

verify_a416b8f3 = """
hconcat(I, I)
"""

verify_a48eeaf7 = """
fill(cover(I, other(fgpartition(I), argmax(sfilter(fgpartition(I), fork(equality, toindices, backdrop)), size))), color(other(fgpartition(I), argmax(sfilter(fgpartition(I), fork(equality, toindices, backdrop)), size))), apply(compose(chain(lbind(argmin, outbox(argmax(sfilter(fgpartition(I), fork(equality, toindices, backdrop)), size))), rbind(compose, initset), lbind(lbind, manhattan)), initset), toindices(other(fgpartition(I), argmax(sfilter(fgpartition(I), fork(equality, toindices, backdrop)), size)))))
"""

verify_a5313dff = """
fill(I, ONE, mfilter(colorfilter(objects(I, T, F, F), mostcolor(I)), compose(flip, rbind(bordering, I))))
"""

verify_a5f85a15 = """
fill(I, FOUR, mapply(lbind(shift, order(apply(compose(increment, double), shoot(ORIGIN, UNITY)), identity)), sfilter(ofcolor(I, leastcolor(I)), lbind(contained, ZERO))))
"""

verify_a61ba2ce = """
paint(paint(paint(paint(canvas(mostcolor(I), astuple(add(height(extract(fgpartition(I), compose(flip, fork(contained, lrcorner, toindices)))), height(extract(fgpartition(I), compose(flip, fork(contained, urcorner, toindices))))), add(width(extract(fgpartition(I), compose(flip, fork(contained, lrcorner, toindices)))), width(extract(fgpartition(I), compose(flip, fork(contained, llcorner, toindices))))))), normalize(extract(fgpartition(I), compose(flip, fork(contained, lrcorner, toindices))))), shift(normalize(extract(fgpartition(I), compose(flip, fork(contained, llcorner, toindices)))), tojvec(subtract(add(width(extract(fgpartition(I), compose(flip, fork(contained, lrcorner, toindices)))), width(extract(fgpartition(I), compose(flip, fork(contained, llcorner, toindices))))), width(extract(fgpartition(I), compose(flip, fork(contained, llcorner, toindices)))))))), shift(normalize(extract(fgpartition(I), compose(flip, fork(contained, urcorner, toindices)))), toivec(subtract(add(height(extract(fgpartition(I), compose(flip, fork(contained, lrcorner, toindices)))), height(extract(fgpartition(I), compose(flip, fork(contained, urcorner, toindices))))), height(extract(fgpartition(I), compose(flip, fork(contained, urcorner, toindices)))))))), shift(normalize(extract(fgpartition(I), compose(flip, fork(contained, ulcorner, toindices)))), subtract(astuple(add(height(extract(fgpartition(I), compose(flip, fork(contained, lrcorner, toindices)))), height(extract(fgpartition(I), compose(flip, fork(contained, urcorner, toindices))))), add(width(extract(fgpartition(I), compose(flip, fork(contained, lrcorner, toindices)))), width(extract(fgpartition(I), compose(flip, fork(contained, llcorner, toindices)))))), shape(extract(fgpartition(I), compose(flip, fork(contained, ulcorner, toindices)))))))
"""

verify_a61f2674 = """
fill(fill(cover(I, merge(objects(I, T, F, T))), ONE, argmax(objects(I, T, F, T), size)), TWO, argmin(objects(I, T, F, T), size))
"""

verify_a64e4611 = """
trim(call(power(power(compose(rot90, compose(fork(paint, identity, compose(lbind(mapply, lbind(shift, recolor(mostcolor(I), combine(recolor(mostcolor(I), remove(astuple(TWO, ONE), dneighbors(UNITY))), recolor(THREE, initset(UNITY)))))), rbind(occurrences, combine(recolor(mostcolor(I), remove(astuple(TWO, ONE), dneighbors(UNITY))), recolor(THREE, initset(UNITY)))))), fork(paint, identity, compose(lbind(mapply, lbind(shift, recolor(mostcolor(I), combine(recolor(mostcolor(I), insert(DOWN, insert(RIGHT, insert(ZERO_BY_TWO, initset(astuple(ONE, THREE)))))), recolor(THREE, insert(UNITY, initset(astuple(ONE, TWO)))))))), rbind(occurrences, combine(recolor(mostcolor(I), insert(DOWN, insert(RIGHT, insert(ZERO_BY_TWO, initset(astuple(ONE, THREE)))))), recolor(THREE, insert(UNITY, initset(astuple(ONE, TWO)))))))))), FOUR), TWO), fill(fill(paint(canvas(mostcolor(I), add(TWO, shape(I))), shift(asobject(I), UNITY)), THREE, combine(ofcolor(call(fork(paint, identity, compose(lbind(mapply, lbind(shift, recolor(THREE, connect(UNITY, astuple(ONE, double(SIX)))))), rbind(occurrences, recolor(mostcolor(I), backdrop(outbox(connect(UNITY, astuple(ONE, double(SIX))))))))), paint(canvas(mostcolor(I), add(TWO, shape(I))), shift(asobject(I), UNITY))), THREE), ofcolor(dmirror(call(fork(paint, identity, compose(lbind(mapply, lbind(shift, recolor(THREE, connect(UNITY, astuple(ONE, double(SIX)))))), rbind(occurrences, recolor(mostcolor(I), backdrop(outbox(connect(UNITY, astuple(ONE, double(SIX))))))))), dmirror(paint(canvas(mostcolor(I), add(TWO, shape(I))), shift(asobject(I), UNITY))))), THREE))), THREE, box(asindices(fill(paint(canvas(mostcolor(I), add(TWO, shape(I))), shift(asobject(I), UNITY)), THREE, combine(ofcolor(call(fork(paint, identity, compose(lbind(mapply, lbind(shift, recolor(THREE, connect(UNITY, astuple(ONE, double(SIX)))))), rbind(occurrences, recolor(mostcolor(I), backdrop(outbox(connect(UNITY, astuple(ONE, double(SIX))))))))), paint(canvas(mostcolor(I), add(TWO, shape(I))), shift(asobject(I), UNITY))), THREE), ofcolor(dmirror(call(fork(paint, identity, compose(lbind(mapply, lbind(shift, recolor(THREE, connect(UNITY, astuple(ONE, double(SIX)))))), rbind(occurrences, recolor(mostcolor(I), backdrop(outbox(connect(UNITY, astuple(ONE, double(SIX))))))))), dmirror(paint(canvas(mostcolor(I), add(TWO, shape(I))), shift(asobject(I), UNITY))))), THREE))))))))
"""

verify_a65b410d = """
call(last(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(hline, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), matcher(chain(leftmost, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), ZERO)), first))), fill(fill(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(hline, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), matcher(chain(leftmost, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), ZERO)), first))), I), THREE, combine(mapply(rbind(shoot, LEFT), shoot(add(argmax(ofcolor(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(hline, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), matcher(chain(leftmost, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), ZERO)), first))), I), leastcolor(I)), last), UP_RIGHT), UP_RIGHT)), shift(mapply(rbind(shoot, LEFT), shoot(add(argmax(ofcolor(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(hline, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), matcher(chain(leftmost, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), ZERO)), first))), I), leastcolor(I)), last), UP_RIGHT), UP_RIGHT)), tojvec(invert(width(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(hline, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), matcher(chain(leftmost, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), ZERO)), first))), I))))))), ONE, combine(mapply(rbind(shoot, LEFT), shoot(add(argmax(ofcolor(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(hline, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), matcher(chain(leftmost, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), ZERO)), first))), I), leastcolor(I)), last), DOWN_LEFT), DOWN_LEFT)), shift(mapply(rbind(shoot, LEFT), shoot(add(argmax(ofcolor(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(hline, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), matcher(chain(leftmost, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), ZERO)), first))), I), leastcolor(I)), last), DOWN_LEFT), DOWN_LEFT)), tojvec(invert(width(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(hline, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), matcher(chain(leftmost, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), ZERO)), first))), I))))))))
"""

verify_a68b268e = """
paint(paint(paint(paint(canvas(first(intersection(intersection(palette(lefthalf(tophalf(I))), palette(righthalf(tophalf(I)))), intersection(palette(lefthalf(bottomhalf(I))), palette(righthalf(bottomhalf(I)))))), halve(shape(I))), call(compose(rbind(sfilter, compose(flip, matcher(first, first(intersection(intersection(palette(lefthalf(tophalf(I))), palette(righthalf(tophalf(I)))), intersection(palette(lefthalf(bottomhalf(I))), palette(righthalf(bottomhalf(I))))))))), asobject), righthalf(bottomhalf(I)))), call(compose(rbind(sfilter, compose(flip, matcher(first, first(intersection(intersection(palette(lefthalf(tophalf(I))), palette(righthalf(tophalf(I)))), intersection(palette(lefthalf(bottomhalf(I))), palette(righthalf(bottomhalf(I))))))))), asobject), lefthalf(bottomhalf(I)))), call(compose(rbind(sfilter, compose(flip, matcher(first, first(intersection(intersection(palette(lefthalf(tophalf(I))), palette(righthalf(tophalf(I)))), intersection(palette(lefthalf(bottomhalf(I))), palette(righthalf(bottomhalf(I))))))))), asobject), righthalf(tophalf(I)))), call(compose(rbind(sfilter, compose(flip, matcher(first, first(intersection(intersection(palette(lefthalf(tophalf(I))), palette(righthalf(tophalf(I)))), intersection(palette(lefthalf(bottomhalf(I))), palette(righthalf(bottomhalf(I))))))))), asobject), lefthalf(tophalf(I))))
"""

verify_a699fb00 = """
merge(apply(fork(paint, identity, chain(lbind(recolor, TWO), delta, rbind(ofcolor, leastcolor(I)))), vsplit(I, height(I))))
"""

verify_a740d043 = """
replace(subgrid(merge(fgpartition(I)), I), mostcolor(I), ZERO)
"""

verify_a78176bb = """
call(branch(positive(size(sfilter(objects(I, T, T, F), fork(equality, toindices, fork(connect, ulcorner, lrcorner))))), identity, hmirror), paint(cover(call(branch(positive(size(sfilter(objects(I, T, T, F), fork(equality, toindices, fork(connect, ulcorner, lrcorner))))), identity, hmirror), I), merge(sfilter(objects(call(branch(positive(size(sfilter(objects(I, T, T, F), fork(equality, toindices, fork(connect, ulcorner, lrcorner))))), identity, hmirror), I), T, F, T), compose(flip, fork(equality, toindices, fork(connect, ulcorner, lrcorner)))))), mapply(fork(recolor, compose(lbind(index, call(branch(positive(size(sfilter(objects(I, T, T, F), fork(equality, toindices, fork(connect, ulcorner, lrcorner))))), identity, hmirror), I)), fork(add, ulcorner, compose(rbind(rbind(branch, RIGHT), DOWN), fork(contained, urcorner, toindices)))), compose(fork(combine, rbind(shoot, UNITY), rbind(shoot, NEG_UNITY)), fork(add, compose(first, fork(rapply, chain(initset, rbind(rbind(branch, llcorner), urcorner), fork(contained, urcorner, toindices)), identity)), compose(rbind(rbind(branch, DOWN_LEFT), UP_RIGHT), fork(contained, urcorner, toindices))))), sfilter(objects(call(branch(positive(size(sfilter(objects(I, T, T, F), fork(equality, toindices, fork(connect, ulcorner, lrcorner))))), identity, hmirror), I), T, F, T), compose(flip, fork(equality, toindices, fork(connect, ulcorner, lrcorner)))))))
"""

verify_a79310a0 = """
fill(fill(I, mostcolor(I), merge(fgpartition(I))), TWO, shift(merge(fgpartition(I)), DOWN))
"""

verify_a85d4709 = """
apply(compose(rbind(repeat, width(I)), fork(add, fork(add, compose(rbind(multiply, TWO), compose(lbind(greater, divide(width(I), THREE)), compose(leftmost, rbind(ofcolor, leastcolor(I))))), compose(rbind(multiply, FOUR), fork(both, compose(lbind(greater, multiply(divide(width(I), THREE), TWO)), compose(leftmost, rbind(ofcolor, leastcolor(I)))), compose(flip, compose(lbind(greater, divide(width(I), THREE)), compose(leftmost, rbind(ofcolor, leastcolor(I)))))))), compose(rbind(multiply, THREE), compose(flip, fork(either, compose(lbind(greater, divide(width(I), THREE)), compose(leftmost, rbind(ofcolor, leastcolor(I)))), fork(both, compose(lbind(greater, multiply(divide(width(I), THREE), TWO)), compose(leftmost, rbind(ofcolor, leastcolor(I)))), compose(flip, compose(lbind(greater, divide(width(I), THREE)), compose(leftmost, rbind(ofcolor, leastcolor(I))))))))))), vsplit(I, height(I)))
"""

verify_a87f7484 = """
argmin(argmax(combine(apply(lbind(vsplit, I), interval(THREE, increment(halve(height(I))), ONE)), apply(lbind(hsplit, I), interval(THREE, increment(halve(width(I))), ONE))), fork(add, compose(lbind(multiply, multiply(TEN, TEN)), fork(add, fork(add, chain(compose(positive, size), lbind(sfilter, palette(I)), fork(matcher, compose(rbind(lbind(chain, size), compose(rbind(compose, palette), lbind(lbind, contained))), lbind(lbind, sfilter)), size)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(chain(size, dedupe, lbind(apply, compose(lbind(apply, toindices), partition))), TWO), fork(equality, size, compose(size, dedupe))))), size)), matcher(compose(lbind(apply, toindices), partition), mostcommon(apply(compose(lbind(apply, toindices), partition), argmax(combine(apply(lbind(vsplit, I), interval(THREE, increment(halve(height(I))), ONE)), apply(lbind(hsplit, I), interval(THREE, increment(halve(width(I))), ONE))), fork(add, compose(lbind(multiply, multiply(TEN, TEN)), fork(add, fork(add, chain(compose(positive, size), lbind(sfilter, palette(I)), fork(matcher, compose(rbind(lbind(chain, size), compose(rbind(compose, palette), lbind(lbind, contained))), lbind(lbind, sfilter)), size)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(chain(size, dedupe, lbind(apply, compose(lbind(apply, toindices), partition))), TWO), fork(equality, size, compose(size, dedupe))))), size))))))
"""

verify_a8c38be5 = """
paint(paint(paint(paint(paint(paint(paint(paint(canvas(index(I, increment(ulcorner(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, ulcorner, urcorner), fork(connect, ulcorner, llcorner))))))), astuple(add(add(height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, ulcorner, urcorner), fork(connect, ulcorner, llcorner))))), height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, llcorner, ulcorner), fork(connect, llcorner, lrcorner)))))), add(height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, ulcorner, llcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, urcorner, toindices)), compose(flip, fork(contained, lrcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, last), rightmost))), ONE))))), TWO)), add(add(width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, ulcorner, urcorner), fork(connect, ulcorner, llcorner))))), width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, urcorner, ulcorner), fork(connect, urcorner, lrcorner)))))), add(width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, ulcorner, urcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, lrcorner, toindices)), compose(flip, fork(contained, llcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, first), lowermost))), ONE))))), TWO)))), normalize(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, ulcorner, urcorner), fork(connect, ulcorner, llcorner)))))), shift(normalize(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, urcorner, ulcorner), fork(connect, urcorner, lrcorner))))), tojvec(subtract(add(add(width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, ulcorner, urcorner), fork(connect, ulcorner, llcorner))))), width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, urcorner, ulcorner), fork(connect, urcorner, lrcorner)))))), add(width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, ulcorner, urcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, lrcorner, toindices)), compose(flip, fork(contained, llcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, first), lowermost))), ONE))))), TWO)), width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, urcorner, ulcorner), fork(connect, urcorner, lrcorner))))))))), shift(normalize(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, llcorner, ulcorner), fork(connect, llcorner, lrcorner))))), toivec(subtract(add(add(height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, ulcorner, urcorner), fork(connect, ulcorner, llcorner))))), height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, llcorner, ulcorner), fork(connect, llcorner, lrcorner)))))), add(height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, ulcorner, llcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, urcorner, toindices)), compose(flip, fork(contained, lrcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, last), rightmost))), ONE))))), TWO)), height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, llcorner, ulcorner), fork(connect, llcorner, lrcorner))))))))), shift(normalize(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, lrcorner, llcorner), fork(connect, lrcorner, urcorner))))), astuple(subtract(add(add(height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, ulcorner, urcorner), fork(connect, ulcorner, llcorner))))), height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, llcorner, ulcorner), fork(connect, llcorner, lrcorner)))))), add(height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, ulcorner, llcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, urcorner, toindices)), compose(flip, fork(contained, lrcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, last), rightmost))), ONE))))), TWO)), height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, lrcorner, llcorner), fork(connect, lrcorner, urcorner)))))), subtract(add(add(width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, ulcorner, urcorner), fork(connect, ulcorner, llcorner))))), width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, urcorner, ulcorner), fork(connect, urcorner, lrcorner)))))), add(width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, ulcorner, urcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, lrcorner, toindices)), compose(flip, fork(contained, llcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, first), lowermost))), ONE))))), TWO)), width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, lrcorner, llcorner), fork(connect, lrcorner, urcorner))))))))), shift(normalize(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, ulcorner, llcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, urcorner, toindices)), compose(flip, fork(contained, lrcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, last), rightmost))), ONE))))), toivec(increment(height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, ulcorner, urcorner), fork(connect, ulcorner, llcorner))))))))), shift(normalize(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, ulcorner, urcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, lrcorner, toindices)), compose(flip, fork(contained, llcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, first), lowermost))), ONE))))), tojvec(increment(width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, ulcorner, urcorner), fork(connect, ulcorner, llcorner))))))))), shift(normalize(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, urcorner, lrcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, ulcorner, toindices)), compose(flip, fork(contained, llcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, last), leftmost))), ONE))))), astuple(increment(height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, urcorner, ulcorner), fork(connect, urcorner, lrcorner)))))), subtract(add(add(width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, ulcorner, urcorner), fork(connect, ulcorner, llcorner))))), width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, urcorner, ulcorner), fork(connect, urcorner, lrcorner)))))), add(width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, ulcorner, urcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, lrcorner, toindices)), compose(flip, fork(contained, llcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, first), lowermost))), ONE))))), TWO)), width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, urcorner, lrcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, ulcorner, toindices)), compose(flip, fork(contained, llcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, last), leftmost))), ONE))))))))), shift(normalize(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, llcorner, lrcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, urcorner, toindices)), compose(flip, fork(contained, ulcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, first), uppermost))), ONE))))), astuple(subtract(add(add(height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, ulcorner, urcorner), fork(connect, ulcorner, llcorner))))), height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, llcorner, ulcorner), fork(connect, llcorner, lrcorner)))))), add(height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, ulcorner, llcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, urcorner, toindices)), compose(flip, fork(contained, lrcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, last), rightmost))), ONE))))), TWO)), height(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(both, matcher(compose(size, fork(difference, fork(connect, llcorner, lrcorner), toindices)), ZERO), fork(both, fork(both, compose(flip, fork(contained, urcorner, toindices)), compose(flip, fork(contained, ulcorner, toindices))), matcher(compose(size, fork(sfilter, toindices, compose(lbind(matcher, first), uppermost))), ONE)))))), increment(width(argmax(sfilter(objects(I, T, F, F), chain(flip, rbind(contained, astuple(mostcolor(I), argmax(remove(mostcolor(I), palette(I)), lbind(colorcount, I)))), color)), fork(equality, toindices, fork(combine, fork(connect, llcorner, ulcorner), fork(connect, llcorner, lrcorner)))))))))
"""

verify_a8d7556c = """
fill(I, TWO, mapply(lbind(shift, upscale(recolor(ZERO, initset(ORIGIN)), TWO)), occurrences(I, upscale(recolor(ZERO, initset(ORIGIN)), TWO))))
"""

verify_a9f96cdd = """
paint(fill(I, mostcolor(I), ofcolor(I, leastcolor(I))), combine(combine(recolor(THREE, shift(ofcolor(I, leastcolor(I)), NEG_UNITY)), recolor(SEVEN, shift(ofcolor(I, leastcolor(I)), UNITY))), combine(recolor(EIGHT, shift(ofcolor(I, leastcolor(I)), DOWN_LEFT)), recolor(SIX, shift(ofcolor(I, leastcolor(I)), UP_RIGHT)))))
"""

verify_aabf363d = """
replace(replace(I, leastcolor(I), argmax(palette(I), compose(fork(multiply, height, width), lbind(ofcolor, I)))), other(remove(argmax(palette(I), compose(fork(multiply, height, width), lbind(ofcolor, I))), palette(I)), leastcolor(I)), leastcolor(I))
"""

verify_aba27056 = """
fill(fill(I, FOUR, delta(merge(fgpartition(I)))), FOUR, combine(mapply(rbind(shoot, branch(equality(uppermost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), uppermost(merge(fgpartition(I)))), UP, branch(equality(leftmost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), leftmost(merge(fgpartition(I)))), LEFT, branch(equality(lowermost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), lowermost(merge(fgpartition(I)))), DOWN, RIGHT)))), intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), combine(shoot(branch(equality(uppermost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), uppermost(merge(fgpartition(I)))), urcorner(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), branch(equality(leftmost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), leftmost(merge(fgpartition(I)))), ulcorner(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), branch(equality(lowermost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), lowermost(merge(fgpartition(I)))), llcorner(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), lrcorner(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I)))))))), branch(equality(uppermost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), uppermost(merge(fgpartition(I)))), UP_RIGHT, branch(equality(leftmost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), leftmost(merge(fgpartition(I)))), NEG_UNITY, branch(equality(lowermost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), lowermost(merge(fgpartition(I)))), DOWN_LEFT, UNITY)))), shoot(branch(equality(uppermost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), uppermost(merge(fgpartition(I)))), ulcorner(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), branch(equality(leftmost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), leftmost(merge(fgpartition(I)))), llcorner(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), branch(equality(lowermost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), lowermost(merge(fgpartition(I)))), lrcorner(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), urcorner(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I)))))))), branch(equality(uppermost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), uppermost(merge(fgpartition(I)))), NEG_UNITY, branch(equality(leftmost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), leftmost(merge(fgpartition(I)))), DOWN_LEFT, branch(equality(lowermost(intersection(delta(merge(fgpartition(I))), box(merge(fgpartition(I))))), lowermost(merge(fgpartition(I)))), UNITY, UP_RIGHT)))))))
"""

verify_ac0a08a4 = """
upscale(I, subtract(multiply(height(I), width(I)), colorcount(I, mostcolor(I))))
"""

verify_ae3edfdc = """
fill(fill(cover(I, combine(ofcolor(I, THREE), ofcolor(I, SEVEN))), SEVEN, apply(chain(lbind(add, center(ofcolor(I, ONE))), compose(invert, rbind(position, initset(center(ofcolor(I, ONE))))), initset), ofcolor(I, SEVEN))), THREE, apply(chain(lbind(add, center(ofcolor(I, TWO))), compose(invert, rbind(position, initset(center(ofcolor(I, TWO))))), initset), ofcolor(I, THREE)))
"""

verify_ae4f1146 = """
subgrid(argmax(objects(I, F, F, T), rbind(colorcount, ONE)), I)
"""

verify_aedd82e4 = """
fill(I, ONE, merge(sizefilter(sfilter(objects(hconcat(I, canvas(ZERO, shape(I))), F, F, T), compose(flip, matcher(color, ZERO))), ONE)))
"""

verify_af902bf9 = """
last(call(power(fork(astuple, fork(remove, compose(first, first), first), fork(paint, last, compose(rbind(mapply, remove(mostcolor(I), palette(I))), fork(compose, chain(lbind(lbind, mapply), lbind(lbind, shift), chain(lbind(recolor, TWO), backdrop, compose(inbox, chain(corners, asindices, chain(lbind(canvas, NEG_ONE), first, first))))), fork(compose, compose(lbind(lbind, occurrences), last), fork(compose, compose(lbind(lbind, combine), compose(lbind(recolor, mostcolor(I)), fork(difference, compose(asindices, chain(lbind(canvas, NEG_ONE), first, first)), chain(corners, asindices, chain(lbind(canvas, NEG_ONE), first, first))))), compose(lbind(rbind, recolor), chain(corners, asindices, chain(lbind(canvas, NEG_ONE), first, first))))))))), size(order(product(interval(THREE, SEVEN, ONE), interval(THREE, SEVEN, ONE)), fork(multiply, first, last)))), astuple(order(product(interval(THREE, SEVEN, ONE), interval(THREE, SEVEN, ONE)), fork(multiply, first, last)), I)))
"""

verify_b0c4d837 = """
vconcat(vconcat(last(extract(pair(interval(ZERO, THREE, ONE), hsplit(repeat(combine(repeat(color(argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), decrement(subtract(call(branch(equality(size(difference(combine(connect(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), connect(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), toindices(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), ZERO), height, width), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), call(branch(equality(size(difference(combine(connect(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), connect(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), toindices(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), ZERO), height, width), argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))))), repeat(color(argmax(partition(I), fork(multiply, height, width))), subtract(NINE, decrement(subtract(call(branch(equality(size(difference(combine(connect(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), connect(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), toindices(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), ZERO), height, width), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), call(branch(equality(size(difference(combine(connect(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), connect(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), toindices(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), ZERO), height, width), argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))))))), ONE), THREE)), matcher(first, ZERO))), vmirror(last(extract(pair(interval(ZERO, THREE, ONE), hsplit(repeat(combine(repeat(color(argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), decrement(subtract(call(branch(equality(size(difference(combine(connect(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), connect(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), toindices(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), ZERO), height, width), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), call(branch(equality(size(difference(combine(connect(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), connect(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), toindices(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), ZERO), height, width), argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))))), repeat(color(argmax(partition(I), fork(multiply, height, width))), subtract(NINE, decrement(subtract(call(branch(equality(size(difference(combine(connect(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), connect(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), toindices(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), ZERO), height, width), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), call(branch(equality(size(difference(combine(connect(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), connect(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), toindices(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), ZERO), height, width), argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))))))), ONE), THREE)), matcher(first, ONE))))), last(extract(pair(interval(ZERO, THREE, ONE), hsplit(repeat(combine(repeat(color(argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), decrement(subtract(call(branch(equality(size(difference(combine(connect(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), connect(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), toindices(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), ZERO), height, width), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), call(branch(equality(size(difference(combine(connect(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), connect(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), toindices(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), ZERO), height, width), argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))))), repeat(color(argmax(partition(I), fork(multiply, height, width))), subtract(NINE, decrement(subtract(call(branch(equality(size(difference(combine(connect(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), connect(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), toindices(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), ZERO), height, width), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), call(branch(equality(size(difference(combine(connect(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), connect(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), toindices(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))))), ZERO), height, width), argmin(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))))))), ONE), THREE)), matcher(first, TWO))))
"""

verify_b190f7f5 = """
paint(canvas(first(intersection(palette(argmin(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors)), palette(argmax(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors)))), multiply(shape(argmin(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors)), shape(argmin(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors)))), mapply(fork(recolor, first, chain(lbind(shift, difference(asindices(argmin(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors)), ofcolor(argmin(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors), first(intersection(palette(argmin(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors)), palette(argmax(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors))))))), lbind(multiply, shape(argmin(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors))), last)), difference(asobject(argmax(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors)), sfilter(asobject(argmax(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors)), matcher(first, first(intersection(palette(argmin(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors)), palette(argmax(argmax(astuple(vsplit(I, TWO), hsplit(I, TWO)), fork(add, fork(add, compose(lbind(contained, TWO), lbind(apply, numcolors)), matcher(chain(size, dedupe, lbind(apply, shape)), ONE)), fork(add, matcher(compose(size, fork(intersection, compose(palette, first), compose(palette, last))), ONE), chain(flip, lbind(contained, ONE), lbind(apply, compose(minimum, shape)))))), numcolors)))))))))
"""

verify_b1948b0a = """
replace(I, SIX, TWO)
"""

verify_b230c067 = """
fill(fill(I, TWO, argmin(objects(I, T, T, T), chain(size, lbind(sfilter, objects(I, T, T, T)), compose(lbind(matcher, normalize), normalize)))), ONE, merge(remove(argmin(objects(I, T, T, T), chain(size, lbind(sfilter, objects(I, T, T, T)), compose(lbind(matcher, normalize), normalize))), objects(I, T, T, T))))
"""

verify_b27ca6d3 = """
fill(I, THREE, mapply(outbox, sizefilter(objects(I, T, F, T), TWO)))
"""

verify_b2862040 = """
fill(I, EIGHT, mfilter(apply(toindices, difference(objects(I, T, F, F), colorfilter(objects(I, T, F, F), mostcolor(I)))), rbind(adjacent, mfilter(colorfilter(objects(I, T, F, F), mostcolor(I)), compose(flip, rbind(bordering, I))))))
"""

verify_b527c5c6 = """
paint(I, mapply(fork(combine, fork(recolor, leastcolor, fork(shoot, compose(center, fork(sfilter, identity, compose(lbind(matcher, first), leastcolor))), fork(subtract, compose(first, fork(difference, compose(dneighbors, compose(center, fork(sfilter, identity, compose(lbind(matcher, first), leastcolor)))), toindices)), compose(center, fork(sfilter, identity, compose(lbind(matcher, first), leastcolor)))))), fork(recolor, mostcolor, fork(difference, chain(backdrop, first, fork(rapply, compose(initset, compose(lbind(power, outbox), chain(decrement, size, fork(intersection, toindices, fork(shoot, compose(center, fork(sfilter, identity, compose(lbind(matcher, first), leastcolor))), compose(invert, fork(subtract, compose(first, fork(difference, compose(dneighbors, compose(center, fork(sfilter, identity, compose(lbind(matcher, first), leastcolor)))), toindices)), compose(center, fork(sfilter, identity, compose(lbind(matcher, first), leastcolor)))))))))), fork(shoot, compose(center, fork(sfilter, identity, compose(lbind(matcher, first), leastcolor))), fork(subtract, compose(first, fork(difference, compose(dneighbors, compose(center, fork(sfilter, identity, compose(lbind(matcher, first), leastcolor)))), toindices)), compose(center, fork(sfilter, identity, compose(lbind(matcher, first), leastcolor))))))), fork(shoot, compose(center, fork(sfilter, identity, compose(lbind(matcher, first), leastcolor))), fork(subtract, compose(first, fork(difference, compose(dneighbors, compose(center, fork(sfilter, identity, compose(lbind(matcher, first), leastcolor)))), toindices)), compose(center, fork(sfilter, identity, compose(lbind(matcher, first), leastcolor)))))))), objects(I, F, F, T)))
"""

verify_b548a754 = """
fill(fill(I, color(toobject(backdrop(inbox(extract(partition(I), fork(both, fork(equality, toindices, box), compose(flip, fork(equality, size, fork(multiply, height, width))))))), I)), backdrop(combine(argmin(remove(extract(partition(I), fork(both, fork(equality, toindices, box), compose(flip, fork(equality, size, fork(multiply, height, width))))), remove(toobject(backdrop(inbox(extract(partition(I), fork(both, fork(equality, toindices, box), compose(flip, fork(equality, size, fork(multiply, height, width))))))), I), partition(I))), size), extract(partition(I), fork(both, fork(equality, toindices, box), compose(flip, fork(equality, size, fork(multiply, height, width)))))))), color(extract(partition(I), fork(both, fork(equality, toindices, box), compose(flip, fork(equality, size, fork(multiply, height, width)))))), box(backdrop(combine(argmin(remove(extract(partition(I), fork(both, fork(equality, toindices, box), compose(flip, fork(equality, size, fork(multiply, height, width))))), remove(toobject(backdrop(inbox(extract(partition(I), fork(both, fork(equality, toindices, box), compose(flip, fork(equality, size, fork(multiply, height, width))))))), I), partition(I))), size), extract(partition(I), fork(both, fork(equality, toindices, box), compose(flip, fork(equality, size, fork(multiply, height, width)))))))))
"""

verify_b60334d2 = """
fill(fill(replace(I, leastcolor(I), mostcolor(I)), ONE, mapply(dneighbors, ofcolor(I, leastcolor(I)))), leastcolor(I), mapply(ineighbors, ofcolor(I, leastcolor(I))))
"""

verify_b6afb2da = """
fill(fill(fill(I, TWO, merge(sfilter(objects(I, T, F, F), compose(flip, matcher(color, color(extract(objects(I, T, F, F), compose(flip, fork(equality, toindices, backdrop))))))))), FOUR, mapply(box, sfilter(objects(I, T, F, F), compose(flip, matcher(color, color(extract(objects(I, T, F, F), compose(flip, fork(equality, toindices, backdrop))))))))), ONE, mapply(corners, sfilter(objects(I, T, F, F), compose(flip, matcher(color, color(extract(objects(I, T, F, F), compose(flip, fork(equality, toindices, backdrop)))))))))
"""

verify_b7249182 = """
call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), cover(fill(fill(paint(fill(fill(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), color(last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), color(first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))))), combine(shift(toobject(insert(add(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), DOWN), initset(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))))), fill(fill(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), color(last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), color(first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost)))))))), ZERO_BY_TWO), shift(toobject(insert(add(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), DOWN), initset(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))))), fill(fill(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), color(last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), color(first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost)))))))), astuple(ZERO, NEG_TWO)))), color(first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), shift(connect(ulcorner(combine(shift(toobject(insert(add(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), DOWN), initset(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))))), fill(fill(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), color(last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), color(first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost)))))))), ZERO_BY_TWO), shift(toobject(insert(add(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), DOWN), initset(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))))), fill(fill(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), color(last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), color(first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost)))))))), astuple(ZERO, NEG_TWO)))), urcorner(combine(shift(toobject(insert(add(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), DOWN), initset(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))))), fill(fill(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), color(last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), color(first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost)))))))), ZERO_BY_TWO), shift(toobject(insert(add(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), DOWN), initset(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))))), fill(fill(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), color(last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), color(first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost)))))))), astuple(ZERO, NEG_TWO))))), UP)), color(last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), shift(connect(llcorner(combine(shift(toobject(insert(add(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), DOWN), initset(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))))), fill(fill(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), color(last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), color(first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost)))))))), ZERO_BY_TWO), shift(toobject(insert(add(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), DOWN), initset(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))))), fill(fill(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), color(last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), color(first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost)))))))), astuple(ZERO, NEG_TWO)))), lrcorner(combine(shift(toobject(insert(add(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), DOWN), initset(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))))), fill(fill(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), color(last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), color(first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost)))))))), ZERO_BY_TWO), shift(toobject(insert(add(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), DOWN), initset(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))))), fill(fill(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), color(last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), color(first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost)))))))), astuple(ZERO, NEG_TWO))))), DOWN)), insert(add(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))))), DOWN), initset(centerofmass(connect(call(compose(first, toindices), first(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost))), call(compose(first, toindices), last(order(objects(call(branch(portrait(merge(objects(I, T, F, T))), identity, dmirror), I), T, F, T), uppermost)))))))))
"""

verify_b775ac94 = """
paint(I, mapply(fork(mapply, fork(lbind(fork, shift), compose(lbind(lbind(fork, recolor), first), fork(lbind(chain, first), compose(lbind(rbind, rapply), fork(sfilter, identity, compose(lbind(matcher, first), mostcolor))), compose(lbind(compose, initset), compose(lbind(lbind(chain, fork(compose, compose(rbind(rbind(branch, hmirror), identity), matcher(first, ZERO)), compose(rbind(rbind(branch, vmirror), identity), matcher(last, ZERO)))), lbind(extract, neighbors(ORIGIN))), chain(rbind(compose, compose(lbind(lbind, contained), last)), lbind(rbind, compose), fork(compose, chain(lbind(lbind, shift), backdrop, fork(sfilter, identity, compose(lbind(matcher, first), mostcolor))), chain(lbind(rbind, multiply), shape, fork(sfilter, identity, compose(lbind(matcher, first), mostcolor))))))))), fork(compose, compose(rbind(compose, lbind(extract, neighbors(ORIGIN))), chain(lbind(rbind, multiply), shape, fork(sfilter, identity, compose(lbind(matcher, first), mostcolor)))), chain(rbind(compose, compose(lbind(lbind, contained), last)), lbind(rbind, compose), fork(compose, chain(lbind(lbind, shift), backdrop, fork(sfilter, identity, compose(lbind(matcher, first), mostcolor))), chain(lbind(rbind, multiply), shape, fork(sfilter, identity, compose(lbind(matcher, first), mostcolor))))))), fork(difference, identity, fork(sfilter, identity, compose(lbind(matcher, first), mostcolor)))), objects(I, F, T, T)))
"""

verify_b782dc8a = """
fill(fill(I, argmin(remove(leastcolor(I), palette(I)), lbind(colorcount, I)), toindices(mfilter(colorfilter(objects(I, T, F, F), leastcolor(toobject(difference(mapply(neighbors, combine(ofcolor(I, leastcolor(I)), ofcolor(I, argmin(remove(leastcolor(I), palette(I)), lbind(colorcount, I))))), combine(ofcolor(I, leastcolor(I)), ofcolor(I, argmin(remove(leastcolor(I), palette(I)), lbind(colorcount, I))))), I))), lbind(adjacent, combine(ofcolor(I, leastcolor(I)), ofcolor(I, argmin(remove(leastcolor(I), palette(I)), lbind(colorcount, I)))))))), leastcolor(I), sfilter(toindices(mfilter(colorfilter(objects(I, T, F, F), leastcolor(toobject(difference(mapply(neighbors, combine(ofcolor(I, leastcolor(I)), ofcolor(I, argmin(remove(leastcolor(I), palette(I)), lbind(colorcount, I))))), combine(ofcolor(I, leastcolor(I)), ofcolor(I, argmin(remove(leastcolor(I), palette(I)), lbind(colorcount, I))))), I))), lbind(adjacent, combine(ofcolor(I, leastcolor(I)), ofcolor(I, argmin(remove(leastcolor(I), palette(I)), lbind(colorcount, I))))))), chain(even, rbind(manhattan, initset(first(ofcolor(I, leastcolor(I))))), initset)))
"""

verify_b8825c91 = """
apply(lbind(apply, maximum), papply(pair, vmirror(apply(lbind(apply, maximum), papply(pair, apply(lbind(apply, maximum), papply(pair, apply(lbind(apply, maximum), papply(pair, replace(I, FOUR, NEG_ONE), dmirror(replace(I, FOUR, NEG_ONE)))), cmirror(apply(lbind(apply, maximum), papply(pair, replace(I, FOUR, NEG_ONE), dmirror(replace(I, FOUR, NEG_ONE))))))), hmirror(apply(lbind(apply, maximum), papply(pair, apply(lbind(apply, maximum), papply(pair, replace(I, FOUR, NEG_ONE), dmirror(replace(I, FOUR, NEG_ONE)))), cmirror(apply(lbind(apply, maximum), papply(pair, replace(I, FOUR, NEG_ONE), dmirror(replace(I, FOUR, NEG_ONE))))))))))), apply(lbind(apply, maximum), papply(pair, apply(lbind(apply, maximum), papply(pair, apply(lbind(apply, maximum), papply(pair, replace(I, FOUR, NEG_ONE), dmirror(replace(I, FOUR, NEG_ONE)))), cmirror(apply(lbind(apply, maximum), papply(pair, replace(I, FOUR, NEG_ONE), dmirror(replace(I, FOUR, NEG_ONE))))))), hmirror(apply(lbind(apply, maximum), papply(pair, apply(lbind(apply, maximum), papply(pair, replace(I, FOUR, NEG_ONE), dmirror(replace(I, FOUR, NEG_ONE)))), cmirror(apply(lbind(apply, maximum), papply(pair, replace(I, FOUR, NEG_ONE), dmirror(replace(I, FOUR, NEG_ONE))))))))))))
"""

verify_b8cdaf2b = """
call(extract(combine(astuple(dmirror, cmirror), astuple(hmirror, identity)), fork(equality, chain(lowermost, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), chain(decrement, height, chain(first, rbind(rapply, I), initset)))), underfill(call(extract(combine(astuple(dmirror, cmirror), astuple(hmirror, identity)), fork(equality, chain(lowermost, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), chain(decrement, height, chain(first, rbind(rapply, I), initset)))), I), leastcolor(I), combine(shoot(ulcorner(shift(ofcolor(call(extract(combine(astuple(dmirror, cmirror), astuple(hmirror, identity)), fork(equality, chain(lowermost, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), chain(decrement, height, chain(first, rbind(rapply, I), initset)))), I), leastcolor(I)), UP)), NEG_UNITY), shoot(urcorner(shift(ofcolor(call(extract(combine(astuple(dmirror, cmirror), astuple(hmirror, identity)), fork(equality, chain(lowermost, rbind(ofcolor, leastcolor(I)), chain(first, rbind(rapply, I), initset)), chain(decrement, height, chain(first, rbind(rapply, I), initset)))), I), leastcolor(I)), UP)), UP_RIGHT))))
"""

verify_b91ae062 = """
upscale(I, decrement(numcolors(I)))
"""

verify_b94a9452 = """
switch(subgrid(merge(remove(argmax(partition(I), fork(multiply, height, width)), partition(I))), I), mostcolor(subgrid(merge(remove(argmax(partition(I), fork(multiply, height, width)), partition(I))), I)), leastcolor(subgrid(merge(remove(argmax(partition(I), fork(multiply, height, width)), partition(I))), I)))
"""

verify_b9b7f026 = """
canvas(color(extract(fgpartition(I), compose(flip, fork(equality, toindices, backdrop)))), UNITY)
"""

verify_ba26e723 = """
fill(I, SIX, sfilter(toindices(sfilter(asobject(I), compose(flip, matcher(first, ZERO)))), compose(fork(equality, identity, compose(rbind(multiply, THREE), rbind(divide, THREE))), last)))
"""

verify_ba97ae07 = """
fill(I, mostcommon(apply(color, totuple(objects(I, T, F, T)))), backdrop(ofcolor(I, mostcommon(apply(color, totuple(objects(I, T, F, T)))))))
"""

verify_bb43febb = """
fill(I, TWO, mapply(compose(backdrop, inbox), sfilter(objects(I, T, F, F), fork(both, fork(equality, toindices, backdrop), chain(rbind(greater, ONE), minimum, shape)))))
"""

verify_bbc9ae5d = """
paint(canvas(index(I, ORIGIN), astuple(halve(width(I)), width(I))), mapply(fork(recolor, first, compose(rbind(shoot, UNITY), last)), asobject(I)))
"""

verify_bc1d5164 = """
fill(canvas(mostcolor(merge(frontiers(I))), astuple(increment(halve(height(I))), halve(width(I)))), other(palette(I), mostcolor(merge(frontiers(I)))), combine(combine(call(chain(toindices, rbind(sfilter, matcher(first, other(palette(I), mostcolor(merge(frontiers(I)))))), normalize), toobject(asindices(canvas(mostcolor(merge(frontiers(I))), astuple(increment(halve(height(I))), halve(width(I))))), I)), call(chain(toindices, rbind(sfilter, matcher(first, other(palette(I), mostcolor(merge(frontiers(I)))))), normalize), toobject(shift(asindices(canvas(mostcolor(merge(frontiers(I))), astuple(increment(halve(height(I))), halve(width(I))))), tojvec(increment(halve(width(I))))), I))), combine(call(chain(toindices, rbind(sfilter, matcher(first, other(palette(I), mostcolor(merge(frontiers(I)))))), normalize), toobject(shift(asindices(canvas(mostcolor(merge(frontiers(I))), astuple(increment(halve(height(I))), halve(width(I))))), toivec(decrement(increment(halve(height(I)))))), I)), call(chain(toindices, rbind(sfilter, matcher(first, other(palette(I), mostcolor(merge(frontiers(I)))))), normalize), toobject(shift(asindices(canvas(mostcolor(merge(frontiers(I))), astuple(increment(halve(height(I))), halve(width(I))))), astuple(decrement(increment(halve(height(I)))), increment(halve(width(I))))), I)))))
"""

verify_bd4472b8 = """
call(last(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(compose(positive, size), rbind(sfilter, hline), frontiers), fork(greater, chain(size, dedupe, first), chain(size, dedupe, last))), chain(first, rbind(rapply, I), compose(initset, first))))), paint(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(compose(positive, size), rbind(sfilter, hline), frontiers), fork(greater, chain(size, dedupe, first), chain(size, dedupe, last))), chain(first, rbind(rapply, I), compose(initset, first))))), I), shift(mapply(lbind(shift, asobject(hupscale(dmirror(repeat(first(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(compose(positive, size), rbind(sfilter, hline), frontiers), fork(greater, chain(size, dedupe, first), chain(size, dedupe, last))), chain(first, rbind(rapply, I), compose(initset, first))))), I)), ONE)), width(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(compose(positive, size), rbind(sfilter, hline), frontiers), fork(greater, chain(size, dedupe, first), chain(size, dedupe, last))), chain(first, rbind(rapply, I), compose(initset, first))))), I))))), apply(toivec, interval(ZERO, height(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(compose(positive, size), rbind(sfilter, hline), frontiers), fork(greater, chain(size, dedupe, first), chain(size, dedupe, last))), chain(first, rbind(rapply, I), compose(initset, first))))), I)), height(asobject(hupscale(dmirror(repeat(first(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(compose(positive, size), rbind(sfilter, hline), frontiers), fork(greater, chain(size, dedupe, first), chain(size, dedupe, last))), chain(first, rbind(rapply, I), compose(initset, first))))), I)), ONE)), width(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, chain(compose(positive, size), rbind(sfilter, hline), frontiers), fork(greater, chain(size, dedupe, first), chain(size, dedupe, last))), chain(first, rbind(rapply, I), compose(initset, first))))), I)))))))), TWO_BY_ZERO)))
"""

verify_bda2d7a6 = """
paint(I, mpapply(recolor, apply(color, branch(equality(color(first(order(objects(I, T, F, F), compose(maximum, shape)))), color(last(order(objects(I, T, F, F), compose(maximum, shape))))), combine(repeat(combine(first(order(objects(I, T, F, F), compose(maximum, shape))), last(order(objects(I, T, F, F), compose(maximum, shape)))), ONE), remove(last(order(objects(I, T, F, F), compose(maximum, shape))), remove(first(order(objects(I, T, F, F), compose(maximum, shape))), order(objects(I, T, F, F), compose(maximum, shape))))), order(objects(I, T, F, F), compose(maximum, shape)))), combine(repeat(last(branch(equality(color(first(order(objects(I, T, F, F), compose(maximum, shape)))), color(last(order(objects(I, T, F, F), compose(maximum, shape))))), combine(repeat(combine(first(order(objects(I, T, F, F), compose(maximum, shape))), last(order(objects(I, T, F, F), compose(maximum, shape)))), ONE), remove(last(order(objects(I, T, F, F), compose(maximum, shape))), remove(first(order(objects(I, T, F, F), compose(maximum, shape))), order(objects(I, T, F, F), compose(maximum, shape))))), order(objects(I, T, F, F), compose(maximum, shape)))), ONE), remove(last(branch(equality(color(first(order(objects(I, T, F, F), compose(maximum, shape)))), color(last(order(objects(I, T, F, F), compose(maximum, shape))))), combine(repeat(combine(first(order(objects(I, T, F, F), compose(maximum, shape))), last(order(objects(I, T, F, F), compose(maximum, shape)))), ONE), remove(last(order(objects(I, T, F, F), compose(maximum, shape))), remove(first(order(objects(I, T, F, F), compose(maximum, shape))), order(objects(I, T, F, F), compose(maximum, shape))))), order(objects(I, T, F, F), compose(maximum, shape)))), branch(equality(color(first(order(objects(I, T, F, F), compose(maximum, shape)))), color(last(order(objects(I, T, F, F), compose(maximum, shape))))), combine(repeat(combine(first(order(objects(I, T, F, F), compose(maximum, shape))), last(order(objects(I, T, F, F), compose(maximum, shape)))), ONE), remove(last(order(objects(I, T, F, F), compose(maximum, shape))), remove(first(order(objects(I, T, F, F), compose(maximum, shape))), order(objects(I, T, F, F), compose(maximum, shape))))), order(objects(I, T, F, F), compose(maximum, shape)))))))
"""

verify_bdad9b1f = """
fill(paint(I, combine(mapply(fork(recolor, color, compose(hfrontier, center)), sfilter(objects(I, T, F, T), hline)), mapply(fork(recolor, color, compose(vfrontier, center)), sfilter(objects(I, T, F, T), vline)))), FOUR, intersection(toindices(mapply(fork(recolor, color, compose(hfrontier, center)), sfilter(objects(I, T, F, T), hline))), toindices(mapply(fork(recolor, color, compose(vfrontier, center)), sfilter(objects(I, T, F, T), vline)))))
"""

verify_be94b721 = """
paint(canvas(color(argmax(objects(I, T, F, F), size)), shape(argmax(remove(argmax(objects(I, T, F, F), size), objects(I, T, F, F)), size))), normalize(argmax(remove(argmax(objects(I, T, F, F), size), objects(I, T, F, F)), size)))
"""

verify_beb8660c = """
call(last(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), matcher(chain(lowermost, rbind(ofcolor, EIGHT), chain(first, rbind(rapply, I), compose(initset, first))), ZERO))), paint(canvas(argmax(palette(I), chain(size, lbind(apply, first), lbind(ofcolor, rot180(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), matcher(chain(lowermost, rbind(ofcolor, EIGHT), chain(first, rbind(rapply, I), compose(initset, first))), ZERO))), I))))), shape(rot180(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), matcher(chain(lowermost, rbind(ofcolor, EIGHT), chain(first, rbind(rapply, I), compose(initset, first))), ZERO))), I)))), mpapply(shift, apply(normalize, order(sfilter(partition(rot180(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), matcher(chain(lowermost, rbind(ofcolor, EIGHT), chain(first, rbind(rapply, I), compose(initset, first))), ZERO))), I))), compose(flip, matcher(color, argmax(palette(I), chain(size, lbind(apply, first), lbind(ofcolor, rot180(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), matcher(chain(lowermost, rbind(ofcolor, EIGHT), chain(first, rbind(rapply, I), compose(initset, first))), ZERO))), I)))))))), compose(invert, size))), apply(toivec, interval(ZERO, size(apply(normalize, order(sfilter(partition(rot180(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), matcher(chain(lowermost, rbind(ofcolor, EIGHT), chain(first, rbind(rapply, I), compose(initset, first))), ZERO))), I))), compose(flip, matcher(color, argmax(palette(I), chain(size, lbind(apply, first), lbind(ofcolor, rot180(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), matcher(chain(lowermost, rbind(ofcolor, EIGHT), chain(first, rbind(rapply, I), compose(initset, first))), ZERO))), I)))))))), compose(invert, size)))), ONE)))))
"""

verify_c0f76784 = """
fill(fill(fill(I, SIX, merge(sizefilter(colorfilter(objects(I, T, F, F), mostcolor(I)), ONE))), SEVEN, merge(sizefilter(colorfilter(objects(I, T, F, F), mostcolor(I)), FOUR))), EIGHT, merge(sizefilter(colorfilter(objects(I, T, F, F), mostcolor(I)), NINE)))
"""

verify_c1d99e64 = """
fill(I, TWO, merge(frontiers(I)))
"""

verify_c3e719e8 = """
paint(canvas(ZERO, multiply(shape(I), shape(I))), mapply(lbind(shift, asobject(I)), apply(lbind(multiply, shape(I)), ofcolor(I, mostcolor(I)))))
"""

verify_c3f564a4 = """
paint(I, mapply(lbind(shift, sfilter(asobject(I), compose(flip, matcher(first, argmin(palette(I), rbind(contained, combine(mapply(palette, sfilter(apply(asobject, vsplit(I, height(I))), matcher(hperiod, minimum(apply(hperiod, apply(asobject, vsplit(I, height(I)))))))), mapply(palette, sfilter(apply(asobject, hsplit(I, width(I))), matcher(vperiod, minimum(apply(vperiod, apply(asobject, hsplit(I, width(I))))))))))))))), apply(lbind(multiply, astuple(minimum(apply(vperiod, apply(asobject, hsplit(I, width(I))))), minimum(apply(hperiod, apply(asobject, vsplit(I, height(I))))))), product(interval(invert(increment(divide(height(I), minimum(apply(vperiod, apply(asobject, hsplit(I, width(I)))))))), increment(divide(height(I), minimum(apply(vperiod, apply(asobject, hsplit(I, width(I))))))), ONE), interval(invert(increment(divide(width(I), minimum(apply(hperiod, apply(asobject, vsplit(I, height(I)))))))), increment(divide(width(I), minimum(apply(hperiod, apply(asobject, vsplit(I, height(I))))))), ONE)))))
"""

verify_c444b776 = """
paint(I, mapply(lbind(shift, normalize(argmax(objects(hconcat(I, canvas(leastcolor(merge(frontiers(I))), shape(I))), F, F, T), numcolors))), apply(ulcorner, objects(hconcat(I, canvas(leastcolor(merge(frontiers(I))), shape(I))), F, F, T))))
"""

verify_c59eb873 = """
upscale(I, TWO)
"""

verify_c8cbb738 = """
paint(canvas(mostcolor(I), astuple(valmax(fgpartition(I), height), valmax(fgpartition(I), width))), mapply(fork(shift, identity, compose(lbind(argmax, asindices(canvas(mostcolor(I), astuple(valmax(fgpartition(I), height), valmax(fgpartition(I), width))))), fork(lbind(fork, subtract), compose(lbind(lbind(chain, chain(lbind(multiply, double(maximum(astuple(valmax(fgpartition(I), height), valmax(fgpartition(I), width))))), size, lbind(intersection, box(asindices(canvas(mostcolor(I), astuple(valmax(fgpartition(I), height), valmax(fgpartition(I), width)))))))), toindices), lbind(lbind, shift)), compose(lbind(lbind(chain, lbind(manhattan, initset(center(asindices(canvas(mostcolor(I), astuple(valmax(fgpartition(I), height), valmax(fgpartition(I), width)))))))), compose(initset, center)), lbind(lbind, shift))))), apply(normalize, fgpartition(I))))
"""

verify_c8f0f002 = """
replace(I, SEVEN, FIVE)
"""

verify_c909285e = """
subgrid(argmin(sfilter(sfilter(partition(I), chain(flip, lbind(contained, ONE), shape)), fork(equality, toindices, box)), fork(multiply, height, width)), I)
"""

verify_c9e6f938 = """
hconcat(I, vmirror(I))
"""

verify_c9f8e694 = """
call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, vmirror)), chain(chain(size, dedupe, compose(first, dmirror)), compose(first, rbind(rapply, I)), initset)), fill(hupscale(crop(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, vmirror)), chain(chain(size, dedupe, compose(first, dmirror)), compose(first, rbind(rapply, I)), initset)), I), ORIGIN, astuple(height(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, vmirror)), chain(chain(size, dedupe, compose(first, dmirror)), compose(first, rbind(rapply, I)), initset)), I)), ONE)), width(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, vmirror)), chain(chain(size, dedupe, compose(first, dmirror)), compose(first, rbind(rapply, I)), initset)), I))), ZERO, ofcolor(call(argmax(combine(astuple(identity, dmirror), astuple(cmirror, vmirror)), chain(chain(size, dedupe, compose(first, dmirror)), compose(first, rbind(rapply, I)), initset)), I), ZERO)))
"""

verify_caa06a1f = """
paint(I, shift(mapply(lbind(shift, sfilter(asobject(I), compose(flip, matcher(first, mostcolor(toobject(box(asindices(I)), I)))))), product(apply(rbind(multiply, vperiod(sfilter(asobject(I), compose(flip, matcher(first, mostcolor(toobject(box(asindices(I)), I))))))), interval(invert(add(subtract(height(I), height(sfilter(asobject(I), compose(flip, matcher(first, mostcolor(toobject(box(asindices(I)), I))))))), TWO)), add(subtract(height(I), height(sfilter(asobject(I), compose(flip, matcher(first, mostcolor(toobject(box(asindices(I)), I))))))), TWO), ONE)), apply(rbind(multiply, hperiod(sfilter(asobject(I), compose(flip, matcher(first, mostcolor(toobject(box(asindices(I)), I))))))), interval(invert(add(subtract(width(I), width(sfilter(asobject(I), compose(flip, matcher(first, mostcolor(toobject(box(asindices(I)), I))))))), TWO)), add(subtract(width(I), width(sfilter(asobject(I), compose(flip, matcher(first, mostcolor(toobject(box(asindices(I)), I))))))), TWO), ONE)))), add(add(multiply(flip(equality(index(I, ORIGIN), mostcolor(toobject(box(asindices(I)), I)))), LEFT), multiply(flip(equality(index(I, urcorner(asindices(I))), mostcolor(toobject(box(asindices(I)), I)))), UP)), add(multiply(flip(equality(index(I, lrcorner(asindices(I))), mostcolor(toobject(box(asindices(I)), I)))), RIGHT), multiply(flip(equality(index(I, llcorner(asindices(I))), mostcolor(toobject(box(asindices(I)), I)))), DOWN)))))
"""

verify_cbded52d = """
paint(I, mapply(fork(recolor, identity, compose(lbind(mapply, fork(sfilter, identity, fork(lbind(fork, both), chain(rbind(compose, first), lbind(compose, fork(equality, identity, compose(rbind(multiply, divide(increment(height(I)), increment(size(sfilter(frontiers(I), hline))))), rbind(divide, divide(increment(height(I)), increment(size(sfilter(frontiers(I), hline)))))))), compose(lbind(rbind, subtract), uppermost)), chain(rbind(compose, last), lbind(compose, fork(equality, identity, compose(rbind(multiply, divide(increment(width(I)), increment(size(sfilter(frontiers(I), vline))))), rbind(divide, divide(increment(width(I)), increment(size(sfilter(frontiers(I), vline)))))))), compose(lbind(rbind, subtract), leftmost))))), chain(rbind(sfilter, fork(either, vline, hline)), lbind(apply, fork(connect, first, last)), fork(product, lbind(ofcolor, I), lbind(ofcolor, I))))), remove(argmax(remove(color(merge(frontiers(I))), palette(I)), lbind(colorcount, I)), remove(color(merge(frontiers(I))), palette(I)))))
"""

verify_cce03e0d = """
paint(canvas(ZERO, multiply(shape(I), shape(I))), mapply(lbind(shift, asobject(I)), apply(rbind(multiply, shape(I)), ofcolor(I, TWO))))
"""

verify_cdecee7f = """
vconcat(vconcat(crop(merge(hsplit(hconcat(dmirror(merge(apply(rbind(canvas, UNITY), apply(color, order(apply(initset, sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I))))), leftmost))))), canvas(mostcolor(I), astuple(ONE, subtract(NINE, size(apply(initset, sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I)))))))))), THREE)), ORIGIN, astuple(ONE, THREE)), vmirror(crop(merge(hsplit(hconcat(dmirror(merge(apply(rbind(canvas, UNITY), apply(color, order(apply(initset, sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I))))), leftmost))))), canvas(mostcolor(I), astuple(ONE, subtract(NINE, size(apply(initset, sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I)))))))))), THREE)), DOWN, astuple(ONE, THREE)))), crop(merge(hsplit(hconcat(dmirror(merge(apply(rbind(canvas, UNITY), apply(color, order(apply(initset, sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I))))), leftmost))))), canvas(mostcolor(I), astuple(ONE, subtract(NINE, size(apply(initset, sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I)))))))))), THREE)), TWO_BY_ZERO, astuple(ONE, THREE)))
"""

verify_ce22a75a = """
fill(I, ONE, mapply(backdrop, apply(outbox, apply(initset, ofcolor(I, leastcolor(I))))))
"""

verify_ce4f8723 = """
fill(canvas(first(intersection(palette(call(branch(positive(size(sfilter(frontiers(I), hline))), tophalf, lefthalf), I)), palette(call(branch(positive(size(sfilter(frontiers(I), hline))), bottomhalf, righthalf), I)))), shape(call(branch(positive(size(sfilter(frontiers(I), hline))), tophalf, lefthalf), I))), THREE, combine(ofcolor(call(branch(positive(size(sfilter(frontiers(I), hline))), tophalf, lefthalf), I), other(palette(call(branch(positive(size(sfilter(frontiers(I), hline))), tophalf, lefthalf), I)), first(intersection(palette(call(branch(positive(size(sfilter(frontiers(I), hline))), tophalf, lefthalf), I)), palette(call(branch(positive(size(sfilter(frontiers(I), hline))), bottomhalf, righthalf), I)))))), ofcolor(call(branch(positive(size(sfilter(frontiers(I), hline))), bottomhalf, righthalf), I), other(palette(call(branch(positive(size(sfilter(frontiers(I), hline))), bottomhalf, righthalf), I)), first(intersection(palette(call(branch(positive(size(sfilter(frontiers(I), hline))), tophalf, lefthalf), I)), palette(call(branch(positive(size(sfilter(frontiers(I), hline))), bottomhalf, righthalf), I))))))))
"""

verify_ce602527 = """
branch(positive(size(occurrences(upscale(paint(canvas(mostcolor(I), shape(first(totuple(remove(extract(fgpartition(I), rbind(bordering, I)), fgpartition(I)))))), normalize(first(totuple(remove(extract(fgpartition(I), rbind(bordering, I)), fgpartition(I)))))), TWO), asobject(replace(paint(canvas(mostcolor(I), shape(extract(fgpartition(I), rbind(bordering, I)))), normalize(extract(fgpartition(I), rbind(bordering, I)))), color(extract(fgpartition(I), rbind(bordering, I))), color(first(totuple(remove(extract(fgpartition(I), rbind(bordering, I)), fgpartition(I)))))))))), downscale(upscale(paint(canvas(mostcolor(I), shape(first(totuple(remove(extract(fgpartition(I), rbind(bordering, I)), fgpartition(I)))))), normalize(first(totuple(remove(extract(fgpartition(I), rbind(bordering, I)), fgpartition(I)))))), TWO), TWO), downscale(upscale(paint(canvas(mostcolor(I), shape(last(totuple(remove(extract(fgpartition(I), rbind(bordering, I)), fgpartition(I)))))), normalize(last(totuple(remove(extract(fgpartition(I), rbind(bordering, I)), fgpartition(I)))))), TWO), TWO))
"""

verify_ce9e57f2 = """
fill(I, EIGHT, mapply(fork(sfilter, toindices, fork(compose, chain(lbind(lbind, greater), halve, size), compose(chain(rbind(compose, initset), lbind(rbind, manhattan), initset), compose(rbind(extract, compose(lbind(adjacent, outbox(asindices(I))), initset)), toindices)))), objects(I, T, F, T)))
"""

verify_cf98881b = """
fill(fill(fill(canvas(first(intersection(intersection(palette(crop(I, ORIGIN, astuple(height(I), decrement(divide(increment(width(I)), THREE))))), palette(crop(I, tojvec(add(decrement(divide(increment(width(I)), THREE)), ONE)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))))), palette(crop(I, tojvec(add(double(decrement(divide(increment(width(I)), THREE))), TWO)), astuple(height(I), decrement(divide(increment(width(I)), THREE))))))), astuple(height(I), decrement(divide(increment(width(I)), THREE)))), other(palette(crop(I, tojvec(add(double(decrement(divide(increment(width(I)), THREE))), TWO)), astuple(height(I), decrement(divide(increment(width(I)), THREE))))), first(intersection(intersection(palette(crop(I, ORIGIN, astuple(height(I), decrement(divide(increment(width(I)), THREE))))), palette(crop(I, tojvec(add(decrement(divide(increment(width(I)), THREE)), ONE)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))))), palette(crop(I, tojvec(add(double(decrement(divide(increment(width(I)), THREE))), TWO)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))))))), ofcolor(crop(I, tojvec(add(double(decrement(divide(increment(width(I)), THREE))), TWO)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))), other(palette(crop(I, tojvec(add(double(decrement(divide(increment(width(I)), THREE))), TWO)), astuple(height(I), decrement(divide(increment(width(I)), THREE))))), first(intersection(intersection(palette(crop(I, ORIGIN, astuple(height(I), decrement(divide(increment(width(I)), THREE))))), palette(crop(I, tojvec(add(decrement(divide(increment(width(I)), THREE)), ONE)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))))), palette(crop(I, tojvec(add(double(decrement(divide(increment(width(I)), THREE))), TWO)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))))))))), other(palette(crop(I, tojvec(add(decrement(divide(increment(width(I)), THREE)), ONE)), astuple(height(I), decrement(divide(increment(width(I)), THREE))))), first(intersection(intersection(palette(crop(I, ORIGIN, astuple(height(I), decrement(divide(increment(width(I)), THREE))))), palette(crop(I, tojvec(add(decrement(divide(increment(width(I)), THREE)), ONE)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))))), palette(crop(I, tojvec(add(double(decrement(divide(increment(width(I)), THREE))), TWO)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))))))), ofcolor(crop(I, tojvec(add(decrement(divide(increment(width(I)), THREE)), ONE)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))), other(palette(crop(I, tojvec(add(decrement(divide(increment(width(I)), THREE)), ONE)), astuple(height(I), decrement(divide(increment(width(I)), THREE))))), first(intersection(intersection(palette(crop(I, ORIGIN, astuple(height(I), decrement(divide(increment(width(I)), THREE))))), palette(crop(I, tojvec(add(decrement(divide(increment(width(I)), THREE)), ONE)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))))), palette(crop(I, tojvec(add(double(decrement(divide(increment(width(I)), THREE))), TWO)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))))))))), other(palette(crop(I, ORIGIN, astuple(height(I), decrement(divide(increment(width(I)), THREE))))), first(intersection(intersection(palette(crop(I, ORIGIN, astuple(height(I), decrement(divide(increment(width(I)), THREE))))), palette(crop(I, tojvec(add(decrement(divide(increment(width(I)), THREE)), ONE)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))))), palette(crop(I, tojvec(add(double(decrement(divide(increment(width(I)), THREE))), TWO)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))))))), ofcolor(crop(I, ORIGIN, astuple(height(I), decrement(divide(increment(width(I)), THREE)))), other(palette(crop(I, ORIGIN, astuple(height(I), decrement(divide(increment(width(I)), THREE))))), first(intersection(intersection(palette(crop(I, ORIGIN, astuple(height(I), decrement(divide(increment(width(I)), THREE))))), palette(crop(I, tojvec(add(decrement(divide(increment(width(I)), THREE)), ONE)), astuple(height(I), decrement(divide(increment(width(I)), THREE)))))), palette(crop(I, tojvec(add(double(decrement(divide(increment(width(I)), THREE))), TWO)), astuple(height(I), decrement(divide(increment(width(I)), THREE))))))))))
"""

verify_d037b0a7 = """
paint(I, mapply(fork(recolor, first, compose(rbind(shoot, DOWN), last)), merge(fgpartition(I))))
"""

verify_d06dbe63 = """
fill(fill(I, FIVE, mapply(compose(compose(rbind(ofcolor, FIVE), compose(rot180, fork(paint, compose(rot180, fork(paint, identity, compose(lbind(recolor, FIVE), chain(rbind(mapply, apply(lbind(multiply, astuple(NEG_TWO, TWO)), interval(ZERO, double(TEN), ONE))), lbind(lbind, shift), compose(lbind(shift, combine(connect(ORIGIN, DOWN), connect(ORIGIN, ZERO_BY_TWO))), chain(rbind(subtract, TWO_BY_ZERO), center, fork(ofcolor, identity, leastcolor))))))), chain(lbind(recolor, FIVE), rbind(shift, toivec(NEG_TWO)), fork(shift, chain(rbind(mapply, apply(lbind(multiply, astuple(NEG_TWO, TWO)), interval(ZERO, double(TEN), ONE))), lbind(lbind, shift), compose(lbind(shift, combine(connect(ORIGIN, DOWN), connect(ORIGIN, ZERO_BY_TWO))), chain(rbind(subtract, TWO_BY_ZERO), center, fork(ofcolor, identity, leastcolor)))), fork(subtract, compose(center, fork(ofcolor, compose(rot180, fork(paint, identity, compose(lbind(recolor, FIVE), chain(rbind(mapply, apply(lbind(multiply, astuple(NEG_TWO, TWO)), interval(ZERO, double(TEN), ONE))), lbind(lbind, shift), compose(lbind(shift, combine(connect(ORIGIN, DOWN), connect(ORIGIN, ZERO_BY_TWO))), chain(rbind(subtract, TWO_BY_ZERO), center, fork(ofcolor, identity, leastcolor))))))), leastcolor)), chain(rbind(subtract, TWO_BY_ZERO), center, fork(ofcolor, identity, leastcolor)))))))), chain(lbind(paint, canvas(mostcolor(I), shape(I))), lbind(recolor, leastcolor(I)), initset)), ofcolor(I, leastcolor(I)))), leastcolor(I), ofcolor(I, leastcolor(I)))
"""

verify_d07ae81c = """
fill(fill(I, first(totuple(sfilter(palette(I), matcher(compose(size, fork(intersection, lbind(ofcolor, I), compose(lbind(mapply, neighbors), lbind(ofcolor, I)))), ZERO)))), intersection(ofcolor(I, mostcolor(toobject(mapply(neighbors, ofcolor(I, first(totuple(sfilter(palette(I), matcher(compose(size, fork(intersection, lbind(ofcolor, I), compose(lbind(mapply, neighbors), lbind(ofcolor, I)))), ZERO)))))), I))), mapply(fork(combine, fork(combine, rbind(shoot, UNITY), rbind(shoot, NEG_UNITY)), fork(combine, rbind(shoot, UP_RIGHT), rbind(shoot, DOWN_LEFT))), combine(ofcolor(I, last(totuple(sfilter(palette(I), matcher(compose(size, fork(intersection, lbind(ofcolor, I), compose(lbind(mapply, neighbors), lbind(ofcolor, I)))), ZERO))))), ofcolor(I, first(totuple(sfilter(palette(I), matcher(compose(size, fork(intersection, lbind(ofcolor, I), compose(lbind(mapply, neighbors), lbind(ofcolor, I)))), ZERO))))))))), last(totuple(sfilter(palette(I), matcher(compose(size, fork(intersection, lbind(ofcolor, I), compose(lbind(mapply, neighbors), lbind(ofcolor, I)))), ZERO)))), intersection(ofcolor(I, mostcolor(toobject(mapply(neighbors, ofcolor(I, last(totuple(sfilter(palette(I), matcher(compose(size, fork(intersection, lbind(ofcolor, I), compose(lbind(mapply, neighbors), lbind(ofcolor, I)))), ZERO)))))), I))), mapply(fork(combine, fork(combine, rbind(shoot, UNITY), rbind(shoot, NEG_UNITY)), fork(combine, rbind(shoot, UP_RIGHT), rbind(shoot, DOWN_LEFT))), combine(ofcolor(I, last(totuple(sfilter(palette(I), matcher(compose(size, fork(intersection, lbind(ofcolor, I), compose(lbind(mapply, neighbors), lbind(ofcolor, I)))), ZERO))))), ofcolor(I, first(totuple(sfilter(palette(I), matcher(compose(size, fork(intersection, lbind(ofcolor, I), compose(lbind(mapply, neighbors), lbind(ofcolor, I)))), ZERO)))))))))
"""

verify_d0f5fe59 = """
fill(canvas(mostcolor(I), astuple(size(objects(I, T, F, T)), size(objects(I, T, F, T)))), leastcolor(I), shoot(ORIGIN, UNITY))
"""

verify_d10ecb37 = """
crop(I, ORIGIN, TWO_BY_TWO)
"""

verify_d13f3404 = """
paint(canvas(mostcolor(I), double(shape(I))), mapply(fork(recolor, color, compose(rbind(shoot, UNITY), center)), apply(initset, sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I)))))))
"""

verify_d22278a0 = """
paint(identity(I), mapply(fork(recolor, first, fork(intersection, compose(lbind(sfilter, asindices(I)), fork(lbind(fork, greater), compose(lbind(compose, minimum), chain(chain(rbind(rbind(chain, initset), lbind(rbind, manhattan)), lbind(rbind, apply), lbind(apply, initset)), rbind(remove, combine(apply(center, totuple(objects(I, T, F, T))), repeat(astuple(multiply(TEN, TEN), multiply(TEN, TEN)), ONE))), last)), chain(rbind(compose, initset), lbind(rbind, manhattan), compose(initset, last)))), compose(fork(combine, initset, chain(merge, lbind(rapply, apply(lbind(power, compose(outbox, outbox)), interval(ONE, add(TWO, halve(maximum(shape(I)))), ONE))), initset)), last))), pair(combine(apply(color, totuple(objects(I, T, F, T))), repeat(NEG_ONE, ONE)), combine(apply(center, totuple(objects(I, T, F, T))), repeat(astuple(multiply(TEN, TEN), multiply(TEN, TEN)), ONE)))))
"""

verify_d23f8c26 = """
fill(I, mostcolor(I), sfilter(asobject(I), fork(both, compose(flip, matcher(first, mostcolor(I))), compose(flip, matcher(compose(last, last), halve(width(I)))))))
"""

verify_d2abd087 = """
fill(fill(I, TWO, mfilter(objects(I, T, F, T), matcher(size, SIX))), ONE, mfilter(objects(I, T, F, T), compose(flip, matcher(size, SIX))))
"""

verify_d364b489 = """
fill(fill(fill(fill(I, EIGHT, shift(toindices(merge(fgpartition(I))), DOWN)), TWO, shift(toindices(merge(fgpartition(I))), UP)), SIX, shift(toindices(merge(fgpartition(I))), RIGHT)), SEVEN, shift(toindices(merge(fgpartition(I))), LEFT))
"""

verify_d406998b = """
vmirror(fill(vmirror(I), THREE, sfilter(toindices(merge(fgpartition(vmirror(I)))), compose(fork(equality, identity, compose(double, halve)), last))))
"""

verify_d43fd935 = """
paint(I, mapply(fork(recolor, color, fork(connect, center, fork(add, center, rbind(gravitate, argmax(sfilter(partition(I), fork(equality, size, fork(multiply, height, width))), size))))), sfilter(apply(initset, difference(sfilter(asobject(I), compose(flip, matcher(first, mostcolor(I)))), argmax(sfilter(partition(I), fork(equality, size, fork(multiply, height, width))), size))), fork(either, rbind(hmatching, argmax(sfilter(partition(I), fork(equality, size, fork(multiply, height, width))), size)), rbind(vmatching, argmax(sfilter(partition(I), fork(equality, size, fork(multiply, height, width))), size))))))
"""

verify_d4469b4b = """
fill(canvas(ZERO, THREE_BY_THREE), FIVE, call(fork(combine, vfrontier, hfrontier), branch(contained(TWO, palette(I)), RIGHT, branch(contained(ONE, palette(I)), UNITY, TWO_BY_TWO))))
"""

verify_d4a91cb9 = """
underfill(I, FOUR, combine(connect(astuple(first(first(ofcolor(I, TWO))), last(first(ofcolor(I, EIGHT)))), first(ofcolor(I, EIGHT))), connect(astuple(first(first(ofcolor(I, TWO))), last(first(ofcolor(I, EIGHT)))), first(ofcolor(I, TWO)))))
"""

verify_d4f3cd78 = """
fill(I, EIGHT, combine(mapply(fork(shoot, identity, fork(astuple, fork(add, compose(rbind(greater, lowermost(backdrop(inbox(toindices(merge(fgpartition(I))))))), first), compose(invert, compose(lbind(greater, uppermost(backdrop(inbox(toindices(merge(fgpartition(I))))))), first))), fork(add, compose(rbind(greater, rightmost(backdrop(inbox(toindices(merge(fgpartition(I))))))), last), compose(invert, compose(lbind(greater, leftmost(backdrop(inbox(toindices(merge(fgpartition(I))))))), last))))), difference(box(toindices(merge(fgpartition(I)))), toindices(merge(fgpartition(I))))), backdrop(inbox(toindices(merge(fgpartition(I)))))))
"""

verify_d511f180 = """
switch(I, FIVE, EIGHT)
"""

verify_d5d6de2d = """
fill(cover(I, merge(objects(I, T, F, T))), THREE, mapply(delta, objects(I, T, F, T)))
"""

verify_d631b094 = """
canvas(other(palette(I), ZERO), astuple(ONE, colorcount(I, other(palette(I), ZERO))))
"""

verify_d687bc17 = """
paint(fill(fill(I, NEG_ONE, combine(toindices(shift(asobject(trim(I)), UNITY)), corners(asindices(I)))), mostcolor(combine(shift(asobject(trim(I)), UNITY), toobject(corners(asindices(I)), I))), combine(toindices(shift(asobject(trim(I)), UNITY)), corners(asindices(I)))), mapply(fork(shift, identity, fork(gravitate, identity, chain(first, lbind(colorfilter, fgpartition(fill(I, NEG_ONE, combine(toindices(shift(asobject(trim(I)), UNITY)), corners(asindices(I)))))), color))), sfilter(apply(initset, shift(asobject(trim(I)), UNITY)), compose(rbind(contained, apply(color, fgpartition(fill(I, NEG_ONE, combine(toindices(shift(asobject(trim(I)), UNITY)), corners(asindices(I))))))), color))))
"""

verify_d6ad076f = """
fill(I, EIGHT, sfilter(backdrop(insert(astuple(branch(hmatching(first(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))), last(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last)))))), decrement(minimum(apply(lowermost, totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))))), decrement(lowermost(combine(first(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))), last(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))))))), branch(hmatching(first(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))), last(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last)))))), decrement(rightmost(combine(first(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))), last(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last)))))))), decrement(minimum(apply(rightmost, totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))))))), initset(astuple(branch(hmatching(first(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))), last(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last)))))), increment(maximum(apply(uppermost, totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))))), increment(uppermost(combine(first(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))), last(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))))))), branch(hmatching(first(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))), last(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last)))))), increment(leftmost(combine(first(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last))))), last(totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last)))))))), increment(maximum(apply(leftmost, totuple(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last)))))))))))), compose(flip, rbind(contained, toindices(merge(extract(sfilter(product(partition(I), partition(I)), compose(flip, fork(equality, first, last))), compose(flip, fork(adjacent, first, last)))))))))
"""

verify_d89b689b = """
paint(cover(I, merge(sizefilter(sfilter(objects(I, T, F, F), square), ONE))), mapply(fork(recolor, color, compose(lbind(argmin, apply(initset, toindices(argmax(sfilter(objects(I, T, F, F), square), size)))), lbind(rbind, manhattan))), sizefilter(sfilter(objects(I, T, F, F), square), ONE)))
"""

verify_d8c310e9 = """
call(last(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, matcher(chain(size, dedupe, first), ONE), matcher(chain(size, dedupe, compose(first, cmirror)), ONE)), chain(first, rbind(rapply, I), compose(initset, first))))), paint(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, matcher(chain(size, dedupe, first), ONE), matcher(chain(size, dedupe, compose(first, cmirror)), ONE)), chain(first, rbind(rapply, I), compose(initset, first))))), I), mapply(lbind(shift, sfilter(asobject(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, matcher(chain(size, dedupe, first), ONE), matcher(chain(size, dedupe, compose(first, cmirror)), ONE)), chain(first, rbind(rapply, I), compose(initset, first))))), I)), compose(flip, matcher(first, index(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, matcher(chain(size, dedupe, first), ONE), matcher(chain(size, dedupe, compose(first, cmirror)), ONE)), chain(first, rbind(rapply, I), compose(initset, first))))), I), tojvec(decrement(width(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, matcher(chain(size, dedupe, first), ONE), matcher(chain(size, dedupe, compose(first, cmirror)), ONE)), chain(first, rbind(rapply, I), compose(initset, first))))), I))))))))), apply(tojvec, interval(ZERO, increment(width(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, matcher(chain(size, dedupe, first), ONE), matcher(chain(size, dedupe, compose(first, cmirror)), ONE)), chain(first, rbind(rapply, I), compose(initset, first))))), I))), hperiod(sfilter(asobject(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, matcher(chain(size, dedupe, first), ONE), matcher(chain(size, dedupe, compose(first, cmirror)), ONE)), chain(first, rbind(rapply, I), compose(initset, first))))), I)), compose(flip, matcher(first, index(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, matcher(chain(size, dedupe, first), ONE), matcher(chain(size, dedupe, compose(first, cmirror)), ONE)), chain(first, rbind(rapply, I), compose(initset, first))))), I), tojvec(decrement(width(call(first(extract(pair(combine(astuple(identity, rot90), astuple(rot180, rot270)), combine(astuple(identity, rot270), astuple(rot180, rot90))), compose(fork(both, matcher(chain(size, dedupe, first), ONE), matcher(chain(size, dedupe, compose(first, cmirror)), ONE)), chain(first, rbind(rapply, I), compose(initset, first))))), I))))))))))))))
"""

verify_d90796e8 = """
fill(cover(I, sfilter(ofcolor(I, TWO), chain(compose(positive, size), lbind(intersection, ofcolor(I, THREE)), dneighbors))), EIGHT, sfilter(ofcolor(I, THREE), chain(compose(positive, size), lbind(intersection, ofcolor(I, TWO)), dneighbors)))
"""

verify_d9f24cd1 = """
call(last(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), fill(fill(underfill(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), I), other(palette(toobject(box(asindices(I)), I)), mostcolor(I)), mfilter(prapply(connect, ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), I), other(palette(toobject(box(asindices(I)), I)), mostcolor(I))), ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), I), other(palette(trim(I)), mostcolor(I)))), vline)), other(palette(toobject(box(asindices(I)), I)), mostcolor(I)), mapply(rbind(shoot, UP), shift(apply(urcorner, sfilter(objects(underfill(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), I), other(palette(toobject(box(asindices(I)), I)), mostcolor(I)), mfilter(prapply(connect, ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), I), other(palette(toobject(box(asindices(I)), I)), mostcolor(I))), ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), I), other(palette(trim(I)), mostcolor(I)))), vline)), F, F, T), matcher(numcolors, TWO))), UNITY))), other(palette(toobject(box(asindices(I)), I)), mostcolor(I)), mapply(vfrontier, mapply(toindices, colorfilter(difference(objects(underfill(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), I), other(palette(toobject(box(asindices(I)), I)), mostcolor(I)), mfilter(prapply(connect, ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), I), other(palette(toobject(box(asindices(I)), I)), mostcolor(I))), ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), I), other(palette(trim(I)), mostcolor(I)))), vline)), F, F, T), sfilter(objects(underfill(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), I), other(palette(toobject(box(asindices(I)), I)), mostcolor(I)), mfilter(prapply(connect, ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), I), other(palette(toobject(box(asindices(I)), I)), mostcolor(I))), ofcolor(call(first(extract(combine(astuple(astuple(identity, identity), astuple(rot90, rot270)), astuple(astuple(rot180, rot180), astuple(rot270, rot90))), compose(compose(rbind(greater, ONE), chain(size, dedupe, last)), chain(first, rbind(rapply, I), compose(initset, first))))), I), other(palette(trim(I)), mostcolor(I)))), vline)), F, F, T), matcher(numcolors, TWO))), other(palette(toobject(box(asindices(I)), I)), mostcolor(I)))))))
"""

verify_d9fac9be = """
canvas(branch(positive(size(occurrences(I, combine(recolor(first(totuple(remove(mostcolor(I), palette(I)))), neighbors(UNITY)), recolor(last(totuple(remove(mostcolor(I), palette(I)))), initset(UNITY)))))), last(totuple(remove(mostcolor(I), palette(I)))), first(totuple(remove(mostcolor(I), palette(I))))), UNITY)
"""

verify_dae9d2b5 = """
fill(canvas(first(intersection(palette(first(call(branch(equality(apply(numcolors, hsplit(I, TWO)), TWO_BY_TWO), hsplit, vsplit), I, TWO))), palette(last(call(branch(equality(apply(numcolors, hsplit(I, TWO)), TWO_BY_TWO), hsplit, vsplit), I, TWO))))), shape(first(call(branch(equality(apply(numcolors, hsplit(I, TWO)), TWO_BY_TWO), hsplit, vsplit), I, TWO)))), SIX, combine(ofcolor(first(call(branch(equality(apply(numcolors, hsplit(I, TWO)), TWO_BY_TWO), hsplit, vsplit), I, TWO)), other(palette(first(call(branch(equality(apply(numcolors, hsplit(I, TWO)), TWO_BY_TWO), hsplit, vsplit), I, TWO))), first(intersection(palette(first(call(branch(equality(apply(numcolors, hsplit(I, TWO)), TWO_BY_TWO), hsplit, vsplit), I, TWO))), palette(last(call(branch(equality(apply(numcolors, hsplit(I, TWO)), TWO_BY_TWO), hsplit, vsplit), I, TWO))))))), ofcolor(last(call(branch(equality(apply(numcolors, hsplit(I, TWO)), TWO_BY_TWO), hsplit, vsplit), I, TWO)), other(palette(last(call(branch(equality(apply(numcolors, hsplit(I, TWO)), TWO_BY_TWO), hsplit, vsplit), I, TWO))), first(intersection(palette(first(call(branch(equality(apply(numcolors, hsplit(I, TWO)), TWO_BY_TWO), hsplit, vsplit), I, TWO))), palette(last(call(branch(equality(apply(numcolors, hsplit(I, TWO)), TWO_BY_TWO), hsplit, vsplit), I, TWO)))))))))
"""

verify_db3e9e38 = """
call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(compose(chain(uppermost, merge, fgpartition), chain(first, rbind(rapply, I), initset)), ZERO)), paint(fill(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(compose(chain(uppermost, merge, fgpartition), chain(first, rbind(rapply, I), initset)), ZERO)), I), EIGHT, combine(mapply(lbind(shift, merge(fgpartition(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(compose(chain(uppermost, merge, fgpartition), chain(first, rbind(rapply, I), initset)), ZERO)), I)))), apply(lbind(multiply, astuple(NEG_ONE, width(merge(fgpartition(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(compose(chain(uppermost, merge, fgpartition), chain(first, rbind(rapply, I), initset)), ZERO)), I)))))), interval(ZERO, multiply(THREE, TEN), ONE))), mapply(lbind(shift, merge(fgpartition(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(compose(chain(uppermost, merge, fgpartition), chain(first, rbind(rapply, I), initset)), ZERO)), I)))), apply(lbind(multiply, astuple(NEG_ONE, invert(width(merge(fgpartition(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(compose(chain(uppermost, merge, fgpartition), chain(first, rbind(rapply, I), initset)), ZERO)), I))))))), interval(ZERO, multiply(THREE, TEN), ONE))))), combine(mapply(lbind(shift, merge(fgpartition(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(compose(chain(uppermost, merge, fgpartition), chain(first, rbind(rapply, I), initset)), ZERO)), I)))), apply(lbind(multiply, astuple(NEG_TWO, double(width(merge(fgpartition(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(compose(chain(uppermost, merge, fgpartition), chain(first, rbind(rapply, I), initset)), ZERO)), I))))))), interval(ZERO, multiply(THREE, TEN), ONE))), mapply(lbind(shift, merge(fgpartition(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(compose(chain(uppermost, merge, fgpartition), chain(first, rbind(rapply, I), initset)), ZERO)), I)))), apply(lbind(multiply, astuple(NEG_TWO, invert(double(width(merge(fgpartition(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), matcher(compose(chain(uppermost, merge, fgpartition), chain(first, rbind(rapply, I), initset)), ZERO)), I)))))))), interval(ZERO, multiply(THREE, TEN), ONE))))))
"""

verify_db93a21d = """
fill(underfill(I, ONE, mapply(rbind(shoot, DOWN), toindices(merge(objects(I, T, T, T))))), THREE, intersection(mapply(fork(difference, compose(backdrop, compose(first, fork(rapply, lbind(rapply, initset(chain(lbind(power, outbox), halve, width))), identity))), toindices), objects(I, T, T, T)), ofcolor(I, mostcolor(I))))
"""

verify_dbc1a6ce = """
fill(I, EIGHT, difference(combine(ofcolor(mapply(fork(paint, identity, chain(lbind(recolor, EIGHT), backdrop, rbind(ofcolor, leastcolor(I)))), vsplit(I, height(I))), EIGHT), ofcolor(dmirror(mapply(fork(paint, identity, chain(lbind(recolor, EIGHT), backdrop, rbind(ofcolor, leastcolor(I)))), vsplit(dmirror(I), width(I)))), EIGHT)), ofcolor(I, leastcolor(I))))
"""

verify_dc0a314f = """
subgrid(ofcolor(I, THREE), apply(lbind(apply, maximum), papply(pair, vmirror(apply(lbind(apply, maximum), papply(pair, apply(lbind(apply, maximum), papply(pair, apply(lbind(apply, maximum), papply(pair, replace(I, THREE, NEG_ONE), dmirror(replace(I, THREE, NEG_ONE)))), cmirror(apply(lbind(apply, maximum), papply(pair, replace(I, THREE, NEG_ONE), dmirror(replace(I, THREE, NEG_ONE))))))), hmirror(apply(lbind(apply, maximum), papply(pair, apply(lbind(apply, maximum), papply(pair, replace(I, THREE, NEG_ONE), dmirror(replace(I, THREE, NEG_ONE)))), cmirror(apply(lbind(apply, maximum), papply(pair, replace(I, THREE, NEG_ONE), dmirror(replace(I, THREE, NEG_ONE))))))))))), apply(lbind(apply, maximum), papply(pair, apply(lbind(apply, maximum), papply(pair, apply(lbind(apply, maximum), papply(pair, replace(I, THREE, NEG_ONE), dmirror(replace(I, THREE, NEG_ONE)))), cmirror(apply(lbind(apply, maximum), papply(pair, replace(I, THREE, NEG_ONE), dmirror(replace(I, THREE, NEG_ONE))))))), hmirror(apply(lbind(apply, maximum), papply(pair, apply(lbind(apply, maximum), papply(pair, replace(I, THREE, NEG_ONE), dmirror(replace(I, THREE, NEG_ONE)))), cmirror(apply(lbind(apply, maximum), papply(pair, replace(I, THREE, NEG_ONE), dmirror(replace(I, THREE, NEG_ONE)))))))))))))
"""

verify_dc1df850 = """
underfill(I, ONE, mapply(neighbors, ofcolor(I, TWO)))
"""

verify_dc433765 = """
move(I, recolor(other(remove(mostcolor(I), palette(I)), FOUR), ofcolor(I, other(remove(mostcolor(I), palette(I)), FOUR))), sign(subtract(center(ofcolor(I, FOUR)), center(ofcolor(I, other(remove(mostcolor(I), palette(I)), FOUR))))))
"""

verify_ddf7fa4f = """
paint(I, first(call(power(fork(astuple, fork(combine, first, fork(mapply, compose(lbind(lbind(fork, recolor), color), chain(rbind(compose, fork(lbind(fork, either), lbind(lbind, hmatching), lbind(lbind, vmatching))), lbind(lbind, extract), compose(last, last))), fork(sfilter, compose(first, last), compose(rbind(matcher, ONE), chain(rbind(lbind(chain, size), fork(lbind(fork, either), lbind(lbind, hmatching), lbind(lbind, vmatching))), lbind(lbind, sfilter), compose(last, last)))))), fork(astuple, fork(difference, compose(first, last), fork(sfilter, compose(first, last), compose(rbind(matcher, ONE), chain(rbind(lbind(chain, size), fork(lbind(fork, either), lbind(lbind, hmatching), lbind(lbind, vmatching))), lbind(lbind, sfilter), compose(last, last))))), fork(difference, compose(last, last), fork(apply, chain(rbind(compose, fork(lbind(fork, either), lbind(lbind, hmatching), lbind(lbind, vmatching))), lbind(lbind, extract), compose(last, last)), fork(sfilter, compose(first, last), compose(rbind(matcher, ONE), chain(rbind(lbind(chain, size), fork(lbind(fork, either), lbind(lbind, hmatching), lbind(lbind, vmatching))), lbind(lbind, sfilter), compose(last, last)))))))), TEN), astuple(difference(apply(compose(rbind(toobject, I), initset), difference(argmax(combine(astuple(connect(ORIGIN, tojvec(decrement(width(I)))), connect(ORIGIN, toivec(decrement(height(I))))), astuple(connect(tojvec(decrement(width(I))), decrement(shape(I))), connect(toivec(decrement(height(I))), decrement(shape(I))))), chain(size, rbind(sizefilter, ONE), chain(rbind(sfilter, compose(flip, matcher(color, mostcolor(toobject(box(asindices(I)), I))))), rbind(rbind(rbind(objects, F), F), T), rbind(subgrid, I)))), ofcolor(I, mostcolor(toobject(box(asindices(I)), I))))), apply(compose(rbind(toobject, I), initset), difference(argmax(combine(astuple(connect(ORIGIN, tojvec(decrement(width(I)))), connect(ORIGIN, toivec(decrement(height(I))))), astuple(connect(tojvec(decrement(width(I))), decrement(shape(I))), connect(toivec(decrement(height(I))), decrement(shape(I))))), chain(size, rbind(sizefilter, ONE), chain(rbind(sfilter, compose(flip, matcher(color, mostcolor(toobject(box(asindices(I)), I))))), rbind(rbind(rbind(objects, F), F), T), rbind(subgrid, I)))), ofcolor(I, mostcolor(toobject(box(asindices(I)), I)))))), astuple(apply(compose(rbind(toobject, I), initset), difference(argmax(combine(astuple(connect(ORIGIN, tojvec(decrement(width(I)))), connect(ORIGIN, toivec(decrement(height(I))))), astuple(connect(tojvec(decrement(width(I))), decrement(shape(I))), connect(toivec(decrement(height(I))), decrement(shape(I))))), chain(size, rbind(sizefilter, ONE), chain(rbind(sfilter, compose(flip, matcher(color, mostcolor(toobject(box(asindices(I)), I))))), rbind(rbind(rbind(objects, F), F), T), rbind(subgrid, I)))), ofcolor(I, mostcolor(toobject(box(asindices(I)), I))))), sfilter(objects(I, T, F, T), matcher(chain(size, rbind(intersection, argmax(combine(astuple(connect(ORIGIN, tojvec(decrement(width(I)))), connect(ORIGIN, toivec(decrement(height(I))))), astuple(connect(tojvec(decrement(width(I))), decrement(shape(I))), connect(toivec(decrement(height(I))), decrement(shape(I))))), chain(size, rbind(sizefilter, ONE), chain(rbind(sfilter, compose(flip, matcher(color, mostcolor(toobject(box(asindices(I)), I))))), rbind(rbind(rbind(objects, F), F), T), rbind(subgrid, I))))), toindices), ZERO)))))))
"""

verify_de1cd16c = """
canvas(mostcolor(argmax(apply(rbind(subgrid, I), difference(objects(I, T, F, F), colorfilter(objects(I, T, F, F), call(branch(equality(size(apply(color, totuple(objects(I, T, F, F)))), size(dedupe(apply(color, totuple(objects(I, T, F, F)))))), compose(leastcolor, merge), chain(mostcommon, lbind(apply, color), totuple)), objects(I, T, F, F))))), rbind(colorcount, call(branch(equality(size(apply(color, totuple(objects(I, T, F, F)))), size(dedupe(apply(color, totuple(objects(I, T, F, F)))))), compose(leastcolor, merge), chain(mostcommon, lbind(apply, color), totuple)), objects(I, T, F, F))))), UNITY)
"""

verify_ded97339 = """
fill(I, leastcolor(I), combine(ofcolor(mapply(fork(paint, identity, chain(lbind(recolor, NEG_ONE), backdrop, rbind(ofcolor, leastcolor(I)))), vsplit(I, height(I))), NEG_ONE), ofcolor(dmirror(mapply(fork(paint, identity, chain(lbind(recolor, NEG_ONE), backdrop, rbind(ofcolor, leastcolor(I)))), vsplit(dmirror(I), width(I)))), NEG_ONE)))
"""

verify_e179c5f4 = """
replace(call(branch(portrait(I), identity, dmirror), fill(call(branch(portrait(I), identity, dmirror), I), other(palette(I), mostcolor(toobject(difference(asindices(I), corners(asindices(I))), I))), mapply(last, sfilter(pair(combine(astuple(equality(index(call(branch(portrait(I), identity, dmirror), I), ulcorner(asindices(call(branch(portrait(I), identity, dmirror), I)))), other(palette(I), mostcolor(toobject(difference(asindices(I), corners(asindices(I))), I)))), equality(index(call(branch(portrait(I), identity, dmirror), I), urcorner(asindices(call(branch(portrait(I), identity, dmirror), I)))), other(palette(I), mostcolor(toobject(difference(asindices(I), corners(asindices(I))), I))))), astuple(equality(index(call(branch(portrait(I), identity, dmirror), I), llcorner(asindices(call(branch(portrait(I), identity, dmirror), I)))), other(palette(I), mostcolor(toobject(difference(asindices(I), corners(asindices(I))), I)))), equality(index(call(branch(portrait(I), identity, dmirror), I), lrcorner(asindices(call(branch(portrait(I), identity, dmirror), I)))), other(palette(I), mostcolor(toobject(difference(asindices(I), corners(asindices(I))), I)))))), combine(astuple(sfilter(asindices(call(branch(portrait(I), identity, dmirror), I)), rbind(contained, mapply(chain(lbind(shift, remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))), toivec, lbind(multiply, height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), interval(ZERO, increment(divide(height(call(branch(portrait(I), identity, dmirror), I)), height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), ONE)))), vmirror(sfilter(asindices(call(branch(portrait(I), identity, dmirror), I)), rbind(contained, mapply(chain(lbind(shift, remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))), toivec, lbind(multiply, height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), interval(ZERO, increment(divide(height(call(branch(portrait(I), identity, dmirror), I)), height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), ONE)))))), astuple(hmirror(sfilter(asindices(call(branch(portrait(I), identity, dmirror), I)), rbind(contained, mapply(chain(lbind(shift, remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))), toivec, lbind(multiply, height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), interval(ZERO, increment(divide(height(call(branch(portrait(I), identity, dmirror), I)), height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), ONE))))), hmirror(vmirror(sfilter(asindices(call(branch(portrait(I), identity, dmirror), I)), rbind(contained, mapply(chain(lbind(shift, remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))), toivec, lbind(multiply, height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), interval(ZERO, increment(divide(height(call(branch(portrait(I), identity, dmirror), I)), height(remove(llcorner(combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I))))), combine(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I))), intersection(shoot(lrcorner(intersection(shoot(ORIGIN, UNITY), asindices(call(branch(portrait(I), identity, dmirror), I)))), DOWN_LEFT), asindices(call(branch(portrait(I), identity, dmirror), I)))))))), ONE))))))))), first)))), mostcolor(toobject(difference(asindices(I), corners(asindices(I))), I)), EIGHT)
"""

verify_e21d9049 = """
paint(I, combine(mapply(lbind(shift, branch(equality(size(objects(I, F, T, T)), TWO), mfilter(objects(I, F, T, T), hline), sfilter(merge(fgpartition(I)), matcher(compose(first, last), mostcommon(apply(compose(first, last), totuple(merge(fgpartition(I))))))))), apply(tojvec, combine(apply(lbind(multiply, width(branch(equality(size(objects(I, F, T, T)), TWO), mfilter(objects(I, F, T, T), hline), sfilter(merge(fgpartition(I)), matcher(compose(first, last), mostcommon(apply(compose(first, last), totuple(merge(fgpartition(I)))))))))), interval(ZERO, increment(divide(width(I), width(branch(equality(size(objects(I, F, T, T)), TWO), mfilter(objects(I, F, T, T), hline), sfilter(merge(fgpartition(I)), matcher(compose(first, last), mostcommon(apply(compose(first, last), totuple(merge(fgpartition(I))))))))))), ONE)), apply(invert, apply(lbind(multiply, width(branch(equality(size(objects(I, F, T, T)), TWO), mfilter(objects(I, F, T, T), hline), sfilter(merge(fgpartition(I)), matcher(compose(first, last), mostcommon(apply(compose(first, last), totuple(merge(fgpartition(I)))))))))), interval(ZERO, increment(divide(width(I), width(branch(equality(size(objects(I, F, T, T)), TWO), mfilter(objects(I, F, T, T), hline), sfilter(merge(fgpartition(I)), matcher(compose(first, last), mostcommon(apply(compose(first, last), totuple(merge(fgpartition(I))))))))))), ONE)))))), mapply(lbind(shift, branch(equality(size(objects(I, F, T, T)), TWO), mfilter(objects(I, F, T, T), vline), sfilter(merge(fgpartition(I)), matcher(compose(last, last), mostcommon(apply(compose(last, last), totuple(merge(fgpartition(I))))))))), apply(toivec, combine(apply(lbind(multiply, height(branch(equality(size(objects(I, F, T, T)), TWO), mfilter(objects(I, F, T, T), vline), sfilter(merge(fgpartition(I)), matcher(compose(last, last), mostcommon(apply(compose(last, last), totuple(merge(fgpartition(I)))))))))), interval(ZERO, increment(divide(height(I), height(branch(equality(size(objects(I, F, T, T)), TWO), mfilter(objects(I, F, T, T), hline), sfilter(merge(fgpartition(I)), matcher(compose(first, last), mostcommon(apply(compose(first, last), totuple(merge(fgpartition(I))))))))))), ONE)), apply(invert, apply(lbind(multiply, height(branch(equality(size(objects(I, F, T, T)), TWO), mfilter(objects(I, F, T, T), vline), sfilter(merge(fgpartition(I)), matcher(compose(last, last), mostcommon(apply(compose(last, last), totuple(merge(fgpartition(I)))))))))), interval(ZERO, increment(divide(height(I), height(branch(equality(size(objects(I, F, T, T)), TWO), mfilter(objects(I, F, T, T), hline), sfilter(merge(fgpartition(I)), matcher(compose(first, last), mostcommon(apply(compose(first, last), totuple(merge(fgpartition(I))))))))))), ONE))))))))
"""

verify_e26a3af2 = """
call(branch(greater(call(compose(size, dedupe), apply(mostcommon, rot90(I))), call(compose(size, dedupe), apply(mostcommon, I))), vupscale, hupscale), branch(greater(call(compose(size, dedupe), apply(mostcommon, rot90(I))), call(compose(size, dedupe), apply(mostcommon, I))), repeat(apply(mostcommon, rot90(I)), ONE), rot90(repeat(apply(mostcommon, I), ONE))), call(branch(greater(call(compose(size, dedupe), apply(mostcommon, rot90(I))), call(compose(size, dedupe), apply(mostcommon, I))), height, width), I))
"""

verify_e3497940 = """
paint(lefthalf(I), merge(sfilter(objects(vmirror(righthalf(I)), T, F, F), compose(flip, matcher(color, mostcolor(first(hsplit(I, width(I)))))))))
"""

verify_e40b9e2f = """
paint(I, combine(combine(shift(shift(merge(fgpartition(rot90(I))), invert(first(occurrences(rot90(I), asobject(subgrid(backdrop(insert(first(argmin(sfilter(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), matcher(last, valmax(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), last))), compose(rbind(manhattan, initset(center(merge(fgpartition(I))))), compose(initset, fork(add, first, compose(halve, last)))))), initset(add(first(argmin(sfilter(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), matcher(last, valmax(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), last))), compose(rbind(manhattan, initset(center(merge(fgpartition(I))))), compose(initset, fork(add, first, compose(halve, last)))))), decrement(last(argmin(sfilter(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), matcher(last, valmax(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), last))), compose(rbind(manhattan, initset(center(merge(fgpartition(I))))), compose(initset, fork(add, first, compose(halve, last))))))))))), I)))))), first(argmin(sfilter(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), matcher(last, valmax(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), last))), compose(rbind(manhattan, initset(center(merge(fgpartition(I))))), compose(initset, fork(add, first, compose(halve, last))))))), shift(shift(merge(fgpartition(rot180(I))), invert(first(occurrences(rot180(I), asobject(subgrid(backdrop(insert(first(argmin(sfilter(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), matcher(last, valmax(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), last))), compose(rbind(manhattan, initset(center(merge(fgpartition(I))))), compose(initset, fork(add, first, compose(halve, last)))))), initset(add(first(argmin(sfilter(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), matcher(last, valmax(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), last))), compose(rbind(manhattan, initset(center(merge(fgpartition(I))))), compose(initset, fork(add, first, compose(halve, last)))))), decrement(last(argmin(sfilter(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), matcher(last, valmax(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), last))), compose(rbind(manhattan, initset(center(merge(fgpartition(I))))), compose(initset, fork(add, first, compose(halve, last))))))))))), I)))))), first(argmin(sfilter(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), matcher(last, valmax(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), last))), compose(rbind(manhattan, initset(center(merge(fgpartition(I))))), compose(initset, fork(add, first, compose(halve, last)))))))), shift(shift(merge(fgpartition(rot270(I))), invert(first(occurrences(rot270(I), asobject(subgrid(backdrop(insert(first(argmin(sfilter(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), matcher(last, valmax(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), last))), compose(rbind(manhattan, initset(center(merge(fgpartition(I))))), compose(initset, fork(add, first, compose(halve, last)))))), initset(add(first(argmin(sfilter(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), matcher(last, valmax(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), last))), compose(rbind(manhattan, initset(center(merge(fgpartition(I))))), compose(initset, fork(add, first, compose(halve, last)))))), decrement(last(argmin(sfilter(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), matcher(last, valmax(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), last))), compose(rbind(manhattan, initset(center(merge(fgpartition(I))))), compose(initset, fork(add, first, compose(halve, last))))))))))), I)))))), first(argmin(sfilter(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), matcher(last, valmax(combine(repeat(astuple(center(merge(fgpartition(I))), ONE), ONE), mapply(fork(mapply, fork(lbind(fork, rbind(branch, difference(initset(ORIGIN), initset(ORIGIN)))), fork(compose, fork(lbind(fork, both), chain(rbind(compose, rbind(colorcount, mostcolor(I))), lbind(lbind, greater), compose(decrement, fork(multiply, identity, identity))), chain(compose(lbind(lbind(fork, both), fork(both, fork(equality, identity, rot90), fork(both, fork(equality, identity, rot180), fork(equality, identity, rot270)))), rbind(compose, shape)), lbind(rbind, equality), fork(astuple, identity, identity))), compose(lbind(compose, rbind(subgrid, I)), chain(chain(lbind(compose, backdrop), lbind(lbind(fork, insert), identity), lbind(compose, initset)), lbind(rbind, add), decrement))), compose(lbind(compose, initset), lbind(rbind, astuple))), fork(product, compose(rbind(lbind(interval, uppermost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(uppermost(merge(fgpartition(I))), height(merge(fgpartition(I))))))), compose(rbind(lbind(interval, leftmost(merge(fgpartition(I)))), ONE), lbind(subtract, increment(add(leftmost(merge(fgpartition(I))), width(merge(fgpartition(I))))))))), interval(SEVEN, ONE, NEG_ONE))), last))), compose(rbind(manhattan, initset(center(merge(fgpartition(I))))), compose(initset, fork(add, first, compose(halve, last)))))))))
"""

verify_e48d4e1a = """
fill(fill(I, mostcolor(difference(asobject(I), merge(frontiers(I)))), combine(toindices(merge(frontiers(I))), ofcolor(I, leastcolor(difference(asobject(I), merge(frontiers(I))))))), color(merge(frontiers(I))), combine(hfrontier(add(astuple(uppermost(argmax(frontiers(I), width)), leftmost(argmax(frontiers(I), height))), multiply(position(ofcolor(I, leastcolor(difference(asobject(I), merge(frontiers(I))))), initset(astuple(uppermost(argmax(frontiers(I), width)), leftmost(argmax(frontiers(I), height))))), colorcount(I, leastcolor(difference(asobject(I), merge(frontiers(I)))))))), vfrontier(add(astuple(uppermost(argmax(frontiers(I), width)), leftmost(argmax(frontiers(I), height))), multiply(position(ofcolor(I, leastcolor(difference(asobject(I), merge(frontiers(I))))), initset(astuple(uppermost(argmax(frontiers(I), width)), leftmost(argmax(frontiers(I), height))))), colorcount(I, leastcolor(difference(asobject(I), merge(frontiers(I))))))))))
"""

verify_e5062a87 = """
fill(I, leastcolor(I), mapply(lbind(shift, toindices(normalize(recolor(ZERO, ofcolor(I, leastcolor(I)))))), occurrences(I, normalize(recolor(ZERO, ofcolor(I, leastcolor(I)))))))
"""

verify_e509e548 = """
fill(fill(fill(I, TWO, merge(objects(I, T, F, T))), ONE, merge(sfilter(objects(I, T, F, T), fork(equality, size, compose(decrement, fork(add, height, width)))))), SIX, merge(sfilter(difference(objects(I, T, F, T), sfilter(objects(I, T, F, T), fork(equality, size, compose(decrement, fork(add, height, width))))), matcher(compose(size, fork(difference, toindices, box)), ZERO))))
"""

verify_e50d258f = """
subgrid(argmax(objects(hconcat(I, canvas(mostcolor(toobject(box(asindices(I)), I)), shape(I))), F, F, T), rbind(colorcount, TWO)), I)
"""

verify_e6721834 = """
paint(first(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors)), mapply(fork(shift, identity, fork(subtract, chain(first, compose(rbind(shift, NEG_UNITY), lbind(occurrences, paint(canvas(mostcolor(first(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors))), add(TWO, shape(first(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors))))), shift(asobject(first(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors))), UNITY)))), fork(combine, rbind(sfilter, compose(flip, matcher(first, mostcolor(merge(objects(last(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors)), F, F, T)))))), compose(lbind(recolor, mostcolor(first(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors)))), fork(combine, compose(toindices, rbind(sfilter, matcher(first, mostcolor(merge(objects(last(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors)), F, F, T)))))), outbox)))), compose(ulcorner, fork(combine, rbind(sfilter, compose(flip, matcher(first, mostcolor(merge(objects(last(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors)), F, F, T)))))), compose(lbind(recolor, mostcolor(first(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors)))), fork(combine, compose(toindices, rbind(sfilter, matcher(first, mostcolor(merge(objects(last(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors)), F, F, T)))))), outbox)))))), sfilter(objects(last(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors)), F, F, T), chain(positive, size, compose(compose(rbind(shift, NEG_UNITY), lbind(occurrences, paint(canvas(mostcolor(first(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors))), add(TWO, shape(first(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors))))), shift(asobject(first(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors))), UNITY)))), fork(combine, rbind(sfilter, compose(flip, matcher(first, mostcolor(merge(objects(last(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors)), F, F, T)))))), compose(lbind(recolor, mostcolor(first(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors)))), fork(combine, compose(toindices, rbind(sfilter, matcher(first, mostcolor(merge(objects(last(order(call(branch(greater(size(sfilter(frontiers(I), hline)), size(sfilter(frontiers(I), vline))), vsplit, hsplit), I, TWO), numcolors)), F, F, T)))))), outbox))))))))
"""

verify_e73095fd = """
fill(I, FOUR, mfilter(sfilter(colorfilter(objects(I, T, F, F), mostcolor(I)), fork(equality, toindices, backdrop)), chain(matcher(size, ZERO), rbind(intersection, ofcolor(I, leastcolor(I))), fork(difference, chain(lbind(mapply, dneighbors), corners, outbox), outbox))))
"""

verify_e76a88a6 = """
paint(I, mapply(lbind(shift, normalize(argmax(objects(I, F, F, T), numcolors))), apply(ulcorner, remove(argmax(objects(I, F, F, T), numcolors), objects(I, F, F, T)))))
"""

verify_e8593010 = """
fill(fill(fill(I, THREE, merge(sizefilter(objects(I, T, F, T), ONE))), TWO, merge(sizefilter(objects(I, T, F, T), TWO))), ONE, merge(sizefilter(objects(I, T, F, T), THREE)))
"""

verify_e8dc4411 = """
paint(I, recolor(color(other(fgpartition(I), argmax(fgpartition(I), size))), mapply(lbind(shift, argmax(fgpartition(I), size)), apply(lbind(multiply, multiply(increment(maximum(sfilter(interval(ZERO, increment(height(argmax(fgpartition(I), size))), ONE), chain(chain(positive, size, lbind(intersection, argmax(fgpartition(I), size))), lbind(shift, argmax(fgpartition(I), size)), rbind(multiply, UNITY))))), argmax(ineighbors(ORIGIN), chain(size, lbind(intersection, toindices(other(fgpartition(I), argmax(fgpartition(I), size)))), chain(toindices, lbind(shift, argmax(fgpartition(I), size)), rbind(multiply, increment(maximum(sfilter(interval(ZERO, increment(height(argmax(fgpartition(I), size))), ONE), chain(chain(positive, size, lbind(intersection, argmax(fgpartition(I), size))), lbind(shift, argmax(fgpartition(I), size)), rbind(multiply, UNITY))))))))))), pair(interval(ONE, increment(maximum(shape(I))), ONE), interval(ONE, increment(maximum(shape(I))), ONE))))))
"""

verify_e9614598 = """
fill(I, THREE, insert(center(merge(fgpartition(I))), dneighbors(center(merge(fgpartition(I))))))
"""

verify_e98196ab = """
paint(first(call(branch(positive(size(sfilter(frontiers(I), hline))), vsplit, hsplit), I, TWO)), merge(fgpartition(last(call(branch(positive(size(sfilter(frontiers(I), hline))), vsplit, hsplit), I, TWO)))))
"""

verify_e9afcf9a = """
paint(I, apply(fork(astuple, first, fork(astuple, chain(lbind(subtract, decrement(height(I))), first, last), compose(last, last))), sfilter(asobject(I), chain(flip, fork(equality, identity, compose(double, halve)), compose(last, last)))))
"""

verify_ea32f347 = """
fill(fill(fill(I, FOUR, merge(objects(I, T, F, T))), ONE, argmax(objects(I, T, F, T), size)), TWO, argmin(objects(I, T, F, T), size))
"""

verify_ea786f4a = """
fill(I, index(I, halve(shape(I))), call(fork(combine, fork(combine, rbind(shoot, UP_RIGHT), rbind(shoot, DOWN_LEFT)), fork(combine, rbind(shoot, UNITY), rbind(shoot, NEG_UNITY))), halve(shape(I))))
"""

verify_eb281b96 = """
vconcat(vconcat(I, hmirror(crop(I, ORIGIN, astuple(decrement(height(I)), width(I))))), crop(vconcat(I, hmirror(crop(I, ORIGIN, astuple(decrement(height(I)), width(I))))), DOWN, astuple(double(decrement(height(I))), width(I))))
"""

verify_eb5a1d5d = """
call(fork(vconcat, identity, compose(hmirror, fork(remove, last, identity))), dmirror(call(fork(vconcat, identity, compose(hmirror, fork(remove, last, identity))), call(compose(dmirror, dedupe), call(compose(dmirror, dedupe), I)))))
"""

verify_ec883f72 = """
fill(I, color(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width)))), combine(combine(shoot(add(lrcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), UNITY), UNITY), shoot(add(llcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), DOWN_LEFT), DOWN_LEFT)), combine(shoot(add(urcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), UP_RIGHT), UP_RIGHT), shoot(add(ulcorner(argmax(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), fork(multiply, height, width))), NEG_UNITY), NEG_UNITY))))
"""

verify_ecdecbb3 = """
fill(fill(I, leastcolor(I), mapply(compose(first, fork(rapply, compose(initset, compose(rbind(rbind(branch, fork(connect, identity, compose(rbind(extract, rbind(contained, backdrop(ofcolor(I, other(palette(merge(objects(I, T, F, T))), leastcolor(I)))))), fork(astuple, fork(add, identity, compose(crement, fork(gravitate, initset, compose(lbind(argmin, branch(positive(size(sfilter(colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))), hline))), insert(hfrontier(toivec(height(I))), insert(hfrontier(toivec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))), insert(vfrontier(tojvec(width(I))), insert(vfrontier(tojvec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), compose(lbind(rbind, manhattan), initset))))), fork(add, identity, compose(crement, fork(gravitate, initset, fork(argmin, compose(rbind(remove, branch(positive(size(sfilter(colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))), hline))), insert(hfrontier(toivec(height(I))), insert(hfrontier(toivec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))), insert(vfrontier(tojvec(width(I))), insert(vfrontier(tojvec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), compose(lbind(argmin, branch(positive(size(sfilter(colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))), hline))), insert(hfrontier(toivec(height(I))), insert(hfrontier(toivec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))), insert(vfrontier(tojvec(width(I))), insert(vfrontier(tojvec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), compose(lbind(rbind, manhattan), initset))), compose(lbind(rbind, manhattan), initset))))))))), fork(connect, fork(add, identity, compose(crement, fork(gravitate, initset, compose(lbind(argmin, branch(positive(size(sfilter(colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))), hline))), insert(hfrontier(toivec(height(I))), insert(hfrontier(toivec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))), insert(vfrontier(tojvec(width(I))), insert(vfrontier(tojvec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), compose(lbind(rbind, manhattan), initset))))), fork(add, identity, compose(crement, fork(gravitate, initset, fork(argmin, compose(rbind(remove, branch(positive(size(sfilter(colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))), hline))), insert(hfrontier(toivec(height(I))), insert(hfrontier(toivec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))), insert(vfrontier(tojvec(width(I))), insert(vfrontier(tojvec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), compose(lbind(argmin, branch(positive(size(sfilter(colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))), hline))), insert(hfrontier(toivec(height(I))), insert(hfrontier(toivec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))), insert(vfrontier(tojvec(width(I))), insert(vfrontier(tojvec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), compose(lbind(rbind, manhattan), initset))), compose(lbind(rbind, manhattan), initset))))))), rbind(contained, backdrop(ofcolor(I, other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), identity)), ofcolor(I, leastcolor(I)))), other(palette(merge(objects(I, T, F, T))), leastcolor(I)), mapply(neighbors, intersection(ofcolor(I, other(palette(merge(objects(I, T, F, T))), leastcolor(I))), mapply(compose(first, fork(rapply, compose(initset, compose(rbind(rbind(branch, fork(connect, identity, compose(rbind(extract, rbind(contained, backdrop(ofcolor(I, other(palette(merge(objects(I, T, F, T))), leastcolor(I)))))), fork(astuple, fork(add, identity, compose(crement, fork(gravitate, initset, compose(lbind(argmin, branch(positive(size(sfilter(colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))), hline))), insert(hfrontier(toivec(height(I))), insert(hfrontier(toivec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))), insert(vfrontier(tojvec(width(I))), insert(vfrontier(tojvec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), compose(lbind(rbind, manhattan), initset))))), fork(add, identity, compose(crement, fork(gravitate, initset, fork(argmin, compose(rbind(remove, branch(positive(size(sfilter(colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))), hline))), insert(hfrontier(toivec(height(I))), insert(hfrontier(toivec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))), insert(vfrontier(tojvec(width(I))), insert(vfrontier(tojvec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), compose(lbind(argmin, branch(positive(size(sfilter(colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))), hline))), insert(hfrontier(toivec(height(I))), insert(hfrontier(toivec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))), insert(vfrontier(tojvec(width(I))), insert(vfrontier(tojvec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), compose(lbind(rbind, manhattan), initset))), compose(lbind(rbind, manhattan), initset))))))))), fork(connect, fork(add, identity, compose(crement, fork(gravitate, initset, compose(lbind(argmin, branch(positive(size(sfilter(colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))), hline))), insert(hfrontier(toivec(height(I))), insert(hfrontier(toivec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))), insert(vfrontier(tojvec(width(I))), insert(vfrontier(tojvec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), compose(lbind(rbind, manhattan), initset))))), fork(add, identity, compose(crement, fork(gravitate, initset, fork(argmin, compose(rbind(remove, branch(positive(size(sfilter(colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))), hline))), insert(hfrontier(toivec(height(I))), insert(hfrontier(toivec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))), insert(vfrontier(tojvec(width(I))), insert(vfrontier(tojvec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), compose(lbind(argmin, branch(positive(size(sfilter(colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))), hline))), insert(hfrontier(toivec(height(I))), insert(hfrontier(toivec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))), insert(vfrontier(tojvec(width(I))), insert(vfrontier(tojvec(NEG_ONE)), colorfilter(frontiers(I), other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), compose(lbind(rbind, manhattan), initset))), compose(lbind(rbind, manhattan), initset))))))), rbind(contained, backdrop(ofcolor(I, other(palette(merge(objects(I, T, F, T))), leastcolor(I))))))), identity)), ofcolor(I, leastcolor(I))))))
"""

verify_ed36ccf7 = """
rot270(I)
"""

verify_ef135b50 = """
fill(I, NINE, intersection(difference(ofcolor(mapply(fork(paint, identity, chain(lbind(recolor, NEG_ONE), backdrop, rbind(ofcolor, NEG_ONE))), vsplit(fill(I, NEG_ONE, difference(asindices(I), ofcolor(I, color(argmax(sfilter(objects(I, T, F, F), compose(flip, fork(equality, size, fork(multiply, height, width)))), fork(multiply, height, width)))))), height(fill(I, NEG_ONE, difference(asindices(I), ofcolor(I, color(argmax(sfilter(objects(I, T, F, F), compose(flip, fork(equality, size, fork(multiply, height, width)))), fork(multiply, height, width))))))))), NEG_ONE), box(asindices(I))), ofcolor(I, color(argmax(sfilter(objects(I, T, F, F), compose(flip, fork(equality, size, fork(multiply, height, width)))), fork(multiply, height, width))))))
"""

verify_f15e1fac = """
call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), fill(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I)), other(remove(mostcolor(I), palette(I)), TWO), mapply(compose(rbind(mapply, ofcolor(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I)), other(remove(mostcolor(I), palette(I)), TWO))), fork(lbind(fork, connect), fork(rbind(chain, first), compose(lbind(rbind, astuple), compose(first, last)), compose(lbind(lbind, add), first)), fork(rbind(chain, first), compose(lbind(rbind, astuple), chain(decrement, last, last)), compose(lbind(lbind, add), first)))), pair(interval(ZERO, size(remove(last(order(insert(width(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I))), insert(ZERO, apply(last, ofcolor(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I)), TWO)))), identity)), order(insert(width(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I))), insert(ZERO, apply(last, ofcolor(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I)), TWO)))), identity))), ONE), pair(remove(last(order(insert(width(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I))), insert(ZERO, apply(last, ofcolor(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I)), TWO)))), identity)), order(insert(width(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I))), insert(ZERO, apply(last, ofcolor(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I)), TWO)))), identity)), remove(first(order(insert(width(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I))), insert(ZERO, apply(last, ofcolor(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I)), TWO)))), identity)), order(insert(width(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I))), insert(ZERO, apply(last, ofcolor(call(branch(equality(rightmost(ofcolor(call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I), other(remove(mostcolor(I), palette(I)), TWO))), ZERO), identity, vmirror), call(extract(combine(astuple(identity, dmirror), astuple(cmirror, hmirror)), chain(matcher(compose(lowermost, rbind(ofcolor, TWO)), ZERO), compose(first, rbind(rapply, I)), initset)), I)), TWO)))), identity))))))))
"""

verify_f1cefba8 = """
fill(fill(fill(I, color(argmin(partition(I), fork(multiply, height, width))), intersection(difference(mapply(fork(combine, hfrontier, vfrontier), intersection(toindices(argmin(partition(I), fork(multiply, height, width))), inbox(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmin(partition(I), fork(multiply, height, width)))))), mapply(fork(combine, hfrontier, vfrontier), combine(corners(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmin(partition(I), fork(multiply, height, width)))), corners(inbox(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmin(partition(I), fork(multiply, height, width)))))))), toindices(argmax(partition(I), fork(multiply, height, width))))), color(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmin(partition(I), fork(multiply, height, width)))), difference(difference(mapply(fork(combine, hfrontier, vfrontier), intersection(toindices(argmin(partition(I), fork(multiply, height, width))), inbox(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmin(partition(I), fork(multiply, height, width)))))), mapply(fork(combine, hfrontier, vfrontier), combine(corners(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmin(partition(I), fork(multiply, height, width)))), corners(inbox(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmin(partition(I), fork(multiply, height, width)))))))), intersection(difference(mapply(fork(combine, hfrontier, vfrontier), intersection(toindices(argmin(partition(I), fork(multiply, height, width))), inbox(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmin(partition(I), fork(multiply, height, width)))))), mapply(fork(combine, hfrontier, vfrontier), combine(corners(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmin(partition(I), fork(multiply, height, width)))), corners(inbox(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmin(partition(I), fork(multiply, height, width)))))))), toindices(argmax(partition(I), fork(multiply, height, width)))))), color(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmin(partition(I), fork(multiply, height, width)))), inbox(other(remove(argmax(partition(I), fork(multiply, height, width)), partition(I)), argmin(partition(I), fork(multiply, height, width)))))
"""

verify_f25fbde4 = """
upscale(compress(I), TWO)
"""

verify_f25ffba3 = """
call(branch(either(equality(numcolors(tophalf(I)), ONE), equality(numcolors(bottomhalf(I)), ONE)), identity, dmirror), paint(call(branch(either(equality(numcolors(tophalf(I)), ONE), equality(numcolors(bottomhalf(I)), ONE)), identity, dmirror), I), sfilter(hmirror(asobject(call(branch(either(equality(numcolors(tophalf(I)), ONE), equality(numcolors(bottomhalf(I)), ONE)), identity, dmirror), I))), compose(flip, matcher(first, mostcolor(I))))))
"""

verify_f2829549 = """
fill(canvas(first(intersection(palette(first(call(branch(positive(size(sfilter(frontiers(I), hline))), vsplit, hsplit), I, TWO))), palette(last(call(branch(positive(size(sfilter(frontiers(I), hline))), vsplit, hsplit), I, TWO))))), shape(first(call(branch(positive(size(sfilter(frontiers(I), hline))), vsplit, hsplit), I, TWO)))), THREE, intersection(ofcolor(first(call(branch(positive(size(sfilter(frontiers(I), hline))), vsplit, hsplit), I, TWO)), first(intersection(palette(first(call(branch(positive(size(sfilter(frontiers(I), hline))), vsplit, hsplit), I, TWO))), palette(last(call(branch(positive(size(sfilter(frontiers(I), hline))), vsplit, hsplit), I, TWO)))))), ofcolor(last(call(branch(positive(size(sfilter(frontiers(I), hline))), vsplit, hsplit), I, TWO)), first(intersection(palette(first(call(branch(positive(size(sfilter(frontiers(I), hline))), vsplit, hsplit), I, TWO))), palette(last(call(branch(positive(size(sfilter(frontiers(I), hline))), vsplit, hsplit), I, TWO))))))))
"""

verify_f35d900a = """
fill(paint(I, mapply(fork(recolor, compose(lbind(other, remove(mostcolor(I), palette(I))), color), outbox), objects(I, T, F, T))), FIVE, sfilter(difference(box(mapply(toindices, objects(I, T, F, T))), mapply(toindices, objects(I, T, F, T))), compose(even, fork(manhattan, initset, chain(initset, lbind(argmin, mapply(toindices, objects(I, T, F, T))), chain(rbind(compose, initset), lbind(rbind, manhattan), initset))))))
"""

verify_f5b8619d = """
vconcat(hconcat(underfill(I, EIGHT, mapply(vfrontier, mapply(toindices, fgpartition(I)))), underfill(I, EIGHT, mapply(vfrontier, mapply(toindices, fgpartition(I))))), hconcat(underfill(I, EIGHT, mapply(vfrontier, mapply(toindices, fgpartition(I)))), underfill(I, EIGHT, mapply(vfrontier, mapply(toindices, fgpartition(I))))))
"""

verify_f76d97a5 = """
fill(fill(I, ZERO, ofcolor(I, first(remove(FIVE, palette(I))))), first(remove(FIVE, palette(I))), ofcolor(I, FIVE))
"""

verify_f8a8fe49 = """
call(branch(positive(size(sfilter(frontiers(subgrid(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))), I)), hline))), dmirror, identity), paint(fill(call(branch(positive(size(sfilter(frontiers(subgrid(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))), I)), hline))), dmirror, identity), I), color(argmax(partition(I), fork(multiply, height, width))), backdrop(inbox(ofcolor(call(branch(positive(size(sfilter(frontiers(subgrid(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))), I)), hline))), dmirror, identity), I), color(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width)))))))), combine(shift(asobject(vmirror(righthalf(trim(subgrid(ofcolor(call(branch(positive(size(sfilter(frontiers(subgrid(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))), I)), hline))), dmirror, identity), I), color(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))))), call(branch(positive(size(sfilter(frontiers(subgrid(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))), I)), hline))), dmirror, identity), I)))))), add(urcorner(ofcolor(call(branch(positive(size(sfilter(frontiers(subgrid(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))), I)), hline))), dmirror, identity), I), color(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width)))))), UNITY)), shift(asobject(vmirror(lefthalf(trim(subgrid(ofcolor(call(branch(positive(size(sfilter(frontiers(subgrid(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))), I)), hline))), dmirror, identity), I), color(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))))), call(branch(positive(size(sfilter(frontiers(subgrid(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))), I)), hline))), dmirror, identity), I)))))), add(ulcorner(ofcolor(call(branch(positive(size(sfilter(frontiers(subgrid(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))), I)), hline))), dmirror, identity), I), color(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width)))))), add(DOWN, tojvec(invert(width(asobject(vmirror(lefthalf(trim(subgrid(ofcolor(call(branch(positive(size(sfilter(frontiers(subgrid(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))), I)), hline))), dmirror, identity), I), color(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))))), call(branch(positive(size(sfilter(frontiers(subgrid(other(remove(argmin(partition(I), fork(multiply, height, width)), partition(I)), argmax(partition(I), fork(multiply, height, width))), I)), hline))), dmirror, identity), I)))))))))))))))
"""

verify_f8b3ba0a = """
crop(merge(apply(rbind(canvas, UNITY), order(palette(compress(I)), compose(invert, lbind(colorcount, compress(I)))))), DOWN, astuple(decrement(size(palette(compress(I)))), ONE))
"""

verify_f8c80d96 = """
replace(fill(I, other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape)))), mapply(compose(box, fork(insert, compose(lbind(subtract, ulcorner(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)))), rbind(multiply, astuple(maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)), colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape)))))), rbind(manhattan, argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape))))), lowermost(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)))), subtract(uppermost(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape))), uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)), colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape)))))), rbind(manhattan, argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)))))))), maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)), colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape)))))), rbind(manhattan, argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape))))), rightmost(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)))), subtract(leftmost(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape))), leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)), colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape)))))), rbind(manhattan, argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape))))))))))), chain(initset, lbind(add, lrcorner(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)))), rbind(multiply, astuple(maximum(astuple(subtract(lowermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)), colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape)))))), rbind(manhattan, argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape))))), lowermost(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)))), subtract(uppermost(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape))), uppermost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)), colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape)))))), rbind(manhattan, argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)))))))), maximum(astuple(subtract(rightmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)), colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape)))))), rbind(manhattan, argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape))))), rightmost(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)))), subtract(leftmost(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape))), leftmost(argmin(remove(argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape)), colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape)))))), rbind(manhattan, argmin(colorfilter(objects(I, T, F, F), other(palette(I), color(argmin(objects(I, T, F, F), compose(maximum, shape))))), compose(maximum, shape))))))))))))), interval(ONE, double(EIGHT), ONE))), color(argmin(objects(I, T, F, F), compose(maximum, shape))), FIVE)
"""

verify_f8ff0b80 = """
hmirror(merge(apply(rbind(canvas, UNITY), apply(color, order(objects(I, T, T, T), size)))))
"""

verify_f9012d9b = """
subgrid(ofcolor(I, ZERO), paint(I, mapply(lbind(shift, sfilter(asobject(I), compose(flip, matcher(first, ZERO)))), apply(lbind(multiply, astuple(maximum(apply(compose(hperiod, asobject), vsplit(sfilter(dmirror(I), compose(flip, lbind(contained, ZERO))), height(sfilter(dmirror(I), compose(flip, lbind(contained, ZERO))))))), maximum(apply(compose(hperiod, asobject), vsplit(sfilter(I, compose(flip, lbind(contained, ZERO))), height(sfilter(I, compose(flip, lbind(contained, ZERO))))))))), product(interval(invert(increment(divide(height(I), maximum(apply(compose(hperiod, asobject), vsplit(sfilter(dmirror(I), compose(flip, lbind(contained, ZERO))), height(sfilter(dmirror(I), compose(flip, lbind(contained, ZERO)))))))))), increment(increment(divide(height(I), maximum(apply(compose(hperiod, asobject), vsplit(sfilter(dmirror(I), compose(flip, lbind(contained, ZERO))), height(sfilter(dmirror(I), compose(flip, lbind(contained, ZERO)))))))))), ONE), interval(invert(increment(divide(width(I), maximum(apply(compose(hperiod, asobject), vsplit(sfilter(I, compose(flip, lbind(contained, ZERO))), height(sfilter(I, compose(flip, lbind(contained, ZERO)))))))))), increment(increment(divide(width(I), maximum(apply(compose(hperiod, asobject), vsplit(sfilter(I, compose(flip, lbind(contained, ZERO))), height(sfilter(I, compose(flip, lbind(contained, ZERO)))))))))), ONE))))))
"""

verify_fafffa47 = """
fill(canvas(first(intersection(palette(first(call(branch(both(both(equality(numcolors(tophalf(I)), TWO), equality(numcolors(bottomhalf(I)), TWO)), flip(both(equality(numcolors(lefthalf(I)), TWO), equality(numcolors(righthalf(I)), TWO)))), vsplit, hsplit), I, TWO))), palette(last(call(branch(both(both(equality(numcolors(tophalf(I)), TWO), equality(numcolors(bottomhalf(I)), TWO)), flip(both(equality(numcolors(lefthalf(I)), TWO), equality(numcolors(righthalf(I)), TWO)))), vsplit, hsplit), I, TWO))))), shape(first(call(branch(both(both(equality(numcolors(tophalf(I)), TWO), equality(numcolors(bottomhalf(I)), TWO)), flip(both(equality(numcolors(lefthalf(I)), TWO), equality(numcolors(righthalf(I)), TWO)))), vsplit, hsplit), I, TWO)))), TWO, intersection(ofcolor(first(call(branch(both(both(equality(numcolors(tophalf(I)), TWO), equality(numcolors(bottomhalf(I)), TWO)), flip(both(equality(numcolors(lefthalf(I)), TWO), equality(numcolors(righthalf(I)), TWO)))), vsplit, hsplit), I, TWO)), first(intersection(palette(first(call(branch(both(both(equality(numcolors(tophalf(I)), TWO), equality(numcolors(bottomhalf(I)), TWO)), flip(both(equality(numcolors(lefthalf(I)), TWO), equality(numcolors(righthalf(I)), TWO)))), vsplit, hsplit), I, TWO))), palette(last(call(branch(both(both(equality(numcolors(tophalf(I)), TWO), equality(numcolors(bottomhalf(I)), TWO)), flip(both(equality(numcolors(lefthalf(I)), TWO), equality(numcolors(righthalf(I)), TWO)))), vsplit, hsplit), I, TWO)))))), ofcolor(last(call(branch(both(both(equality(numcolors(tophalf(I)), TWO), equality(numcolors(bottomhalf(I)), TWO)), flip(both(equality(numcolors(lefthalf(I)), TWO), equality(numcolors(righthalf(I)), TWO)))), vsplit, hsplit), I, TWO)), first(intersection(palette(first(call(branch(both(both(equality(numcolors(tophalf(I)), TWO), equality(numcolors(bottomhalf(I)), TWO)), flip(both(equality(numcolors(lefthalf(I)), TWO), equality(numcolors(righthalf(I)), TWO)))), vsplit, hsplit), I, TWO))), palette(last(call(branch(both(both(equality(numcolors(tophalf(I)), TWO), equality(numcolors(bottomhalf(I)), TWO)), flip(both(equality(numcolors(lefthalf(I)), TWO), equality(numcolors(righthalf(I)), TWO)))), vsplit, hsplit), I, TWO))))))))
"""

verify_fcb5c309 = """
replace(subgrid(argmax(colorfilter(objects(I, T, F, F), extract(palette(I), fork(both, chain(compose(flip, lbind(contained, F)), lbind(apply, fork(equality, toindices, box)), lbind(colorfilter, objects(I, T, F, F))), compose(chain(rbind(greater, TWO), minimum, lbind(apply, compose(minimum, shape))), lbind(colorfilter, objects(I, T, F, F)))))), chain(rbind(colorcount, argmin(remove(extract(palette(I), fork(both, chain(compose(flip, lbind(contained, F)), lbind(apply, fork(equality, toindices, box)), lbind(colorfilter, objects(I, T, F, F))), compose(chain(rbind(greater, TWO), minimum, lbind(apply, compose(minimum, shape))), lbind(colorfilter, objects(I, T, F, F))))), palette(I)), lbind(colorcount, I))), rbind(toobject, I), backdrop)), I), extract(palette(I), fork(both, chain(compose(flip, lbind(contained, F)), lbind(apply, fork(equality, toindices, box)), lbind(colorfilter, objects(I, T, F, F))), compose(chain(rbind(greater, TWO), minimum, lbind(apply, compose(minimum, shape))), lbind(colorfilter, objects(I, T, F, F))))), argmin(remove(extract(palette(I), fork(both, chain(compose(flip, lbind(contained, F)), lbind(apply, fork(equality, toindices, box)), lbind(colorfilter, objects(I, T, F, F))), compose(chain(rbind(greater, TWO), minimum, lbind(apply, compose(minimum, shape))), lbind(colorfilter, objects(I, T, F, F))))), palette(I)), lbind(colorcount, I)))
"""

verify_fcc82909 = """
fill(I, THREE, mapply(compose(backdrop, fork(insert, compose(lbind(add, DOWN), llcorner), compose(initset, fork(add, compose(rbind(add, RIGHT), compose(lbind(add, DOWN), llcorner)), chain(toivec, decrement, numcolors))))), objects(I, F, F, T)))
"""

verify_feca6190 = """
paint(canvas(ZERO, multiply(UNITY, multiply(width(I), size(sfilter(asobject(I), compose(flip, matcher(first, ZERO))))))), mapply(fork(recolor, first, chain(rbind(shoot, UP_RIGHT), lbind(astuple, decrement(multiply(width(I), size(sfilter(asobject(I), compose(flip, matcher(first, ZERO))))))), compose(last, last))), sfilter(asobject(I), compose(flip, matcher(first, ZERO)))))
"""

verify_ff28f65a = """
merge(hsplit(fill(canvas(argmax(remove(TWO, palette(I)), lbind(colorcount, I)), astuple(ONE, NINE)), ONE, apply(tojvec, interval(ZERO, double(size(colorfilter(objects(hconcat(I, canvas(argmax(remove(TWO, palette(I)), lbind(colorcount, I)), shape(I))), T, F, T), TWO))), TWO))), THREE))
"""

verify_ff805c23 = """
subgrid(ofcolor(I, argmin(sfilter(palette(I), compose(fork(both, fork(both, fork(equality, identity, hmirror), fork(equality, identity, vmirror)), fork(both, fork(equality, identity, cmirror), fork(equality, identity, dmirror))), fork(paint, fork(paint, fork(paint, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(first, fork(rapply, compose(initset, compose(rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(cmirror, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))))))), compose(first, fork(rapply, chain(initset, rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first))), compose(hmirror, fork(paint, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(first, fork(rapply, compose(initset, compose(rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(cmirror, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))))))))))), compose(first, fork(rapply, chain(initset, rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first))), compose(vmirror, fork(paint, fork(paint, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(first, fork(rapply, compose(initset, compose(rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(cmirror, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))))))), compose(first, fork(rapply, chain(initset, rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first))), compose(hmirror, fork(paint, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(first, fork(rapply, compose(initset, compose(rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(cmirror, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))))))))))))))))), lbind(colorcount, I))), call(fork(paint, fork(paint, fork(paint, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(first, fork(rapply, compose(initset, compose(rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(cmirror, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))))))), compose(first, fork(rapply, chain(initset, rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first))), compose(hmirror, fork(paint, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(first, fork(rapply, compose(initset, compose(rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(cmirror, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))))))))))), compose(first, fork(rapply, chain(initset, rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first))), compose(vmirror, fork(paint, fork(paint, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(first, fork(rapply, compose(initset, compose(rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(cmirror, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))))))), compose(first, fork(rapply, chain(initset, rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first))), compose(hmirror, fork(paint, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(first, fork(rapply, compose(initset, compose(rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(cmirror, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))))))))))))))), argmin(sfilter(palette(I), compose(fork(both, fork(both, fork(equality, identity, hmirror), fork(equality, identity, vmirror)), fork(both, fork(equality, identity, cmirror), fork(equality, identity, dmirror))), fork(paint, fork(paint, fork(paint, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(first, fork(rapply, compose(initset, compose(rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(cmirror, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))))))), compose(first, fork(rapply, chain(initset, rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first))), compose(hmirror, fork(paint, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(first, fork(rapply, compose(initset, compose(rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(cmirror, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))))))))))), compose(first, fork(rapply, chain(initset, rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first))), compose(vmirror, fork(paint, fork(paint, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(first, fork(rapply, compose(initset, compose(rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(cmirror, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))))))), compose(first, fork(rapply, chain(initset, rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first))), compose(hmirror, fork(paint, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(first, fork(rapply, compose(initset, compose(rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))), compose(cmirror, compose(lbind(paint, I), chain(chain(first, rbind(rapply, dmirror(I)), initset), rbind(compose, asobject), chain(lbind(rbind, sfilter), lbind(compose, flip), lbind(matcher, first)))))))))))))))))), lbind(colorcount, I))))
"""

